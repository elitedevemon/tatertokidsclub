{"version":3,"file":"site-routes.lazy-f14ad937.js","sources":["../../../resources/client/titles/site-section-heading.tsx","../../../common/foundation/resources/client/channels/requests/use-infinite-channel-content.ts","../../../resources/client/channels/channel-header/channel-sort-button.tsx","../../../resources/client/channels/channel-header/use-channel-layouts.ts","../../../resources/client/channels/channel-header/channel-layout-button.tsx","../../../resources/client/user-lists/user-list-byline.tsx","../../../resources/client/sharing/copy-link-icon.tsx","../../../common/foundation/resources/client/ui/library/utils/urls/share-link-socially.ts","../../../resources/client/sharing/share-menu-trigger.tsx","../../../resources/client/user-lists/user-list-link.tsx","../../../resources/client/user-lists/user-list-details.tsx","../../../resources/client/channels/channel-header/channel-header.tsx","../../../resources/client/channels/content-grid/content-grid-layout.tsx","../../../resources/client/people/person-age.tsx","../../../resources/client/news/news-article-grid-item.tsx","../../../resources/client/channels/content-grid/title-grid-item.tsx","../../../resources/client/channels/content-grid/channel-content-grid-item.tsx","../../../resources/client/channels/content-grid/channel-content-grid.tsx","../../../resources/client/search/search-page.tsx","../../../node_modules/just-debounce-it/index.mjs","../../../resources/client/channels/carousel/use-carousel.ts","../../../resources/client/channels/carousel/channel-content-carousel.tsx","../../../resources/client/channels/channel-content-slider.tsx","../../../resources/client/news/news-article-source-link.tsx","../../../resources/client/news/news-article-byline.tsx","../../../resources/client/channels/channel-content-news.tsx","../../../resources/client/channels/channel-content-list-item.tsx","../../../resources/client/channels/channel-content-list.tsx","../../../resources/client/channels/channel-content.tsx","../../../resources/client/channels/channel-page.tsx","../../../resources/client/channels/homepage-channel-page.tsx","../../../resources/client/videos/requests/use-watch-page-video.ts","../../../common/foundation/resources/client/comments/requests/use-comments.ts","../../../common/foundation/resources/client/comments/requests/use-create-comment.ts","../../../common/foundation/resources/client/comments/new-comment-form.tsx","../../../common/foundation/resources/client/votes/requests/use-store-vote.ts","../../../common/foundation/resources/client/votes/thumb-buttons.tsx","../../../common/foundation/resources/client/reports/requests/use-submit-report.ts","../../../common/foundation/resources/client/comments/comment-list/comment-list-item.tsx","../../../common/foundation/resources/client/comments/comment-list/account-required-card.tsx","../../../common/foundation/resources/client/comments/comment-list/comment-list.tsx","../../../common/foundation/resources/client/reports/requests/use-delete-report.ts","../../../resources/client/videos/use-is-streaming-mode.ts","../../../resources/client/videos/watch-page/watch-page-title-details.tsx","../../../resources/client/videos/watch-page/watch-page-aside.tsx","../../../resources/client/videos/watch-page/watch-page-alternative-videos.tsx","../../../resources/client/videos/watch-page/watch-page.tsx","../../../resources/client/titles/pages/title-page/sections/title-page-image-grid.tsx","../../../resources/client/titles/pages/title-page/title-credits-grid/title-credits-grid.tsx","../../../resources/client/titles/pages/title-page/sections/title-page-cast.tsx","../../../resources/client/titles/requests/use-related-titles.ts","../../../resources/client/titles/related-titles-panel.tsx","../../../resources/client/titles/pages/title-page/sections/title-page-season-grid.tsx","../../../resources/client/titles/compact-credits.tsx","../../../resources/client/titles/genre-link.tsx","../../../resources/client/titles/pages/title-page/sections/title-news/use-title-news.ts","../../../resources/client/titles/pages/title-page/sections/title-news/title-news.tsx","../../../resources/client/reviews/review-list/new-review-form.tsx","../../../resources/client/reviews/requests/use-submit-review-feedback.ts","../../../resources/client/reviews/review-list/review-list-item.tsx","../../../resources/client/reviews/review-list/review-list.tsx","../../../resources/client/titles/pages/title-page/sections/title-page-review-list.tsx","../../../resources/client/titles/pages/title-page/sections/title-page-video-grid.tsx","../../../resources/client/titles/pages/title-page/sections/title-page-episode-grid.tsx","../../../node_modules/linkify-string/dist/linkify-string.es.js","../../../common/foundation/resources/client/ui/library/utils/hooks/use-linkified-string.ts","../../../common/foundation/resources/client/ui/other/truncated-description.tsx","../../../resources/client/titles/pages/title-page/title-page-main-content.tsx","../../../resources/client/titles/pages/title-page/title-page-header-layout.tsx","../../../resources/client/user-lists/requests/use-current-user-watchlist.ts","../../../resources/client/user-lists/requests/use-add-to-watchlist.ts","../../../resources/client/user-lists/requests/use-remove-from-watchlist.ts","../../../resources/client/user-lists/watchlist-button.tsx","../../../resources/client/titles/pages/title-page/title-page-header.tsx","../../../resources/client/titles/pages/title-page/title-page-header-image.tsx","../../../resources/client/titles/pages/title-page/title-page-aside-layout.tsx","../../../resources/client/titles/keyword-link.tsx","../../../resources/client/titles/production-country-link.tsx","../../../resources/client/titles/pages/title-page/watch-now-button.tsx","../../../resources/client/titles/pages/title-page/title-page-aside.tsx","../../../resources/client/titles/pages/title-page/title-page.tsx","../../../resources/client/titles/pages/title-videos-page.tsx","../../../resources/client/titles/pages/title-images-page.tsx","../../../resources/client/titles/pages/title-full-credits-page.tsx","../../../resources/client/seasons/season-page.tsx","../../../resources/client/episodes/episode-page-header.tsx","../../../resources/client/episodes/episode-page.tsx","../../../resources/client/episodes/episode-videos-page.tsx","../../../resources/client/episodes/episode-full-credits-page.tsx","../../../resources/client/people/person-page/person-page-aside.tsx","../../../resources/client/people/requests/use-full-person-credits-for-title.ts","../../../resources/client/people/person-page/character-or-job.tsx","../../../resources/client/people/person-page/person-page-credits.tsx","../../../resources/client/people/person-page/person-page.tsx","../../../resources/client/news/news-article-page.tsx","../../../resources/client/user-lists/requests/use-delete-list.ts","../../../resources/client/user-lists/pages/user-lists-index-page/user-list-index-item.tsx","../../../resources/client/profile/requests/use-profile-lists.ts","../../../resources/client/user-lists/pages/user-lists-index-page/user-lists-index-page.tsx","../../../resources/client/profile/requests/use-user-profile.ts","../../../resources/client/profile/header/profile-description.tsx","../../../common/foundation/resources/client/users/queries/use-followed-users.ts","../../../common/foundation/resources/client/users/queries/use-follow-user.ts","../../../common/foundation/resources/client/users/queries/use-unfollow-user.ts","../../../common/foundation/resources/client/users/follow-button.tsx","../../../resources/client/profile/profile-links-form.tsx","../../../resources/client/profile/requests/use-update-user-profile.ts","../../../resources/client/profile/edit-user-profile-dialog.tsx","../../../resources/client/profile/header/profile-stats-list.tsx","../../../common/foundation/resources/client/ui/other/remote-favicon.tsx","../../../resources/client/profile/header/profile-links.tsx","../../../resources/client/profile/header/profile-page-header.tsx","../../../resources/client/profile/user-profile-page.tsx","../../../resources/client/profile/panels/profile-lists-panel.tsx","../../../resources/client/profile/requests/use-profile-ratings.ts","../../../resources/client/channels/content-grid/episode-grid-item.tsx","../../../resources/client/profile/panels/profile-ratings-panel.tsx","../../../resources/client/profile/requests/use-profile-reviews.ts","../../../resources/client/profile/panels/profile-reviews-panel.tsx","../../../resources/client/profile/requests/use-profile-comments.ts","../../../resources/client/profile/panels/profile-comments-panel.tsx","../../../resources/client/profile/requests/use-profile-followers.ts","../../../resources/client/profile/follower-list-item.tsx","../../../resources/client/profile/panels/profile-followers-panel.tsx","../../../resources/client/profile/requests/use-profile-followed-users.ts","../../../resources/client/profile/panels/profile-followed-users-panel.tsx","../../../common/foundation/resources/client/ui/other/dynamic-homepage.tsx","../../../resources/client/landing-page/landing-page-trending-titles.tsx","../../../resources/client/landing-page/landing-page.tsx","../../../resources/client/homepage.tsx"],"sourcesContent":["import {IconButton} from '@ui/buttons/icon-button';\nimport {Link} from 'react-router';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface Props {\n  children: ReactNode;\n  titleAppend?: ReactNode;\n  link?: string;\n  fontSize?: string;\n  fontWeight?: string;\n  margin?: string;\n  headingType?: 'h1' | 'h2' | 'div';\n  className?: string;\n  description?: ReactNode;\n  descriptionFontSize?: string;\n  actions?: ReactNode;\n  hideBorder?: boolean;\n  wrap?: boolean;\n}\nexport function SiteSectionHeading({\n  children,\n  titleAppend,\n  link,\n  fontSize = 'text-2xl md:text-3xl',\n  fontWeight = 'font-bold',\n  margin = 'mb-20',\n  className,\n  headingType: HeadingType = 'h2',\n  description,\n  descriptionFontSize = 'text-base',\n  actions,\n  hideBorder,\n  wrap = false,\n}: Props) {\n  const title = link ? (\n    <Link\n      to={link}\n      className=\"rounded outline-none transition-colors hover:underline focus-visible:ring-2 focus-visible:ring-offset-2\"\n    >\n      {children}\n    </Link>\n  ) : (\n    children\n  );\n\n  return (\n    <section className={clsx(className, margin)}>\n      <div\n        className={clsx(\n          'flex items-center gap-x-44 gap-y-14 max-md:overflow-x-auto',\n          wrap && 'flex-wrap',\n        )}\n      >\n        <div className=\"flex-auto\">\n          <div\n            className={clsx(\n              'relative flex items-center gap-4',\n              !hideBorder &&\n                'pl-14 before:absolute before:left-0 before:h-5/6 before:w-4 before:rounded before:bg-primary',\n            )}\n          >\n            <HeadingType className={clsx(fontSize, fontWeight)}>\n              {title}\n            </HeadingType>\n            {titleAppend && (\n              <span className=\"pt-4 text-base text-muted\">{titleAppend}</span>\n            )}\n            {link && (\n              <IconButton\n                elementType={Link}\n                to={link}\n                size=\"sm\"\n                iconSize=\"lg\"\n                className=\"mt-4 max-md:hidden\"\n              >\n                <KeyboardArrowRightIcon />\n              </IconButton>\n            )}\n          </div>\n        </div>\n        {actions && (\n          <div className=\"flex flex-shrink-0 items-center gap-4\">{actions}</div>\n        )}\n      </div>\n      {description && (\n        <div className={clsx('mt-6', descriptionFontSize)}>{description}</div>\n      )}\n    </section>\n  );\n}\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {Channel, ChannelContentItem} from '@common/channels/channel';\nimport {\n  channelEndpoint,\n  channelQueryKey,\n} from '@common/channels/requests/use-channel';\nimport {useChannelQueryParams} from '@common/channels/use-channel-query-params';\n\nexport function useInfiniteChannelContent<\n  T extends ChannelContentItem = ChannelContentItem,\n>(channel: Channel<T>) {\n  const queryParams = useChannelQueryParams(channel);\n  return useInfiniteData<T>({\n    willSortOrFilter: true,\n    initialPage: channel.content,\n    queryKey: channelQueryKey(channel.id),\n    endpoint: channelEndpoint(channel.id),\n    queryParams: {\n      returnContentOnly: 'true',\n      ...queryParams,\n    },\n  });\n}\n","import {Channel, ChannelContentItem} from '@common/channels/channel';\nimport {\n  channelContentConfig,\n  Sort,\n} from '@app/admin/channels/channel-content-config';\nimport {Button} from '@ui/buttons/button';\nimport {SortIcon} from '@ui/icons/material/Sort';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {useSearchParams} from 'react-router';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {message} from '@ui/i18n/message';\nimport {IconButton} from '@ui/buttons/icon-button';\n\ninterface ChannelSortButtonProps<T = ChannelContentItem> {\n  channel: Channel;\n}\nexport function ChannelSortButton<T = ChannelContentItem>({\n  channel,\n}: ChannelSortButtonProps<T>) {\n  const config = channelContentConfig.models[channel.config.contentModel];\n  const sortMethods =\n    config?.sortMethods.map(method => ({\n      key: method,\n      label: channelContentConfig.sortingMethods[method].label,\n    })) || [];\n\n  if (channel.config.contentType === 'manual') {\n    sortMethods.unshift({\n      key: Sort.curated,\n      label: message('Default order'),\n    });\n  }\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const selectedValue =\n    searchParams.get('order') || channel.config.contentOrder;\n\n  if (sortMethods?.length < 2) {\n    return null;\n  }\n\n  const label = sortMethods?.find(\n    method => method.key === selectedValue,\n  )?.label;\n\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      showCheckmark\n      selectedValue={selectedValue}\n      onSelectionChange={newValue => {\n        // order by date added to channel, if content is cured\n        if (\n          newValue === Sort.recent &&\n          channel.config.contentType === 'manual'\n        ) {\n          newValue = 'channelables.created_at:desc';\n        }\n\n        setSearchParams(\n          prev => {\n            prev.set('order', newValue as string);\n            return prev;\n          },\n          {\n            replace: true,\n          },\n        );\n      }}\n    >\n      <span role=\"button\" aria-label=\"Toggle menu\">\n        <IconButton className=\"md:hidden\" role=\"presentation\">\n          <SortIcon />\n        </IconButton>\n        <Button\n          startIcon={<SortIcon />}\n          className=\"max-md:hidden\"\n          role=\"presentation\"\n        >\n          {label ? <Trans {...label} /> : <Trans message=\"Popularity\" />}\n        </Button>\n      </span>\n      <Menu>\n        {sortMethods?.map(method => (\n          <MenuItem key={method.key} value={method.key}>\n            <Trans {...method.label} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {Channel} from '@common/channels/channel';\nimport {channelContentConfig} from '@app/admin/channels/channel-content-config';\nimport {useCookie} from '@ui/utils/hooks/use-cookie';\n\nexport function useChannelLayouts(channel: Channel) {\n  const config = channelContentConfig.models[channel.config.contentModel];\n  const availableLayouts = config?.layoutMethods\n    .filter(m => channelContentConfig.userSelectableLayouts.includes(m))\n    .map(method => ({\n      key: method,\n      label: channelContentConfig.layoutMethods[method].label,\n      icon: channelContentConfig.layoutMethods[method].icon,\n    }));\n\n  const [selectedLayout, setSelectedLayout] = useCookie(\n    `channel-layout-${channel.config.contentModel}`,\n    channel.config.selectedLayout || channel.config.layout,\n  );\n\n  return {selectedLayout, setSelectedLayout, availableLayouts};\n}\n","import {Channel} from '@common/channels/channel';\nimport {Trans} from '@ui/i18n/trans';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {useChannelLayouts} from '@app/channels/channel-header/use-channel-layouts';\nimport {Button} from '@ui/buttons/button';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {GridViewIcon} from '@ui/icons/material/GridView';\n\ninterface Props {\n  channel: Channel;\n}\nexport function ChannelLayoutButton({channel}: Props) {\n  const {selectedLayout, setSelectedLayout, availableLayouts} =\n    useChannelLayouts(channel);\n\n  if (availableLayouts?.length < 2) {\n    return null;\n  }\n\n  const layoutConfig = availableLayouts?.find(\n    method => method.key === selectedLayout,\n  );\n\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      showCheckmark\n      selectedValue={selectedLayout}\n      onSelectionChange={newValue => setSelectedLayout(newValue as string)}\n    >\n      <span role=\"button\" aria-label=\"Toggle menu\">\n        <IconButton className=\"md:hidden\" role=\"presentation\">\n          {layoutConfig?.icon || <GridViewIcon />}\n        </IconButton>\n        <Button\n          role=\"presentation\"\n          className=\"max-md:hidden\"\n          startIcon={layoutConfig?.icon || <GridViewIcon />}\n        >\n          {layoutConfig?.label ? (\n            <Trans {...layoutConfig.label} />\n          ) : (\n            <Trans message=\"Popularity\" />\n          )}\n        </Button>\n      </span>\n      <Menu>\n        {availableLayouts?.map(method => (\n          <MenuItem key={method.key} value={method.key}>\n            <Trans {...method.label} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {User} from '@ui/types/user';\nimport React, {useContext} from 'react';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {UserAvatar} from '@common/auth/user-avatar';\nimport {Trans} from '@ui/i18n/trans';\nimport {Link} from 'react-router';\n\ninterface Props {\n  user: User;\n}\nexport function UserListByline({user}: Props) {\n  const {auth} = useContext(SiteConfigContext);\n  return (\n    <div className=\"mr-24 flex flex-shrink-0 items-center gap-8\">\n      <UserAvatar user={user} circle size=\"sm\" />\n      <div>\n        <Trans\n          message=\"List by <a>:name</a>\"\n          values={{\n            a: () => (\n              <Link\n                to={auth.getUserProfileLink!(user)}\n                className=\"font-bold hover:underline\"\n              >\n                {user.name}\n              </Link>\n            ),\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import {createSvgIcon} from '@ui/icons/create-svg-icon';\n\nexport const CopyLinkIcon = createSvgIcon(\n  <path d=\"M 4 2 C 2.895 2 2 2.895 2 4 L 2 18 L 4 18 L 4 4 L 18 4 L 18 2 L 4 2 z M 8 6 C 6.895 6 6 6.895 6 8 L 6 20 C 6 21.105 6.895 22 8 22 L 20 22 C 21.105 22 22 21.105 22 20 L 22 8 C 22 6.895 21.105 6 20 6 L 8 6 z M 8 8 L 20 8 L 20 20 L 8 20 L 8 8 z M 16 9.0058594 C 15.230215 9.0058594 14.460443 9.2973698 13.878906 9.8789062 L 12.607422 11.150391 L 14.021484 12.564453 L 12.556641 14.029297 L 11.142578 12.615234 L 9.8789062 13.878906 C 8.7158332 15.041979 8.7158332 16.958021 9.8789062 18.121094 C 10.460397 18.702585 11.234094 19 12 19 C 12.765906 19 13.539603 18.702585 14.121094 18.121094 L 15.384766 16.857422 L 13.970703 15.443359 L 15.457031 13.957031 L 14.042969 12.542969 L 15.292969 11.292969 C 15.691896 10.894042 16.308104 10.894042 16.707031 11.292969 C 17.105958 11.691896 17.105958 12.308104 16.707031 12.707031 L 15.464844 13.949219 L 16.878906 15.363281 L 18.121094 14.121094 C 19.284167 12.958021 19.284167 11.041979 18.121094 9.8789062 C 17.539557 9.2973698 16.769785 9.0058594 16 9.0058594 z M 12.542969 14.042969 L 13.957031 15.457031 L 12.707031 16.707031 C 12.506522 16.90754 12.258094 17 12 17 C 11.741906 17 11.493478 16.90754 11.292969 16.707031 C 10.894042 16.308104 10.894042 15.691896 11.292969 15.292969 L 12.542969 14.042969 z\"></path>,\n);\n","export type ShareableNetworks =\n  | 'facebook'\n  | 'twitter'\n  | 'pinterest'\n  | 'tumblr'\n  | 'blogger'\n  | 'mail';\n\nexport function shareLinkSocially(\n  network: ShareableNetworks,\n  link: string,\n  name?: string,\n  image?: string\n) {\n  const url = generateShareUrl(network, link, name, image);\n\n  if (network === 'mail') {\n    window.location.href = url;\n  } else {\n    openNewWindow(url);\n  }\n}\n\nfunction openNewWindow(url: string) {\n  const width = 575,\n    height = 400,\n    left = (window.innerWidth - width) / 2,\n    top = (window.innerHeight - height) / 2,\n    opts =\n      'status=1, scrollbars=1' +\n      ',width=' +\n      width +\n      ',height=' +\n      height +\n      ',top=' +\n      top +\n      ',left=' +\n      left;\n\n  window.open(url, 'share', opts);\n}\n\nfunction generateShareUrl(\n  type: ShareableNetworks,\n  link: string,\n  name?: string,\n  image?: string\n): string {\n  switch (type) {\n    case 'facebook':\n      return 'https://www.facebook.com/sharer/sharer.php?u=' + link;\n    case 'twitter':\n      return `https://twitter.com/intent/tweet?text=${name}&url=${link}`;\n    case 'pinterest':\n      return (\n        'https://pinterest.com/pin/create/button/?url=' +\n        link +\n        '&media=' +\n        image\n      );\n    case 'tumblr':\n      const base =\n        'https://www.tumblr.com/widgets/share/tool?shareSource=legacy&canonicalUrl=&posttype=photo&title=&caption=';\n      return base + name + '&content=' + image + '&url=' + link;\n    case 'blogger':\n      return (\n        'https://www.blogger.com/blog_this.pyra?t&u=' + link + '&n=' + name\n      );\n    case 'mail':\n      return `mailto:?subject=Check out this link.&body=${link}`;\n  }\n}\n","import {Menu, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {Item} from '@ui/forms/listbox/item';\nimport {Trans} from '@ui/i18n/trans';\nimport {FacebookIcon} from '@ui/icons/social/facebook';\nimport {TwitterIcon} from '@ui/icons/social/twitter';\nimport useClipboard from 'react-use-clipboard';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {ReactElement} from 'react';\nimport {CopyLinkIcon} from '@app/sharing/copy-link-icon';\nimport {shareLinkSocially} from '@ui/utils/urls/share-link-socially';\n\ninterface Props {\n  link: string;\n  children: ReactElement;\n}\nexport function ShareMenuTrigger({link, children}: Props) {\n  const {trans} = useTrans();\n  const [, setUrlCopied] = useClipboard(link);\n\n  return (\n    <MenuTrigger>\n      {children}\n      <Menu>\n        <Item\n          value=\"clipboard\"\n          startIcon={<CopyLinkIcon />}\n          onSelected={() => {\n            setUrlCopied();\n            toast.positive(message('Copied link to clipboard'));\n          }}\n        >\n          <Trans message=\"Copy to clipboard\" />\n        </Item>\n        <Item\n          value=\"facebook\"\n          startIcon={<FacebookIcon />}\n          onClick={() => {\n            shareLinkSocially(\n              'facebook',\n              link,\n              trans(message('Check out this link')),\n            );\n          }}\n        >\n          <Trans message=\"Share to facebook\" />\n        </Item>\n        <Item\n          value=\"twitter\"\n          startIcon={<TwitterIcon />}\n          onClick={() => {\n            shareLinkSocially(\n              'twitter',\n              link,\n              trans(message('Check out this link')),\n            );\n          }}\n        >\n          <Trans message=\"Share to twitter\" />\n        </Item>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import React, {useMemo} from 'react';\nimport {\n  BaseMediaLink,\n  BaseMediaLinkProps,\n  getBaseMediaLink,\n} from '@app/base-media-link';\nimport {Channel} from '@common/channels/channel';\nimport {Trans} from '@ui/i18n/trans';\nimport {useAuth} from '@common/auth/use-auth';\n\ninterface Props extends Omit<BaseMediaLinkProps, 'link'> {\n  list: Channel;\n}\nexport function UserListLink({list, children, ...linkProps}: Props) {\n  const {user} = useAuth();\n  const link = useMemo(() => {\n    return getUserListLink(list);\n  }, [list]);\n\n  let content;\n\n  if (children) {\n    content = children;\n  } else if (list.internal && list.name === 'watchlist') {\n    if (list.user_id !== user?.id) {\n      return <Trans message=\"Watchlist\" />;\n    } else {\n      content = <Trans message=\"Watchlist\" />;\n    }\n  } else {\n    content = list.name;\n  }\n\n  return (\n    <BaseMediaLink {...linkProps} link={link}>\n      {content}\n    </BaseMediaLink>\n  );\n}\n\ninterface Options {\n  absolute?: boolean;\n  season?: number | string;\n  episode?: number | string;\n}\n\nexport function getUserListLink(\n  list: Channel,\n  {absolute}: Options = {},\n): string {\n  if (list.name === 'watchlist') {\n    return getBaseMediaLink('/watchlist', {\n      absolute,\n    });\n  }\n  return getBaseMediaLink(`/lists/${list.id}`, {\n    absolute,\n  });\n}\n","import {Trans} from '@ui/i18n/trans';\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\nimport {LockIcon} from '@ui/icons/material/Lock';\nimport React, {Fragment} from 'react';\nimport {LockOpenIcon} from '@ui/icons/material/LockOpen';\nimport clsx from 'clsx';\nimport {Channel} from '@common/channels/channel';\nimport {Button} from '@ui/buttons/button';\nimport {ShareIcon} from '@ui/icons/material/Share';\nimport {ShareMenuTrigger} from '@app/sharing/share-menu-trigger';\nimport {getUserListLink} from '@app/user-lists/user-list-link';\nimport {Link} from 'react-router';\nimport {useAuth} from '@common/auth/use-auth';\n\ninterface Props {\n  list: Channel;\n  className?: string;\n  showShareButton?: boolean;\n  showVisibility?: boolean;\n  showEditButton?: boolean;\n}\nexport function UserListDetails({\n  list,\n  className,\n  showShareButton,\n  showVisibility = true,\n  showEditButton = false,\n}: Props) {\n  const {user} = useAuth();\n  return (\n    <div\n      className={clsx(\n        'flex flex-shrink-0 items-center gap-4 whitespace-nowrap text-muted',\n        className,\n      )}\n    >\n      {showShareButton && list.public && (\n        <Fragment>\n          <ShareButton list={list} />\n          <Divider marginLeft=\"ml-2\" />\n        </Fragment>\n      )}\n      {list.items_count ? (\n        <Fragment>\n          <Trans message=\":count items\" values={{count: list.items_count}} />\n          <Divider />\n        </Fragment>\n      ) : null}\n      <span>\n        <Trans\n          message=\"Updated :date\"\n          values={{\n            date: <FormattedRelativeTime date={list.updated_at} />,\n          }}\n        />\n      </span>\n      {showVisibility && (\n        <Fragment>\n          <Divider />\n          {list.public ? <LockOpenIcon size=\"sm\" /> : <LockIcon size=\"sm\" />}\n          <div>\n            {list.public ? (\n              <Trans message=\"Public\" />\n            ) : (\n              <Trans message=\"Private\" />\n            )}\n          </div>\n        </Fragment>\n      )}\n      {user?.id === list.user_id && showEditButton && (\n        <Fragment>\n          <Divider marginLeft=\"ml-10\" />\n          <Button\n            elementType={Link}\n            to={`${getUserListLink(list)}/edit`}\n            variant=\"outline\"\n            size=\"2xs\"\n            color=\"primary\"\n          >\n            <Trans message=\"Edit\" />\n          </Button>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\ninterface ShareButtonProps {\n  list: Channel;\n}\nfunction ShareButton({list}: ShareButtonProps) {\n  const link = getUserListLink(list, {absolute: true});\n  return (\n    <ShareMenuTrigger link={link}>\n      <Button startIcon={<ShareIcon />} sizeClassName=\"px-10 py-6\">\n        <Trans message=\"Share\" />\n      </Button>\n    </ShareMenuTrigger>\n  );\n}\n\ninterface DividerProps {\n  marginLeft?: string;\n}\nfunction Divider({marginLeft = 'ml-12'}: DividerProps) {\n  return <div className={clsx('mr-10 h-20 w-1 bg-divider', marginLeft)} />;\n}\n","import React, {Fragment, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {Channel} from '@common/channels/channel';\nimport {FilterList} from '@common/datatable/filters/filter-list/filter-list';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {useBackendFilterUrlParams} from '@common/datatable/filters/backend-filter-url-params';\nimport {MOVIE_MODEL, SERIES_MODEL, TITLE_MODEL} from '@app/titles/models/title';\nimport {ChannelSortButton} from '@app/channels/channel-header/channel-sort-button';\nimport {AddFilterButton} from '@common/datatable/filters/add-filter-button';\nimport {TuneIcon} from '@ui/icons/material/Tune';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Trans} from '@ui/i18n/trans';\nimport {useParams} from 'react-router';\nimport {ChannelLayoutButton} from '@app/channels/channel-header/channel-layout-button';\nimport {useTitleIndexFilters} from '@app/titles/use-title-index-filters';\nimport {FilterListSkeleton} from '@common/datatable/filters/filter-list/filter-list-skeleton';\nimport {UserListByline} from '@app/user-lists/user-list-byline';\nimport {UserListDetails} from '@app/user-lists/user-list-details';\n\nconst FilterModelTypes = [TITLE_MODEL, MOVIE_MODEL, SERIES_MODEL];\n\ninterface Props {\n  channel: Channel;\n  margin?: string;\n  isNested: boolean;\n  actions?: ReactNode;\n}\nexport function ChannelHeader({\n  channel,\n  isNested,\n  actions,\n  margin = isNested ? 'mb-16 md:mb-30' : 'mb-20 md:mb-40',\n}: Props) {\n  const shouldShowFilterButton =\n    !isNested &&\n    FilterModelTypes.includes(channel.config.contentModel) &&\n    channel.config.contentType === 'listAll';\n\n  const {encodedFilters} = useBackendFilterUrlParams();\n  const {filters, filtersLoading} = useTitleIndexFilters({\n    disabled: !shouldShowFilterButton,\n  });\n\n  if (channel.config.hideTitle) {\n    return null;\n  }\n\n  return (\n    <section className={clsx(margin)}>\n      <ChannelTitle\n        channel={channel}\n        isNested={isNested}\n        actions={\n          <Fragment>\n            {actions}\n            {!isNested && <ChannelSortButton channel={channel} />}\n            {shouldShowFilterButton && (\n              <AddFilterButton\n                icon={<TuneIcon />}\n                color={null}\n                variant=\"text\"\n                disabled={filtersLoading}\n                filters={filters}\n              />\n            )}\n            {!isNested && <ChannelLayoutButton channel={channel} />}\n          </Fragment>\n        }\n      />\n      {shouldShowFilterButton && (\n        <div className=\"mt-14\">\n          <AnimatePresence initial={false} mode=\"wait\">\n            {filtersLoading && encodedFilters ? (\n              <FilterListSkeleton />\n            ) : (\n              <m.div key=\"filter-list\" {...opacityAnimation}>\n                <FilterList filters={filters} />\n              </m.div>\n            )}\n          </AnimatePresence>\n        </div>\n      )}\n    </section>\n  );\n}\n\ninterface ChannelTitleProps {\n  channel: Channel;\n  isNested: boolean;\n  actions?: ReactNode;\n}\nfunction ChannelTitle({channel, isNested, actions}: ChannelTitleProps) {\n  const {restriction: urlParam} = useParams();\n  if (channel.config.hideTitle) {\n    return null;\n  }\n\n  const link =\n    channel.config.restriction && urlParam\n      ? `/${channel.slug}/${urlParam}`\n      : `/${channel.slug}`;\n\n  return (\n    <SiteSectionHeading\n      className=\"flex-auto\"\n      margin=\"m-0\"\n      description={<ChannelDescription channel={channel} />}\n      actions={actions}\n      headingType={isNested ? 'h2' : 'h1'}\n      descriptionFontSize={isNested ? 'text-sm' : undefined}\n      fontWeight={isNested ? 'font-normal' : undefined}\n      link={isNested ? link : undefined}\n    >\n      <Trans message={channel.name} />\n    </SiteSectionHeading>\n  );\n}\n\ninterface ChannelDescriptionProps {\n  channel: Channel;\n}\nfunction ChannelDescription({channel}: ChannelDescriptionProps) {\n  if (channel.type === 'channel') {\n    return <Fragment>{channel.description}</Fragment>;\n  }\n\n  return (\n    <div className=\"mt-18 items-center text-sm md:flex\">\n      {channel.user && <UserListByline user={channel.user} />}\n      <UserListDetails\n        list={channel}\n        className=\"ml-auto max-md:mt-14\"\n        showShareButton\n        showEditButton\n      />\n    </div>\n  );\n}\n","import {ReactNode} from 'react';\nimport clsx from 'clsx';\n\nexport interface ContentGridProps {\n  className?: string;\n  children: ReactNode;\n  variant?: 'portrait' | 'landscape';\n  gridCols?: string;\n}\nexport function ContentGridLayout({\n  children,\n  className,\n  variant,\n  gridCols = 'grid-cols-[repeat(var(--nVisibleItems),minmax(0,1fr))]',\n}: ContentGridProps) {\n  return (\n    <div\n      className={clsx(\n        'grid gap-24',\n        gridCols,\n        className,\n        variant === 'landscape'\n          ? 'content-grid-landscape'\n          : 'content-grid-portrait'\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n","import {Person} from '@app/titles/models/person';\nimport {FormattedDateTimeRange} from '@ui/i18n/formatted-date-time-range';\nimport {Fragment, memo} from 'react';\n\ninterface Props {\n  person: Person;\n  showRange?: boolean;\n}\nexport const PersonAge = memo(({person, showRange}: Props) => {\n  if (showRange && person.birth_date && person.death_date) {\n    return (\n      <FormattedDateTimeRange\n        timezone=\"utc\"\n        start={person.birth_date}\n        end={person.death_date}\n        options={{year: 'numeric'}}\n      />\n    );\n  }\n\n  if (person.birth_date) {\n    return (\n      <Fragment>\n        {calculateAgeFromBirthDate(person.birth_date, person.death_date)}\n      </Fragment>\n    );\n  }\n\n  return null;\n});\n\nfunction calculateAgeFromBirthDate(\n  _birthDate: string,\n  _deathDate?: string,\n): number {\n  const until = _deathDate ? new Date(_deathDate) : new Date();\n  const birthDate = new Date(_birthDate);\n  let age = until.getFullYear() - birthDate.getFullYear();\n  const m = until.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && until.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n}\n","import {NewsArticleImage} from '@app/news/news-article-image';\nimport {NewsArticleLink} from '@app/news/news-article-link';\nimport {BulletSeparatedItems} from '@app/titles/bullet-separated-items';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {NewsArticle} from '@app/titles/models/news-article';\n\ninterface Props {\n  article: NewsArticle;\n}\nexport function NewsArticleGridItem({article}: Props) {\n  return (\n    <div className=\"items-start gap-14 lg:flex\">\n      <NewsArticleImage\n        article={article}\n        className=\"aspect-poster max-w-90 max-md:hidden\"\n      />\n      <div className=\"min-w-0 overflow-hidden overflow-ellipsis text-base md:mt-24 lg:mt-6\">\n        <NewsArticleLink article={article} className=\"font-medium\" />\n        <BulletSeparatedItems className=\"mt-10 min-w-0 overflow-hidden overflow-ellipsis text-xs\">\n          <FormattedDate date={article.created_at} />\n          <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap\">\n            {article.source}\n          </div>\n        </BulletSeparatedItems>\n      </div>\n    </div>\n  );\n}\n","import {Title} from '@app/titles/models/title';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\nimport {TitleRating} from '@app/reviews/title-rating';\nimport {TitleLink} from '@app/titles/title-link';\nimport {ReactNode} from 'react';\nimport {TitleBackdrop} from '@app/titles/title-poster/title-backdrop';\nimport {BulletSeparatedItems} from '@app/titles/bullet-separated-items';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\n\nexport interface TitlePortraitGridItemProps {\n  item: Title;\n  rating?: number;\n  description?: ReactNode;\n}\nexport function TitlePortraitGridItem({\n  item,\n  rating,\n  description,\n}: TitlePortraitGridItemProps) {\n  return (\n    <div>\n      <div className=\"relative\">\n        <TitlePoster title={item} srcSize=\"md\" showPlayButton />\n      </div>\n      <div className=\"mt-10 text-sm\">\n        <RatingOrReleaseDate title={item} rating={rating} className=\"mb-4\" />\n        <TitleLink title={item} className=\"block text-base font-medium\" />\n        {description ? <div className=\"mt-4\">{description}</div> : null}\n      </div>\n    </div>\n  );\n}\n\nexport function TitleLandscapeGridItem({item}: TitlePortraitGridItemProps) {\n  return (\n    <div>\n      <TitleBackdrop\n        title={item}\n        srcSize=\"lg\"\n        size=\"w-full\"\n        className=\"rounded\"\n        wrapWithLink\n        showPlayButton\n      />\n      <div className=\"mt-10 text-sm\">\n        <TitleLink\n          title={item}\n          className=\"mb-4 block text-base font-semibold\"\n        />\n        <BulletSeparatedItems className=\"mb-4\">\n          {item.release_date && (\n            <FormattedDate date={item.release_date} timezone=\"utc\" />\n          )}\n          {item.certification && (\n            <div className=\"uppercase\">{item.certification}</div>\n          )}\n        </BulletSeparatedItems>\n        <TitleRating score={item.rating} className=\"mb-4\" />\n      </div>\n    </div>\n  );\n}\n\ninterface RatingOrReleaseDateProps {\n  title: Title;\n  rating?: number;\n  className?: string;\n}\nfunction RatingOrReleaseDate({\n  title,\n  rating,\n  className,\n}: RatingOrReleaseDateProps) {\n  if (!rating) {\n    rating = title.rating;\n  }\n  if (rating) {\n    return <TitleRating score={rating} className={className} />;\n  }\n  if (title.release_date) {\n    return (\n      <div className={className}>\n        <FormattedDate date={title.release_date} timezone=\"utc\" />\n      </div>\n    );\n  }\n  return null;\n}\n","import {TITLE_MODEL} from '@app/titles/models/title';\nimport {ChannelContentModel} from '@app/admin/channels/channel-content-config';\nimport {NEWS_ARTICLE_MODEL} from '@app/titles/models/news-article';\nimport {ContentGridProps} from '@app/channels/content-grid/content-grid-layout';\nimport {Person, PERSON_MODEL} from '@app/titles/models/person';\nimport {PersonPoster} from '@app/people/person-poster/person-poster';\nimport {PersonLink} from '@app/people/person-link';\nimport {PersonAge} from '@app/people/person-age';\nimport {NewsArticleGridItem} from '@app/news/news-article-grid-item';\nimport {\n  TitleLandscapeGridItem,\n  TitlePortraitGridItem,\n} from '@app/channels/content-grid/title-grid-item';\n\ninterface Props {\n  item: ChannelContentModel;\n  variant?: ContentGridProps['variant'];\n}\nexport function ChannelContentGridItem({item, variant}: Props) {\n  switch (item.model_type) {\n    case TITLE_MODEL:\n      return variant === 'landscape' ? (\n        <TitleLandscapeGridItem item={item} />\n      ) : (\n        <TitlePortraitGridItem item={item} />\n      );\n    case PERSON_MODEL:\n      return <PersonGridItem item={item} />;\n    case NEWS_ARTICLE_MODEL:\n      return <NewsArticleGridItem article={item} />;\n    default:\n      return null;\n  }\n}\n\ninterface PersonGridItemProps {\n  item: Person;\n}\nfunction PersonGridItem({item}: PersonGridItemProps) {\n  return (\n    <div>\n      <PersonPoster person={item} srcSize=\"md\" size=\"w-full\" rounded />\n      <div className=\"mt-10 text-center text-sm\">\n        <PersonLink person={item} className=\"block text-base font-medium\" />\n        <div>\n          <PersonAge person={item} showRange />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport React, {Fragment} from 'react';\nimport {ChannelContentProps} from '@app/channels/channel-content';\nimport {useInfiniteChannelContent} from '@common/channels/requests/use-infinite-channel-content';\nimport {ChannelHeader} from '@app/channels/channel-header/channel-header';\nimport {\n  ContentGridLayout,\n  ContentGridProps,\n} from '@app/channels/content-grid/content-grid-layout';\nimport {ChannelContentGridItem} from '@app/channels/content-grid/channel-content-grid-item';\nimport {ChannelContentModel} from '@app/admin/channels/channel-content-config';\nimport {useChannelContent} from '@common/channels/requests/use-channel-content';\nimport clsx from 'clsx';\nimport {\n  PaginationControls,\n  PaginationControlsType,\n} from '@common/ui/navigation/pagination-controls';\n\ninterface ChannelContentGridProps extends ChannelContentProps {\n  variant?: ContentGridProps['variant'];\n}\nexport function ChannelContentGrid(props: ChannelContentGridProps) {\n  const isInfiniteScroll =\n    !props.isNested &&\n    (!props.channel.config.paginationType ||\n      props.channel.config.paginationType === 'infiniteScroll');\n  return (\n    <Fragment>\n      <ChannelHeader {...props} />\n      {isInfiniteScroll ? (\n        <InfiniteScrollGrid {...props} />\n      ) : (\n        <PaginatedGrid {...props} />\n      )}\n    </Fragment>\n  );\n}\n\nfunction InfiniteScrollGrid({channel, variant}: ChannelContentGridProps) {\n  const query = useInfiniteChannelContent<ChannelContentModel>(channel);\n  return (\n    <div\n      className={clsx('transition-opacity', query.isReloading && 'opacity-70')}\n    >\n      <ContentGrid content={query.items} variant={variant} />\n      <InfiniteScrollSentinel query={query} />\n    </div>\n  );\n}\n\nfunction PaginatedGrid({channel, variant, isNested}: ChannelContentGridProps) {\n  const query = useChannelContent(channel, null, {isNested});\n  return (\n    <div\n      className={clsx(\n        'transition-opacity',\n        query.isPlaceholderData && 'opacity-70',\n      )}\n    >\n      {!isNested && (\n        <PaginationControls\n          pagination={query.data}\n          type={channel.config.paginationType as PaginationControlsType}\n          className=\"mb-24\"\n        />\n      )}\n      <ContentGrid content={query.data?.data} variant={variant} />\n      {!isNested && (\n        <PaginationControls\n          pagination={query.data}\n          type={channel.config.paginationType as PaginationControlsType}\n          className=\"mt-24\"\n          scrollToTop\n        />\n      )}\n    </div>\n  );\n}\n\ninterface ContentProps {\n  content: ChannelContentModel[] | undefined;\n  variant: ContentGridProps['variant'];\n}\nexport function ContentGrid({content = [], variant}: ContentProps) {\n  return (\n    <ContentGridLayout variant={variant}>\n      {content.map(item => (\n        <ChannelContentGridItem\n          key={`${item.id}-${item.model_type}`}\n          item={item}\n          variant={variant}\n        />\n      ))}\n    </ContentGridLayout>\n  );\n}\n","import {\n  SearchResponse,\n  useSearchResults,\n} from '@app/search/requests/use-search-results';\nimport {useParams} from 'react-router';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport React, {Fragment, useMemo} from 'react';\nimport {Title, TITLE_MODEL} from '@app/titles/models/title';\nimport {Person, PERSON_MODEL} from '@app/titles/models/person';\nimport {ContentGrid} from '@app/channels/content-grid/channel-content-grid';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {message} from '@ui/i18n/message';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {SearchIcon} from '@ui/icons/material/Search';\nimport {PageStatus} from '@common/http/page-status';\n\nexport function SearchPage() {\n  const {query: searchTerm} = useParams();\n  const query = useSearchResults('searchPage', searchTerm);\n\n  return (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <SitePageLayout>\n        <section className=\"container mx-auto mt-24 px-14 md:mt-40 md:px-24\">\n          <main>\n            <MobileSearchBar />\n            <PageContent query={query} />\n          </main>\n        </section>\n      </SitePageLayout>\n    </Fragment>\n  );\n}\n\nfunction MobileSearchBar() {\n  const {searchQuery = ''} = useParams();\n  const navigate = useNavigate();\n  const {trans} = useTrans();\n\n  return (\n    <TextField\n      defaultValue={searchQuery}\n      onChange={e => {\n        navigate(`/search/${e.target.value}`, {replace: true});\n      }}\n      autoFocus\n      className=\"w-full md:hidden\"\n      size=\"lg\"\n      placeholder={trans(message('Search...'))}\n    />\n  );\n}\n\ninterface PageContentProps {\n  query: UseQueryResult<SearchResponse>;\n}\nfunction PageContent({query}: PageContentProps) {\n  const {branding} = useSettings();\n\n  if (query.data) {\n    if (query.data.results.length === 0) {\n      return (\n        <IllustratedMessage\n          className=\"mt-40\"\n          image={<SearchIcon size=\"xl\" />}\n          imageHeight=\"h-auto\"\n          imageMargin=\"mb-12\"\n          title={\n            <Trans\n              message={`Could not find any results for “:query”`}\n              values={{query: query.data.query}}\n            />\n          }\n          description={<Trans message=\"Try a different search query.\" />}\n        />\n      );\n    }\n    return <SearchResults query={query} />;\n  }\n\n  if (query.fetchStatus === 'idle') {\n    return (\n      <IllustratedMessage\n        className=\"mt-40\"\n        image={<SearchIcon size=\"xl\" />}\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-12\"\n        title={\n          <Trans\n            message=\"Search :siteName\"\n            values={{siteName: branding.site_name}}\n          />\n        }\n        description={\n          <Trans message=\"Find movies, tv series, people and more.\" />\n        }\n      />\n    );\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n\ninterface PageContentProps {\n  query: UseQueryResult<SearchResponse>;\n}\nfunction SearchResults({query}: PageContentProps) {\n  const {query: searchTerm} = useParams();\n  const {movies, series, people} = useMemo(() => {\n    const movies: Title[] = [];\n    const series: Title[] = [];\n    const people: Person[] = [];\n\n    query.data?.results.forEach(result => {\n      if (result.model_type === TITLE_MODEL && result.is_series) {\n        series.push(result);\n      } else if (result.model_type === TITLE_MODEL && !result.is_series) {\n        movies.push(result);\n      } else if (result.model_type === PERSON_MODEL) {\n        people.push(result);\n      }\n    });\n\n    return {movies, series, people};\n  }, [query]);\n\n  return (\n    <Fragment>\n      <SiteSectionHeading\n        className=\"my-24 md:mb-48\"\n        headingType=\"h1\"\n        fontSize=\"text-xl md:text-3xl\"\n        hideBorder\n      >\n        <Trans\n          message=\"Search results for: “:query“\"\n          values={{query: searchTerm}}\n        />\n      </SiteSectionHeading>\n      {movies.length > 0 && (\n        <div className=\"mb-48\">\n          <SiteSectionHeading fontSize=\"text-2xl\">\n            <Trans message=\"Movies\" />\n          </SiteSectionHeading>\n          <ContentGrid content={movies} variant=\"portrait\" />\n        </div>\n      )}\n      {series.length > 0 && (\n        <div className=\"mb-48\">\n          <SiteSectionHeading fontSize=\"text-2xl\">\n            <Trans message=\"Series\" />\n          </SiteSectionHeading>\n          <ContentGrid content={series} variant=\"portrait\" />\n        </div>\n      )}\n      {people.length > 0 && (\n        <div className=\"mb-48\">\n          <SiteSectionHeading fontSize=\"text-2xl\">\n            <Trans message=\"People\" />\n          </SiteSectionHeading>\n          <ContentGrid content={people} variant=\"portrait\" />\n        </div>\n      )}\n    </Fragment>\n  );\n}\n","var functionDebounce = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n\nexport {functionDebounce as default};\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport debounce from 'just-debounce-it';\nimport {useLayoutEffect} from '@react-aria/utils';\n\ninterface Options {\n  rotate?: boolean;\n}\n\nconst containerClassName =\n  'content-carousel content-grid relative w-full grid grid-flow-col grid-rows-[auto] overflow-x-auto overflow-y-hidden gap-24 snap-always snap-x snap-mandatory hidden-scrollbar scroll-smooth';\nconst itemClassName = 'snap-start snap-normal';\n\nexport function useCarousel({rotate = false}: Options = {}) {\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const itemWidth = useRef<number>(0);\n  const perPage = useRef<number>(5);\n\n  const [canScrollBackward, setCanScrollBackward] = useState(rotate);\n  const [canScrollForward, setCanScrollForward] = useState(true);\n  const [activePage, setActivePage] = useState(0);\n\n  const updateNavStatus = useCallback(() => {\n    const el = scrollContainerRef.current;\n    if (el && itemWidth.current) {\n      if (!rotate) {\n        setCanScrollForward(\n          el.scrollWidth - 1 > el.scrollLeft + el.clientWidth\n        );\n        setCanScrollBackward(el.scrollLeft > 0);\n      }\n      const pageWidth = el.clientWidth;\n      const activePage = Math.round(el.scrollLeft / pageWidth);\n      setActivePage(activePage);\n    }\n  }, [rotate]);\n\n  // enable/disable navigation buttons based on element scroll offset\n  useEffect(() => {\n    const el = scrollContainerRef.current;\n    const handleScroll = debounce(() => updateNavStatus(), 100);\n    if (el) {\n      el.addEventListener('scroll', handleScroll);\n    }\n    return () => el?.removeEventListener('scroll', handleScroll);\n  }, [updateNavStatus]);\n\n  // get width for first grid item\n  useLayoutEffect(() => {\n    const el = scrollContainerRef.current;\n    if (el) {\n      perPage.current = Number(\n        getComputedStyle(el).getPropertyValue('--nVisibleItems')\n      );\n      const firstGridItem = el.children.item(0);\n      const observer = new ResizeObserver(entries => {\n        itemWidth.current = entries[0].contentRect.width;\n        updateNavStatus();\n      });\n      if (firstGridItem) {\n        observer.observe(firstGridItem);\n      }\n      return () => observer.unobserve(el);\n    }\n  }, [updateNavStatus]);\n\n  const scrollToIndex = useCallback((index: number) => {\n    if (scrollContainerRef.current) {\n      setActivePage(index);\n      const amount = itemWidth.current * index;\n      scrollContainerRef.current.scrollTo({left: amount});\n    }\n  }, []);\n\n  const scrollToPreviousPage = useCallback(() => {\n    if (scrollContainerRef.current) {\n      const pageWidth = scrollContainerRef.current.clientWidth;\n      const currentScroll = scrollContainerRef.current.scrollLeft;\n      const scrollLeft =\n        !currentScroll && rotate\n          ? scrollContainerRef.current.scrollWidth - pageWidth\n          : currentScroll - pageWidth;\n      scrollContainerRef.current.scrollTo({\n        left: scrollLeft,\n      });\n    }\n  }, [rotate]);\n\n  const scrollToNextPage = useCallback(() => {\n    if (scrollContainerRef.current) {\n      const pageWidth = scrollContainerRef.current.clientWidth;\n      const currentScroll = scrollContainerRef.current.scrollLeft;\n      const scrollLeft =\n        rotate &&\n        currentScroll + pageWidth >= scrollContainerRef.current.scrollWidth\n          ? 0\n          : (activePage + 1) * pageWidth;\n      scrollContainerRef.current.scrollTo({left: scrollLeft});\n    }\n  }, [activePage, rotate]);\n\n  return {\n    scrollContainerRef,\n    scrollToIndex,\n    scrollToPreviousPage,\n    scrollToNextPage,\n    canScrollForward,\n    canScrollBackward,\n    activePage,\n    containerClassName,\n    itemClassName,\n  };\n}\n","import React, {Fragment} from 'react';\nimport {ChannelContentProps} from '@app/channels/channel-content';\nimport {ChannelHeader} from '@app/channels/channel-header/channel-header';\nimport {ChannelContentGridItem} from '@app/channels/content-grid/channel-content-grid-item';\nimport {useCarousel} from '@app/channels/carousel/use-carousel';\nimport clsx from 'clsx';\nimport {ContentGridProps} from '@app/channels/content-grid/content-grid-layout';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\n\ninterface Props extends ChannelContentProps {\n  variant?: ContentGridProps['variant'];\n}\nexport function ChannelContentCarousel(props: Props) {\n  const {channel, variant} = props;\n  const {\n    scrollContainerRef,\n    canScrollForward,\n    canScrollBackward,\n    scrollToPreviousPage,\n    scrollToNextPage,\n    containerClassName,\n    itemClassName,\n  } = useCarousel();\n\n  const gridClassName =\n    variant === 'landscape'\n      ? 'content-grid-landscape'\n      : 'content-grid-portrait';\n\n  return (\n    <div>\n      <ChannelHeader\n        {...props}\n        actions={\n          <Fragment>\n            <IconButton\n              disabled={!canScrollBackward}\n              onClick={() => scrollToPreviousPage()}\n              aria-label=\"Previous page\"\n            >\n              <KeyboardArrowLeftIcon />\n            </IconButton>\n            <IconButton\n              disabled={!canScrollForward}\n              onClick={() => scrollToNextPage()}\n              aria-label=\"Next page\"\n            >\n              <KeyboardArrowRightIcon />\n            </IconButton>\n          </Fragment>\n        }\n      />\n      <div\n        ref={scrollContainerRef}\n        className={clsx(containerClassName, gridClassName)}\n      >\n        {channel.content?.data.map(item => (\n          <div className={itemClassName} key={`${item.id}-${item.model_type}`}>\n            <ChannelContentGridItem item={item} variant={variant} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import {ChannelContentProps} from '@app/channels/channel-content';\nimport React, {Fragment} from 'react';\nimport {useCarousel} from '@app/channels/carousel/use-carousel';\nimport {Title} from '@app/titles/models/title';\nimport {TitleRating} from '@app/reviews/title-rating';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {MediaPlayIcon} from '@ui/icons/media/media-play';\nimport {TitleLink} from '@app/titles/title-link';\nimport {TitleBackdrop} from '@app/titles/title-poster/title-backdrop';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {ChevronLeftIcon} from '@ui/icons/material/ChevronLeft';\nimport {ChevronRightIcon} from '@ui/icons/material/ChevronRight';\nimport {ChannelHeader} from '@app/channels/channel-header/channel-header';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Link} from 'react-router';\nimport {getWatchLink} from '@app/videos/watch-page/get-watch-link';\nimport {useChannelContent} from '@common/channels/requests/use-channel-content';\nimport {Channel, ChannelContentItem} from '@common/channels/channel';\n\nexport function ChannelContentSlider({\n  channel,\n  isNested,\n}: ChannelContentProps<Title>) {\n  const {\n    scrollContainerRef,\n    activePage,\n    canScrollBackward,\n    canScrollForward,\n    scrollToNextPage,\n    scrollToPreviousPage,\n  } = useCarousel({rotate: true});\n  const {data: pagination} =\n    useChannelContent<ChannelContentItem<Title>>(channel);\n\n  return (\n    <Fragment>\n      <ChannelHeader\n        channel={channel as Channel}\n        isNested={isNested}\n        margin=\"mb-18\"\n      />\n      <div className=\"gap-24 md:flex\">\n        <div className=\"relative flex-auto\">\n          <div\n            ref={scrollContainerRef}\n            className=\"hidden-scrollbar flex h-full select-none snap-x snap-mandatory snap-always items-center overflow-x-auto\"\n          >\n            {pagination?.data.map((item, index) => (\n              <Slide key={item.id} item={item} index={index} />\n            ))}\n          </div>\n          <div className=\"absolute top-10 z-20 w-full md:top-[170px]\">\n            <div className=\"absolute left-8 hidden md:left-14 md:block\">\n              <IconButton\n                variant=\"outline\"\n                size=\"lg\"\n                color=\"white\"\n                disabled={!canScrollBackward}\n                onClick={() => scrollToPreviousPage()}\n              >\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <div className=\"absolute right-8 hidden md:right-14 md:block\">\n              <IconButton\n                variant=\"outline\"\n                size=\"lg\"\n                color=\"white\"\n                disabled={!canScrollForward}\n                onClick={() => scrollToNextPage()}\n              >\n                <ChevronRightIcon />\n              </IconButton>\n            </div>\n          </div>\n        </div>\n        <UpNext titles={pagination?.data ?? []} activePage={activePage} />\n      </div>\n    </Fragment>\n  );\n}\n\ninterface SlideProps {\n  item: Title;\n  index: number;\n}\nfunction Slide({item, index}: SlideProps) {\n  return (\n    <div className=\"relative h-full w-full flex-shrink-0 snap-start snap-normal overflow-hidden rounded\">\n      <TitleBackdrop\n        title={item}\n        lazy={index > 0}\n        className=\"min-h-240 md:min-h-0\"\n        wrapperClassName=\"h-full\"\n      />\n      <div className=\"absolute inset-0 isolate flex h-full w-full items-center justify-start gap-24 rounded p-30 text-white md:items-end\">\n        <div className=\"absolute left-0 h-full w-full bg-gradient-to-b from-black/40 max-md:top-0 md:bottom-0 md:h-3/4 md:bg-gradient-to-t md:from-black/100\" />\n        <TitlePoster\n          title={item}\n          size=\"max-h-320\"\n          srcSize=\"md\"\n          className=\"z-10 shadow-md max-md:hidden\"\n        />\n        <div className=\"z-10 text-lg md:max-w-620\">\n          <TitleRating score={item.rating} />\n          <div className=\"my-8 text-2xl md:text-5xl\">\n            <TitleLink title={item} />\n          </div>\n          {item.description && (\n            <p className=\"max-md:hidden\">{item.description}</p>\n          )}\n          {item.primary_video && (\n            <Button\n              variant=\"flat\"\n              color=\"primary\"\n              startIcon={<MediaPlayIcon />}\n              radius=\"rounded-full\"\n              className=\"mt-24 md:min-h-42 md:min-w-144\"\n              elementType={Link}\n              to={getWatchLink(item.primary_video)}\n            >\n              {item.primary_video.category === 'full' ? (\n                <Trans message=\"Watch now\" />\n              ) : (\n                <Trans message=\"Play trailer\" />\n              )}\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface UpNextProps {\n  titles: Title[];\n  activePage: number;\n}\nfunction UpNext({titles, activePage}: UpNextProps) {\n  const itemCount = titles.length;\n  const start = activePage + 1;\n  const end = start + 3;\n  const items = titles.slice(start, end);\n  if (end > itemCount) {\n    items.push(...titles.slice(0, end - itemCount));\n  }\n\n  return (\n    <AnimatePresence initial={false} mode=\"wait\">\n      <div className=\"w-1/4 max-w-200 flex-shrink-0 max-md:hidden\">\n        <div className=\"mb-12 text-lg font-semibold\">\n          <Trans message=\"Up next\" />\n        </div>\n        <div className=\"flex flex-col gap-24\">\n          {items.map(item => (\n            <m.div\n              key={item.id}\n              className=\"relative flex-auto\"\n              initial={{opacity: 0}}\n              animate={{opacity: 1}}\n              exit={{opacity: 0}}\n              transition={{duration: 0.2}}\n            >\n              <TitleBackdrop\n                title={item}\n                className=\"mb-6 rounded\"\n                size=\"w-full\"\n                srcSize=\"md\"\n                wrapWithLink\n                showPlayButton\n              />\n              <div className=\"mb-2 overflow-hidden overflow-ellipsis whitespace-nowrap text-sm\">\n                <TitleLink title={item} className=\"text-base font-medium\" />\n              </div>\n              <div>\n                <TitleRating score={item.rating} className=\"text-sm\" />\n              </div>\n            </m.div>\n          ))}\n        </div>\n      </div>\n    </AnimatePresence>\n  );\n}\n","import {NewsArticle} from '@app/titles/models/news-article';\nimport clsx from 'clsx';\nimport {OpenInNewIcon} from '@ui/icons/material/OpenInNew';\nimport {LinkStyle} from '@ui/buttons/external-link';\nimport React from 'react';\n\ninterface SourceLinkProps {\n  article: NewsArticle;\n  className?: string;\n}\nexport function NewsArticleSourceLink({article, className}: SourceLinkProps) {\n  return (\n    <div className={clsx('flex items-center gap-4 text-primary', className)}>\n      <OpenInNewIcon size=\"xs\" className=\"flex-shrink-0\" />\n      <a\n        href={article.source_url}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className={clsx(\n          LinkStyle,\n          'overflow-hidden overflow-ellipsis whitespace-nowrap',\n        )}\n      >\n        {article.source}\n      </a>\n    </div>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {NewsArticle} from '@app/titles/models/news-article';\n\ninterface Props {\n  article: NewsArticle;\n}\nexport function NewsArticleByline({article}: Props) {\n  return article.byline ? (\n    <span className=\"whitespace-nowrap\">\n      <Trans message=\"By :name\" values={{name: article.byline}} />\n    </span>\n  ) : null;\n}\n","import {ChannelContentProps} from '@app/channels/channel-content';\nimport React from 'react';\nimport {NewsArticle} from '@app/titles/models/news-article';\nimport {BulletSeparatedItems} from '@app/titles/bullet-separated-items';\nimport {ChannelHeader} from '@app/channels/channel-header/channel-header';\nimport {NewsArticleImage} from '@app/news/news-article-image';\nimport {NewsArticleLink} from '@app/news/news-article-link';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {NewsArticleSourceLink} from '@app/news/news-article-source-link';\nimport {NewsArticleByline} from '@app/news/news-article-byline';\nimport {useChannelContent} from '@common/channels/requests/use-channel-content';\nimport {Channel, ChannelContentItem} from '@common/channels/channel';\nimport {\n  PaginationControls,\n  PaginationControlsType,\n} from '@common/ui/navigation/pagination-controls';\n\nexport function ChannelContentNews({\n  channel,\n  isNested,\n}: ChannelContentProps<NewsArticle>) {\n  const query = useChannelContent<ChannelContentItem<NewsArticle>>(\n    channel,\n    null,\n    {\n      isNested,\n    },\n  );\n\n  return (\n    <div>\n      <ChannelHeader channel={channel as Channel} isNested={isNested} />\n      {!isNested && (\n        <PaginationControls\n          pagination={query.data}\n          type={channel.config.paginationType as PaginationControlsType}\n          className=\"mb-34\"\n        />\n      )}\n      <div className=\"flex gap-34\">\n        <div className=\"w-240 flex-shrink-0\">\n          {query.data?.data\n            .slice(0, 3)\n            .map(article => (\n              <LeftColArticle\n                key={article.id}\n                article={article}\n                className=\"mb-14\"\n              />\n            ))}\n        </div>\n        <div className=\"flex-auto\">\n          {query.data?.data.slice(3, 12).map(article => (\n            <div key={article.id} className=\"mb-12 flex items-center gap-14\">\n              <NewsArticleImage article={article} size=\"w-84 h-84\" />\n              <div className=\"flex-auto\">\n                <NewsArticleLink article={article} className=\"font-semibold\" />\n                <BulletSeparatedItems className=\"text-sm\">\n                  <FormattedDate date={article.created_at} />\n                  <NewsArticleByline article={article} />\n                  <NewsArticleSourceLink article={article} />\n                </BulletSeparatedItems>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      {!isNested && (\n        <PaginationControls\n          pagination={query.data}\n          type={channel.config.paginationType as PaginationControlsType}\n          className=\"mt-34\"\n          scrollToTop\n        />\n      )}\n    </div>\n  );\n}\n\ninterface LeftColArticleProps {\n  article: NewsArticle;\n  className?: string;\n}\nfunction LeftColArticle({article, className}: LeftColArticleProps) {\n  return (\n    <div className={className}>\n      <NewsArticleImage article={article} size=\"aspect-video w-full\" />\n      <NewsArticleLink\n        article={article}\n        className=\"mt-10 block text-sm font-semibold\"\n      />\n      <div className=\"mt-8 text-xs text-muted\">\n        <NewsArticleByline article={article} />\n        <NewsArticleSourceLink article={article} className=\"mt-4\" />\n      </div>\n    </div>\n  );\n}\n","import {TITLE_MODEL} from '@app/titles/models/title';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\nimport {TitleLink} from '@app/titles/title-link';\nimport {ChannelContentModel} from '@app/admin/channels/channel-content-config';\nimport {NEWS_ARTICLE_MODEL} from '@app/titles/models/news-article';\nimport {NewsArticleImage} from '@app/news/news-article-image';\nimport {NewsArticleLink} from '@app/news/news-article-link';\nimport {BulletSeparatedItems} from '@app/titles/bullet-separated-items';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {NewsArticleSourceLink} from '@app/news/news-article-source-link';\nimport {PERSON_MODEL} from '@app/titles/models/person';\nimport {PersonPoster} from '@app/people/person-poster/person-poster';\nimport {PersonLink} from '@app/people/person-link';\nimport {KnownForCompact} from '@app/people/known-for-compact';\nimport React from 'react';\nimport {FormattedDuration} from '@ui/i18n/formatted-duration';\nimport {InteractableRating} from '@app/reviews/interactable-rating';\n\ninterface Props {\n  item: ChannelContentModel;\n}\nexport function ChannelContentListItem({item}: Props) {\n  switch (item.model_type) {\n    case TITLE_MODEL:\n      return (\n        <div className=\"mb-24 flex items-start gap-24\">\n          <TitlePoster title={item} srcSize=\"md\" size=\"w-128\" showPlayButton />\n          <div className=\"min-w-0 flex-auto pt-12\">\n            <TitleLink title={item} className=\"font-medium\" />\n            <BulletSeparatedItems className=\"mt-4 text-sm\">\n              {item.runtime ? (\n                <FormattedDuration minutes={item.runtime} verbose />\n              ) : null}\n              {item.certification && (\n                <span className=\"uppercase\">{item.certification}</span>\n              )}\n            </BulletSeparatedItems>\n            {item.rating && item.status !== 'upcoming' ? (\n              <InteractableRating size=\"md\" title={item} className=\"my-12\" />\n            ) : (\n              <div className=\"my-12\">\n                <FormattedDate date={item.release_date} timezone=\"utc\" />\n              </div>\n            )}\n            {item.description ? (\n              <p className=\"text-sm\">{item.description}</p>\n            ) : null}\n          </div>\n        </div>\n      );\n    case PERSON_MODEL:\n      return (\n        <div className=\"mb-24 flex items-start gap-24\">\n          <PersonPoster person={item} srcSize=\"md\" size=\"w-128\" />\n          <div className=\"min-w-0 flex-auto pt-12\">\n            <PersonLink person={item} className=\"block text-lg font-medium\" />\n            {item.primary_credit ? (\n              <div className=\"mt-4 text-sm\">\n                <KnownForCompact person={item} />\n              </div>\n            ) : null}\n            <p className=\"mt-12 text-sm\">{item.description}</p>\n          </div>\n        </div>\n      );\n    case NEWS_ARTICLE_MODEL:\n      return (\n        <div className=\"mb-44 flex items-start gap-14\">\n          <NewsArticleImage article={item} className=\"aspect-poster max-w-90\" />\n          <div className=\"mt-6 text-base\">\n            <NewsArticleLink article={item} className=\"font-medium\" />\n            <p className=\"mt-10 text-sm\">{item.body}</p>\n            <BulletSeparatedItems className=\"mt-10 text-xs\">\n              <FormattedDate date={item.created_at} />\n              <NewsArticleSourceLink article={item} />\n            </BulletSeparatedItems>\n          </div>\n        </div>\n      );\n    default:\n      return null;\n  }\n}\n","import {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport React, {Fragment, ReactNode} from 'react';\nimport {ChannelContentProps} from '@app/channels/channel-content';\nimport {useInfiniteChannelContent} from '@common/channels/requests/use-infinite-channel-content';\nimport {ChannelHeader} from '@app/channels/channel-header/channel-header';\nimport {ChannelContentModel} from '@app/admin/channels/channel-content-config';\nimport {ChannelContentListItem} from '@app/channels/channel-content-list-item';\nimport {useChannelContent} from '@common/channels/requests/use-channel-content';\nimport clsx from 'clsx';\nimport {\n  PaginationControls,\n  PaginationControlsType,\n} from '@common/ui/navigation/pagination-controls';\n\nexport function ChannelContentList(props: ChannelContentProps) {\n  const isInfiniteScroll =\n    !props.isNested &&\n    (!props.channel.config.paginationType ||\n      props.channel.config.paginationType === 'infiniteScroll');\n  return (\n    <Fragment>\n      <ChannelHeader {...props} />\n      {isInfiniteScroll ? (\n        <InfiniteScrollList {...props} />\n      ) : (\n        <PaginatedList {...props} />\n      )}\n    </Fragment>\n  );\n}\n\nfunction InfiniteScrollList({channel}: ChannelContentProps) {\n  const query = useInfiniteChannelContent<ChannelContentModel>(channel);\n  return (\n    <Content\n      content={query.items}\n      className={clsx('transition-opacity', query.isReloading && 'opacity-70')}\n    >\n      <InfiniteScrollSentinel query={query} />\n    </Content>\n  );\n}\n\nfunction PaginatedList({channel, isNested}: ChannelContentProps) {\n  const query = useChannelContent(channel, null, {isNested});\n  return (\n    <div\n      className={clsx(\n        'transition-opacity',\n        query.isPlaceholderData && 'opacity-70',\n      )}\n    >\n      {!isNested && (\n        <PaginationControls\n          pagination={query.data}\n          type={channel.config.paginationType as PaginationControlsType}\n          className=\"mb-24\"\n        />\n      )}\n      <Content content={query.data?.data} />\n      {!isNested && (\n        <PaginationControls\n          pagination={query.data}\n          type={channel.config.paginationType as PaginationControlsType}\n          className=\"mt-24\"\n          scrollToTop\n        />\n      )}\n    </div>\n  );\n}\n\ninterface ContentProps {\n  content: ChannelContentModel[] | undefined;\n  children?: ReactNode;\n  className?: string;\n}\nfunction Content({content = [], children, className}: ContentProps) {\n  return (\n    <div className={className}>\n      {content.map(item => (\n        <ChannelContentListItem\n          key={`${item.id}-${item.model_type}`}\n          item={item}\n        />\n      ))}\n      {children}\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {Channel, CHANNEL_MODEL} from '@common/channels/channel';\nimport {ChannelContentGrid} from '@app/channels/content-grid/channel-content-grid';\nimport {ChannelHeader} from '@app/channels/channel-header/channel-header';\nimport {\n  ChannelContentModel,\n  Layout,\n} from '@app/admin/channels/channel-content-config';\nimport {ChannelContentCarousel} from '@app/channels/carousel/channel-content-carousel';\nimport {ChannelContentSlider} from '@app/channels/channel-content-slider';\nimport {ChannelContentNews} from '@app/channels/channel-content-news';\nimport {ChannelContentList} from '@app/channels/channel-content-list';\nimport {Title} from '@app/titles/models/title';\nimport {NewsArticle} from '@app/titles/models/news-article';\nimport {useChannelLayouts} from '@app/channels/channel-header/use-channel-layouts';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {Trans} from '@ui/i18n/trans';\nimport todoImage from '@app/admin/lists/todo.svg';\nimport {SvgImage} from '@ui/images/svg-image';\n\nexport interface ChannelContentProps<\n  T extends ChannelContentModel = ChannelContentModel,\n> {\n  channel: Channel<T>;\n  isNested: boolean;\n}\nexport function ChannelContent(props: ChannelContentProps) {\n  // only show no results message in non nested channels\n  if (props.isNested && !props.channel.content?.data.length) {\n    return null;\n  }\n  if (props.channel.config.contentModel === CHANNEL_MODEL) {\n    return <NestedChannels {...(props as ChannelContentProps<Channel>)} />;\n  } else {\n    return (\n      <Fragment>\n        <ChannelLayout {...props} />\n        <NoResultsMessage channel={props.channel} />\n      </Fragment>\n    );\n  }\n}\n\ninterface NestedChannelsProps {\n  channel: ChannelContentProps['channel'];\n}\nfunction NoResultsMessage({channel}: NestedChannelsProps) {\n  if (channel.content?.data.length === 0) {\n    return (\n      <IllustratedMessage\n        className=\"mt-60\"\n        image={<SvgImage src={todoImage} />}\n        title={\n          channel.type === 'list' ? (\n            <Trans message=\"This list does not have any content yet.\" />\n          ) : (\n            <Trans message=\"This channel does not have any content yet.\" />\n          )\n        }\n      />\n    );\n  }\n  return null;\n}\n\nexport function ChannelLayout(props: ChannelContentProps) {\n  const {channel, isNested} = props;\n  const {selectedLayout} = useChannelLayouts(channel);\n  const layout = (\n    isNested ? channel.config.nestedLayout : selectedLayout\n  ) as Layout;\n\n  switch (layout) {\n    case 'grid':\n      return <ChannelContentGrid {...props} variant=\"portrait\" />;\n    case 'landscapeGrid':\n      return <ChannelContentGrid {...props} variant=\"landscape\" />;\n    case 'list':\n      return <ChannelContentList {...props} />;\n    case 'carousel':\n      return <ChannelContentCarousel {...props} variant=\"portrait\" />;\n    case 'landscapeCarousel':\n      return <ChannelContentCarousel {...props} variant=\"landscape\" />;\n    case 'slider':\n      return (\n        <ChannelContentSlider {...(props as ChannelContentProps<Title>)} />\n      );\n    case 'news':\n      return (\n        <ChannelContentNews {...(props as ChannelContentProps<NewsArticle>)} />\n      );\n    default:\n      return null;\n  }\n}\n\nfunction NestedChannels({channel, isNested}: ChannelContentProps) {\n  return (\n    <Fragment>\n      <ChannelHeader channel={channel} isNested={isNested} />\n      {channel.content?.data.map(nestedChannel => (\n        <div key={nestedChannel.id} className=\"mb-40 md:mb-50\">\n          <ChannelContent\n            channel={nestedChannel as Channel<Channel>}\n            isNested\n          />\n        </div>\n      ))}\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport {PageStatus} from '@common/http/page-status';\nimport {useChannel} from '@common/channels/requests/use-channel';\nimport {ChannelContent} from '@app/channels/channel-content';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {Channel} from '@common/channels/channel';\nimport {ChannelContentModel} from '@app/admin/channels/channel-content-config';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\n\ninterface ChannelPageProps {\n  slugOrId?: string | number;\n  type?: 'list' | 'channel';\n}\nexport function ChannelPage({slugOrId, type = 'channel'}: ChannelPageProps) {\n  const query = useChannel(slugOrId, 'channelPage', {channelType: type});\n\n  let content = null;\n\n  if (query.data) {\n    content = (\n      <div>\n        <PageMetaTags query={query} />\n        <div className=\"pb-24\">\n          <div className=\"container mx-auto p-14 @container md:p-24\">\n            <ChannelContent\n              channel={query.data.channel as Channel<ChannelContentModel>}\n              // set key to force re-render when channel changes\n              key={query.data.channel.id}\n              isNested={false}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    content = (\n      <PageStatus\n        query={query}\n        loaderClassName=\"absolute inset-0 m-auto\"\n        loaderIsScreen={false}\n      />\n    );\n  }\n\n  return <SitePageLayout>{content}</SitePageLayout>;\n}\n\nexport function ListChannelPage() {\n  return <ChannelPage type=\"list\" />;\n}\n","import React from 'react';\nimport {ChannelPage} from '@app/channels/channel-page';\nimport {useSettings} from '@ui/settings/use-settings';\n\nexport function HomepageChannelPage() {\n  const {homepage} = useSettings();\n  let slugOrId = 'homepage';\n  if (homepage?.type === 'channel' && homepage.value) {\n    slugOrId = homepage.value;\n  }\n  return <ChannelPage slugOrId={slugOrId} />;\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useParams} from 'react-router';\nimport {Title} from '@app/titles/models/title';\nimport {Video} from '@app/titles/models/video';\nimport {Episode} from '@app/titles/models/episode';\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\n\nexport interface UseWatchPageVideoResponse extends BackendResponse {\n  title: Title;\n  episode?: Episode;\n  video: Video;\n  related_videos: Video[];\n  alternative_videos: Video[];\n}\n\nexport function useWatchPageVideo() {\n  const {videoId} = useParams();\n  return useQuery<UseWatchPageVideoResponse>({\n    queryKey: ['video', 'watch-page', videoId],\n    queryFn: () => fetchVideo(videoId),\n    placeholderData: keepPreviousData,\n    initialData: () => {\n      const data = getBootstrapData().loaders?.watchPage;\n      if (data && `${data.video.id}` === videoId) {\n        return data;\n      }\n    },\n  });\n}\n\nfunction fetchVideo(videoId?: string) {\n  return apiClient\n    .get<UseWatchPageVideoResponse>(`watch/${videoId}`)\n    .then(response => response.data);\n}\n","import {Commentable} from '@common/comments/commentable';\nimport {Comment} from '@common/comments/comment';\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\n\ninterface QueryParams {\n  perPage?: number;\n}\n\nexport function commentsQueryKey(\n  commentable: Commentable,\n  params: QueryParams = {}\n) {\n  return ['comment', `${commentable.id}-${commentable.model_type}`, params];\n}\n\nexport function useComments(\n  commentable: Commentable,\n  params: QueryParams = {}\n) {\n  return useInfiniteData<Comment>({\n    queryKey: commentsQueryKey(commentable, params),\n    endpoint: 'commentable/comments',\n    //paginate: 'cursor',\n    queryParams: {\n      commentable_type: commentable.model_type,\n      commentable_id: commentable.id,\n      ...params,\n    },\n  });\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation, useQueryClient} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {Commentable} from '@common/comments/commentable';\nimport {Comment} from '@common/comments/comment';\n\ninterface Response extends BackendResponse {\n  //\n}\n\nexport interface CreateCommentPayload {\n  commentable: Commentable;\n  content: string;\n  inReplyTo?: Comment;\n}\n\nexport function useCreateComment() {\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: (props: CreateCommentPayload) => createComment(props),\n    onSuccess: async (response, props) => {\n      await queryClient.invalidateQueries({\n        queryKey: [\n          'comment',\n          `${props.commentable.id}-${props.commentable.model_type}`,\n        ],\n      });\n      toast(message('Comment posted'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction createComment({\n  commentable,\n  content,\n  inReplyTo,\n  ...other\n}: CreateCommentPayload): Promise<Response> {\n  const payload = {\n    commentable_id: commentable.id,\n    commentable_type: commentable.model_type,\n    content,\n    inReplyTo,\n    ...other,\n  };\n  return apiClient.post('comment', payload).then(r => r.data);\n}\n","import {Commentable} from '@common/comments/commentable';\nimport {Comment} from '@common/comments/comment';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useCreateComment} from '@common/comments/requests/use-create-comment';\nimport {RefObject, useState} from 'react';\nimport clsx from 'clsx';\nimport {TextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {message} from '@ui/i18n/message';\nimport {Trans} from '@ui/i18n/trans';\nimport {useObjectRef} from '@react-aria/utils';\nimport {Button} from '@ui/buttons/button';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\n\nexport interface NewCommentFormProps {\n  commentable: Commentable;\n  inReplyTo?: Comment;\n  onSuccess?: () => void;\n  className?: string;\n  autoFocus?: boolean;\n  inputRef?: RefObject<HTMLInputElement>;\n  // additional data that should be sent to backend when creating comments\n  payload?: Record<string, number | string>;\n}\nexport function NewCommentForm({\n  commentable,\n  inReplyTo,\n  onSuccess,\n  className,\n  autoFocus,\n  payload,\n  ...props\n}: NewCommentFormProps) {\n  const {trans} = useTrans();\n  const {user} = useAuth();\n  const createComment = useCreateComment();\n  const isMobile = useIsMobileMediaQuery();\n  const inputRef = useObjectRef<HTMLInputElement>(props.inputRef);\n  const [inputIsExpanded, setInputIsExpanded] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n\n  const clearInput = () => {\n    setInputIsExpanded(false);\n    if (inputRef.current) {\n      inputRef.current.blur();\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form\n      className={clsx('flex gap-24 py-6', className)}\n      onSubmit={e => {\n        e.preventDefault();\n        if (inputValue && !createComment.isPending) {\n          createComment.mutate(\n            {\n              ...payload,\n              commentable,\n              content: inputValue,\n              inReplyTo,\n            },\n            {\n              onSuccess: () => {\n                clearInput();\n                onSuccess?.();\n              },\n            },\n          );\n        }\n      }}\n    >\n      <Avatar\n        size={isMobile ? 'lg' : 'xl'}\n        circle\n        src={user?.image}\n        label={user?.name}\n      />\n      <div className=\"flex-auto\">\n        <div className=\"mb-10 text-xs text-muted\">\n          <Trans\n            message=\"Comment as :name\"\n            values={{\n              name: <span className=\"font-medium text\">{user?.name}</span>,\n            }}\n          />\n        </div>\n        <TextField\n          inputRef={inputRef}\n          autoFocus={autoFocus}\n          inputElementType=\"textarea\"\n          inputClassName=\"resize-none\"\n          value={inputValue}\n          onChange={e => setInputValue(e.target.value)}\n          onFocus={() => setInputIsExpanded(true)}\n          onBlur={() => {\n            if (!inputValue) {\n              setInputIsExpanded(false);\n            }\n          }}\n          minLength={3}\n          rows={inputIsExpanded ? 3 : 1}\n          placeholder={\n            inReplyTo\n              ? trans(message('Write a reply'))\n              : trans(message('Leave a comment'))\n          }\n        />\n        {inputIsExpanded && (\n          <div className=\"mt-12 flex items-center justify-end gap-12\">\n            <Button variant=\"outline\" onClick={() => clearInput()}>\n              <Trans message=\"Cancel\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              color=\"primary\"\n              type=\"submit\"\n              disabled={createComment.isPending || inputValue.length < 3}\n            >\n              <Trans message=\"Comment\" />\n            </Button>\n          </div>\n        )}\n      </div>\n    </form>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {VotableModel} from '@common/votes/votable-model';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  model: VotableModel;\n}\n\ninterface Payload {\n  voteType: 'upvote' | 'downvote';\n}\n\nexport function useStoreVote(model: VotableModel) {\n  return useMutation({\n    mutationFn: (payload: Payload) => changeVote(model, payload),\n    onSuccess: response => {\n      //\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction changeVote(model: VotableModel, payload: Payload) {\n  return apiClient\n    .post<Response>('vote', {\n      vote_type: payload.voteType,\n      model_id: model.id,\n      model_type: model.model_type,\n    })\n    .then(r => r.data);\n}\n","import {ThumbUpIcon} from '@ui/icons/material/ThumbUp';\nimport {ThumbDownIcon} from '@ui/icons/material/ThumbDown';\nimport {VotableModel} from '@common/votes/votable-model';\nimport {Button} from '@ui/buttons/button';\nimport {useStoreVote} from '@common/votes/requests/use-store-vote';\nimport {useState} from 'react';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport clsx from 'clsx';\n\ninterface Props {\n  model: VotableModel;\n  className?: string;\n  showUpvotesOnly?: boolean;\n}\nexport function ThumbButtons({model, className, showUpvotesOnly}: Props) {\n  const changeVote = useStoreVote(model);\n\n  const [upvotes, setUpvotes] = useState(model.upvotes || 0);\n  const [downvotes, setDownvotes] = useState(model.downvotes || 0);\n  const [currentVote, setCurrentVote] = useState(model.current_vote);\n\n  const syncLocalState = (model: VotableModel) => {\n    setUpvotes(model.upvotes);\n    setDownvotes(model.downvotes);\n    setCurrentVote(model.current_vote);\n  };\n\n  return (\n    <div className={clsx(className, 'whitespace-nowrap')}>\n      <Button\n        className=\"gap-6\"\n        sizeClassName=\"px-8 py-4\"\n        color={currentVote === 'upvote' ? 'primary' : undefined}\n        disabled={changeVote.isPending}\n        aria-label=\"Upvote\"\n        onClick={() => {\n          changeVote.mutate(\n            {voteType: 'upvote'},\n            {\n              onSuccess: response => syncLocalState(response.model),\n            },\n          );\n        }}\n      >\n        <ThumbUpIcon />\n        <div>\n          <FormattedNumber value={upvotes} />\n        </div>\n      </Button>\n      {!showUpvotesOnly && (\n        <Button\n          className=\"gap-6\"\n          sizeClassName=\"px-8 py-4\"\n          color={currentVote === 'downvote' ? 'primary' : undefined}\n          disabled={changeVote.isPending}\n          aria-label=\"Downvote\"\n          onClick={() => {\n            changeVote.mutate(\n              {voteType: 'downvote'},\n              {\n                onSuccess: response => syncLocalState(response.model),\n              },\n            );\n          }}\n        >\n          <ThumbDownIcon />\n          <div>\n            <FormattedNumber value={downvotes} />\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Reportable} from '@common/reports/Reportable';\n\ninterface Response extends BackendResponse {\n  model: Reportable;\n}\n\ninterface Payload {\n  reason?: string;\n}\n\nexport function useSubmitReport(model: Reportable) {\n  return useMutation({\n    mutationFn: (payload: Payload) => submitReport(model, payload),\n    onSuccess: () => {\n      toast(message('Thanks for reporting. We will review this content.'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction submitReport(model: Reportable, payload: Payload) {\n  return apiClient\n    .post<Response>('report', {\n      reason: payload.reason,\n      model_id: model.id,\n      model_type: model.model_type,\n    })\n    .then(r => r.data);\n}\n","import React, {Fragment, memo, useContext, useState} from 'react';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {Link} from 'react-router';\nimport {Comment} from '@common/comments/comment';\nimport {useAuth} from '@common/auth/use-auth';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {NewCommentForm} from '@common/comments/new-comment-form';\nimport {User} from '@ui/types/user';\nimport {Commentable} from '@common/comments/commentable';\nimport {useDeleteComments} from '@common/comments/requests/use-delete-comments';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {queryClient} from '@common/http/query-client';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {FormattedDuration} from '@ui/i18n/formatted-duration';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {ThumbButtons} from '@common/votes/thumb-buttons';\nimport {ReplyIcon} from '@ui/icons/material/Reply';\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\nimport {useSubmitReport} from '@common/reports/requests/use-submit-report';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {UserAvatar} from '@common/auth/user-avatar';\nimport {Avatar} from '@ui/avatar/avatar';\n\ninterface CommentListItemProps {\n  comment: Comment;\n  commentable: Commentable;\n  canDelete?: boolean;\n}\nexport function CommentListItem({\n  comment,\n  commentable,\n  // user can delete comment if they have created it, or they have relevant permissions on commentable\n  canDelete,\n}: CommentListItemProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const {user, hasPermission} = useAuth();\n  const [replyFormVisible, setReplyFormVisible] = useState(false);\n  const showReplyButton =\n    user != null &&\n    !comment.deleted &&\n    comment.depth < 5 &&\n    hasPermission('comments.create');\n\n  return (\n    <div style={{paddingLeft: `${comment.depth * 20}px`}}>\n      <div className=\"group flex min-h-70 items-start gap-24 py-18\">\n        {comment.user ? (\n          <UserAvatar\n            user={comment.user}\n            size={isMobile ? 'lg' : 'xl'}\n            circle\n          />\n        ) : (\n          <Avatar label=\"User\" />\n        )}\n        <div className=\"flex-auto text-sm\">\n          <div className=\"mb-4 flex items-center gap-8\">\n            {comment.user && <UserDisplayName user={comment.user} />}\n            <time className=\"text-xs text-muted\">\n              <FormattedRelativeTime date={comment.created_at} />\n            </time>\n            {comment.position ? (\n              <Position commentable={commentable} position={comment.position} />\n            ) : null}\n          </div>\n          <div className=\"whitespace-pre-line\">\n            {comment.deleted ? (\n              <span className=\"italic text-muted\">\n                <Trans message=\"[COMMENT DELETED]\" />\n              </span>\n            ) : (\n              comment.content\n            )}\n          </div>\n          {!comment.deleted && (\n            <div className=\"-ml-8 mt-10 flex items-center gap-8\">\n              {showReplyButton && (\n                <div className=\"contents\">\n                  <Button\n                    className=\"max-md:hidden\"\n                    sizeClassName=\"text-sm px-8 py-4\"\n                    startIcon={<ReplyIcon />}\n                    onClick={() => setReplyFormVisible(!replyFormVisible)}\n                  >\n                    <Trans message=\"Reply\" />\n                  </Button>\n                  <IconButton\n                    className=\"md:hidden\"\n                    onClick={() => setReplyFormVisible(!replyFormVisible)}\n                  >\n                    <ReplyIcon />\n                  </IconButton>\n                </div>\n              )}\n              <ThumbButtons model={comment} showUpvotesOnly />\n              <CommentOptionsTrigger\n                comment={comment}\n                canDelete={canDelete}\n                user={user}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {replyFormVisible ? (\n        <NewCommentForm\n          className={!comment?.depth ? 'pl-20' : undefined}\n          commentable={commentable}\n          inReplyTo={comment}\n          autoFocus\n          onSuccess={() => {\n            setReplyFormVisible(false);\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n\ninterface PositionProps {\n  commentable: Commentable;\n  position: number;\n}\nconst Position = memo(({commentable, position}: PositionProps) => {\n  if (!commentable.duration) return null;\n  const seconds = (position / 100) * (commentable.duration / 1000);\n  return (\n    <span className=\"text-xs text-muted\">\n      <Trans\n        message=\"at :position\"\n        values={{\n          position: <FormattedDuration seconds={seconds} />,\n        }}\n      />\n    </span>\n  );\n});\n\ninterface DeleteCommentsButtonProps {\n  comment: Comment;\n  canDelete?: boolean;\n  user: User | null;\n}\nexport function CommentOptionsTrigger({\n  comment,\n  canDelete,\n  user,\n}: DeleteCommentsButtonProps) {\n  const deleteComments = useDeleteComments();\n  const reportComment = useSubmitReport(comment);\n\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const showDeleteButton =\n    (comment.user_id === user?.id || canDelete) && !comment.deleted;\n\n  const handleReport = () => {\n    reportComment.mutate({});\n  };\n\n  const handleDelete = (isConfirmed: boolean) => {\n    setIsDeleteDialogOpen(false);\n    if (isConfirmed) {\n      deleteComments.mutate(\n        {commentIds: [comment.id]},\n        {\n          onSuccess: () => {\n            queryClient.invalidateQueries({queryKey: ['comment']});\n          },\n        },\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <MenuTrigger>\n        <Button startIcon={<MoreVertIcon />} sizeClassName=\"text-sm px-8 py-4\">\n          <Trans message=\"More\" />\n        </Button>\n        <Menu>\n          <MenuItem value=\"report\" onSelected={() => handleReport()}>\n            <Trans message=\"Report comment\" />\n          </MenuItem>\n          {showDeleteButton && (\n            <MenuItem\n              value=\"delete\"\n              onSelected={() => setIsDeleteDialogOpen(true)}\n            >\n              <Trans message=\"Delete\" />\n            </MenuItem>\n          )}\n        </Menu>\n      </MenuTrigger>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={isDeleteDialogOpen}\n        onClose={isConfirmed => handleDelete(isConfirmed)}\n      >\n        <ConfirmationDialog\n          isDanger\n          title={<Trans message=\"Delete comment?\" />}\n          body={\n            <Trans message=\"Are you sure you want to delete this comment?\" />\n          }\n          confirm={<Trans message=\"Delete\" />}\n        />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n\ninterface UserDisplayNameProps {\n  user: User;\n}\nfunction UserDisplayName({user}: UserDisplayNameProps) {\n  const {auth} = useContext(SiteConfigContext);\n  if (auth.getUserProfileLink) {\n    return (\n      <Link\n        to={auth.getUserProfileLink(user)}\n        className=\"text-base font-medium hover:underline\"\n      >\n        {user.name}\n      </Link>\n    );\n  }\n  return <div className=\"text-base font-medium\">{user.name}</div>;\n}\n","import {useAuth} from '@common/auth/use-auth';\nimport {Trans} from '@ui/i18n/trans';\nimport {Link} from 'react-router';\nimport {LinkStyle} from '@ui/buttons/external-link';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\n\ninterface Props {\n  message: MessageDescriptor;\n}\nexport function AccountRequiredCard({message}: Props) {\n  const {user} = useAuth();\n  if (user) return null;\n  return (\n    <div className=\"mx-auto my-40 max-w-850 rounded border border-dashed px-20 py-30 text-center\">\n      <div className=\"mb-8 text-xl font-semibold\">\n        <Trans message=\"Account required\" />\n      </div>\n      <div className=\"text-base text-muted\">\n        <Trans\n          {...message}\n          values={{\n            l: parts => (\n              <Link className={LinkStyle} to=\"/login\">\n                {parts}\n              </Link>\n            ),\n            r: parts => (\n              <Link className={LinkStyle} to=\"/register\">\n                {parts}\n              </Link>\n            ),\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import {Comment} from '@common/comments/comment';\nimport {Trans} from '@ui/i18n/trans';\nimport {CommentIcon} from '@ui/icons/material/Comment';\nimport {Commentable} from '@common/comments/commentable';\nimport {useComments} from '@common/comments/requests/use-comments';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {CommentListItem} from '@common/comments/comment-list/comment-list-item';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {ReactNode} from 'react';\nimport {AccountRequiredCard} from '@common/comments/comment-list/account-required-card';\nimport {message} from '@ui/i18n/message';\n\nconst accountRequiredMessage = message(\n  'Please <l>login</l> or <r>create account</r> to comment',\n);\n\ninterface CommentListProps {\n  commentable: Commentable;\n  canDeleteAllComments?: boolean;\n  className?: string;\n  children?: ReactNode;\n  perPage?: number;\n}\nexport function CommentList({\n  className,\n  commentable,\n  canDeleteAllComments = false,\n  children,\n  perPage = 25,\n}: CommentListProps) {\n  const {items, totalItems, ...query} = useComments(commentable, {perPage});\n\n  if (query.isError) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <div className=\"mb-8 flex items-center gap-8 border-b pb-8\">\n        <CommentIcon size=\"sm\" className=\"text-muted\" />\n        {query.isInitialLoading ? (\n          <Trans message=\"Loading comments...\" />\n        ) : (\n          <Trans\n            message=\":count comments\"\n            values={{count: <FormattedNumber value={totalItems || 0} />}}\n          />\n        )}\n      </div>\n      {children}\n      <AccountRequiredCard message={accountRequiredMessage} />\n      <AnimatePresence initial={false} mode=\"wait\">\n        {query.isInitialLoading ? (\n          <CommentSkeletons count={4} />\n        ) : (\n          <CommentListItems\n            comments={items}\n            canDeleteAllComments={canDeleteAllComments}\n            commentable={commentable}\n          />\n        )}\n      </AnimatePresence>\n      <InfiniteScrollSentinel query={query} variant=\"loadMore\" />\n    </div>\n  );\n}\n\ninterface CommentListItemsProps {\n  comments: Comment[];\n  canDeleteAllComments: boolean;\n  commentable: Commentable;\n}\nfunction CommentListItems({\n  comments,\n  commentable,\n  canDeleteAllComments,\n}: CommentListItemsProps) {\n  if (!comments.length) {\n    return (\n      <IllustratedMessage\n        className=\"mt-24\"\n        size=\"sm\"\n        title={<Trans message=\"Seems a little quiet over here\" />}\n        description={<Trans message=\"Be the first to comment\" />}\n      />\n    );\n  }\n\n  return (\n    <m.div key=\"comments\" {...opacityAnimation}>\n      {comments.map(comment => (\n        <CommentListItem\n          key={comment.id}\n          comment={comment}\n          commentable={commentable}\n          canDelete={canDeleteAllComments}\n        />\n      ))}\n    </m.div>\n  );\n}\n\ninterface CommentSkeletonsProps {\n  count: number;\n}\nfunction CommentSkeletons({count}: CommentSkeletonsProps) {\n  return (\n    <m.div key=\"loading-skeleton\" {...opacityAnimation}>\n      {[...new Array(count).keys()].map(index => (\n        <div\n          key={index}\n          className=\"group flex min-h-70 items-start gap-24 py-18\"\n        >\n          <Skeleton variant=\"avatar\" radius=\"rounded-full\" size=\"w-60 h-60\" />\n          <div className=\"flex-auto text-sm\">\n            <Skeleton className=\"mb-4 max-w-184 text-base\" />\n            <Skeleton className=\"text-sm\" />\n            <div className=\"mt-10 flex items-center gap-8\">\n              <Skeleton className=\"max-w-70 text-sm\" />\n              <Skeleton className=\"max-w-40 text-sm\" />\n              <Skeleton className=\"max-w-60 text-sm\" />\n            </div>\n          </div>\n        </div>\n      ))}\n    </m.div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Reportable} from '@common/reports/Reportable';\n\ninterface Response extends BackendResponse {}\n\nexport function useDeleteReport(model: Reportable) {\n  return useMutation({\n    mutationFn: () => deleteReport(model),\n    onSuccess: () => {\n      toast(message('Report removed'));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction deleteReport(reportable: Reportable) {\n  return apiClient\n    .delete<Response>(`report/${reportable.model_type}/${reportable.id}`)\n    .then(r => r.data);\n}\n","import {useSettings} from '@ui/settings/use-settings';\n\nexport function useIsStreamingMode() {\n  const {streaming} = useSettings();\n  return streaming?.prefer_full || false;\n}\n","import {useWatchPageVideo} from '@app/videos/requests/use-watch-page-video';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\nimport {TitleLink} from '@app/titles/title-link';\nimport React, {Fragment, ReactNode, useState} from 'react';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {ThumbButtons} from '@common/votes/thumb-buttons';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {ShareIcon} from '@ui/icons/material/Share';\nimport {FlagIcon} from '@ui/icons/material/Flag';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {Trans} from '@ui/i18n/trans';\nimport {useSubmitReport} from '@common/reports/requests/use-submit-report';\nimport {useDeleteReport} from '@common/reports/requests/use-delete-report';\nimport {Video} from '@app/titles/models/video';\nimport {useIsStreamingMode} from '@app/videos/use-is-streaming-mode';\nimport {EpisodeLink} from '@app/episodes/episode-link';\nimport {CompactSeasonEpisode} from '@app/episodes/compact-season-episode';\nimport {ShareMenuTrigger} from '@app/sharing/share-menu-trigger';\nimport {getWatchLink} from '@app/videos/watch-page/get-watch-link';\n\nexport function WatchPageTitleDetails() {\n  const {data} = useWatchPageVideo();\n  const isStreamingMode = useIsStreamingMode();\n\n  const content = !data ? (\n    <Layout\n      key=\"skeleton\"\n      poster={<Skeleton variant=\"rect\" size=\"w-132 aspect-poster\" />}\n      titleLink={<Skeleton className=\"max-w-144\" />}\n      videoName={<Skeleton className=\"max-w-240\" />}\n      description={\n        <Fragment>\n          <Skeleton />\n          <Skeleton />\n        </Fragment>\n      }\n      rate={\n        <div className=\"flex h-32 items-center gap-2\">\n          <Skeleton variant=\"rect\" size=\"w-56 h-24\" className=\"mr-10\" />\n          <Skeleton variant=\"rect\" size=\"w-56 h-24\" />\n        </div>\n      }\n    />\n  ) : (\n    <Layout\n      key=\"loaded\"\n      poster={\n        <TitlePoster\n          size=\"w-132\"\n          srcSize=\"md\"\n          title={data.title}\n          showPlayButton\n          className=\"max-md:hidden\"\n        />\n      }\n      titleLink={<TitleLink title={data.title} />}\n      videoName={!isStreamingMode ? data.video.name : undefined}\n      episodeName={\n        data.episode ? (\n          <EpisodeLink title={data.title} episode={data.episode}>\n            {data.episode.name} (<CompactSeasonEpisode episode={data.episode} />\n            )\n          </EpisodeLink>\n        ) : undefined\n      }\n      description={data.episode?.description || data.title.description}\n      rate={\n        <div className=\"flex items-center gap-2\">\n          <ThumbButtons model={data.video} className=\"mr-auto\" />\n          <ReportButton video={data.video} />\n          <ShareButton video={data.video} />\n        </div>\n      }\n    />\n  );\n\n  return (\n    <AnimatePresence initial={false} mode=\"wait\">\n      {content}\n    </AnimatePresence>\n  );\n}\n\ninterface ShareButtonProps {\n  video: Video;\n}\nfunction ShareButton({video}: ShareButtonProps) {\n  const link = getWatchLink(video, {absolute: true});\n  return (\n    <ShareMenuTrigger link={link}>\n      <Tooltip label={<Trans message=\"Share\" />}>\n        <IconButton>\n          <ShareIcon />\n        </IconButton>\n      </Tooltip>\n    </ShareMenuTrigger>\n  );\n}\n\ninterface ReportButtonProps {\n  video: Video;\n}\nfunction ReportButton({video}: ReportButtonProps) {\n  const report = useSubmitReport(video);\n  const deleteReport = useDeleteReport(video);\n  const [isReported, setIsReported] = useState(video.current_user_reported);\n\n  return (\n    <Tooltip label={<Trans message=\"Report\" />}>\n      <IconButton\n        onClick={() => {\n          if (isReported) {\n            deleteReport.mutate();\n          } else {\n            report.mutate({});\n          }\n          setIsReported(!isReported);\n        }}\n      >\n        <FlagIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n\ninterface LayoutProps {\n  poster?: ReactNode;\n  titleLink: ReactNode;\n  videoName: ReactNode;\n  episodeName?: ReactNode;\n  description: ReactNode;\n  rate?: ReactNode;\n}\nfunction Layout({\n  poster,\n  titleLink,\n  videoName,\n  episodeName,\n  description,\n  rate,\n}: LayoutProps) {\n  return (\n    <m.div\n      className=\"flex items-start gap-16 overflow-hidden rounded pr-6\"\n      {...opacityAnimation}\n    >\n      {poster}\n      <div className=\"flex-auto py-6\">\n        <h1 className=\"mb-6 text-2xl font-medium\">{titleLink}</h1>\n        {episodeName && (\n          <div className=\"text-base font-medium\">{episodeName}</div>\n        )}\n        {videoName && <div className=\"text-base font-medium\">{videoName}</div>}\n        <div className=\"my-12\">{rate}</div>\n        {description && (\n          <p className=\"max-w-780 text-sm text-muted\">{description}</p>\n        )}\n      </div>\n    </m.div>\n  );\n}\n","import {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Trans} from '@ui/i18n/trans';\nimport {VideoGridItem, VideoGridItemSkeleton} from '@app/titles/video-grid';\nimport React, {ReactNode} from 'react';\nimport {useWatchPageVideo} from '@app/videos/requests/use-watch-page-video';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {useIsStreamingMode} from '@app/videos/use-is-streaming-mode';\nimport {Video} from '@app/titles/models/video';\nimport {CompactSeasonEpisode} from '@app/episodes/compact-season-episode';\nimport clsx from 'clsx';\n\nexport function WatchPageAside() {\n  const {data} = useWatchPageVideo();\n\n  const content = !data ? (\n    <m.div key=\"skeleton\" {...opacityAnimation}>\n      <VideoGridItemSkeleton className=\"mb-34\" />\n      <VideoGridItemSkeleton className=\"mb-34\" />\n      <VideoGridItemSkeleton className=\"mb-34\" />\n    </m.div>\n  ) : (\n    <m.div key=\"loaded\" {...opacityAnimation}>\n      {data.related_videos.map(video => (\n        <RelatedVideo video={video} key={video.id} activeVideo={data.video} />\n      ))}\n    </m.div>\n  );\n\n  return (\n    <aside className=\"w-350 flex-shrink-0 max-lg:mt-54\">\n      <SiteSectionHeading\n        fontWeight=\"font-medium\"\n        fontSize=\"text-2xl\"\n        margin=\"mb-28\"\n      >\n        <Header />\n      </SiteSectionHeading>\n      <AnimatePresence initial={false} mode=\"wait\">\n        {content}\n      </AnimatePresence>\n    </aside>\n  );\n}\n\nfunction Header() {\n  const {data} = useWatchPageVideo();\n  const isStreamingMode = useIsStreamingMode();\n\n  if (!data?.video) {\n    return <div className=\"h-32\" />;\n  }\n\n  return isStreamingMode ? (\n    <Trans message=\"Related movies & series\" />\n  ) : (\n    <Trans message=\"Related videos\" />\n  );\n}\n\ninterface RelatedVideoProps {\n  video: Video;\n  activeVideo: Video;\n}\nfunction RelatedVideo({video, activeVideo}: RelatedVideoProps) {\n  const isStreamingMode = useIsStreamingMode();\n\n  let name: ReactNode = video.name;\n\n  if (isStreamingMode) {\n    if (video.episode) {\n      name = (\n        <span>\n          {video.episode.name} (<CompactSeasonEpisode episode={video.episode} />\n          )\n        </span>\n      );\n    } else {\n      name = video.title!.name;\n    }\n  }\n\n  return (\n    <VideoGridItem\n      video={video}\n      title={video.title}\n      episode={video.episode}\n      forceTitleBackdrop={isStreamingMode}\n      className={clsx(\n        'mb-24 text-sm',\n        activeVideo.id === video.id && 'text-primary',\n      )}\n      showCategory={!isStreamingMode}\n      name={name}\n    />\n  );\n}\n","import {UseWatchPageVideoResponse} from '@app/videos/requests/use-watch-page-video';\nimport {MediaPlayIcon} from '@ui/icons/media/media-play';\nimport {getWatchLink} from '@app/videos/watch-page/get-watch-link';\nimport {Button} from '@ui/buttons/button';\nimport {Link, useParams} from 'react-router';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport clsx from 'clsx';\nimport {Video} from '@app/titles/models/video';\nimport {useSettings} from '@ui/settings/use-settings';\nimport React, {Fragment} from 'react';\nimport {EpisodeSelector} from '@app/videos/watch-page/episode-selector';\nimport {MediaEpisodesIcon} from '@ui/icons/media/media-episodes';\nimport {Trans} from '@ui/i18n/trans';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\n\nconst className = 'flex items-center flex-wrap gap-14';\n\ninterface Props {\n  data: UseWatchPageVideoResponse | undefined;\n}\nexport function WatchPageAlternativeVideos({data}: Props) {\n  const navigate = useNavigate();\n  const {streaming} = useSettings();\n  const title = data?.title;\n  const episode = data?.episode;\n  const video = data?.video;\n\n  const showEpisodeSelector =\n    title &&\n    episode &&\n    video &&\n    (video.type === 'embed' || video.type === 'external');\n\n  if (!showEpisodeSelector && !streaming.show_video_selector) {\n    return null;\n  }\n\n  return (\n    <div className=\"mt-14 flex items-start justify-between gap-48\">\n      {streaming.show_video_selector && (\n        <Fragment>\n          <VideoDropdown\n            className=\"lg:hidden\"\n            videos={data?.alternative_videos || []}\n          />\n          <div className=\"max-lg:hidden\">\n            <AnimatePresence initial={false} mode=\"wait\">\n              {data ? (\n                <VideoList videos={data.alternative_videos} />\n              ) : (\n                <Skeletons />\n              )}\n            </AnimatePresence>\n          </div>\n        </Fragment>\n      )}\n      {showEpisodeSelector && (\n        <EpisodeSelector\n          title={title}\n          currentEpisode={episode}\n          onSelected={episode => {\n            navigate(getWatchLink(episode.primary_video));\n          }}\n          trigger={\n            <Button\n              variant=\"outline\"\n              className=\"min-h-40\"\n              startIcon={<MediaEpisodesIcon />}\n            >\n              <Trans message=\"All episodes\" />\n            </Button>\n          }\n        />\n      )}\n    </div>\n  );\n}\n\ninterface VideoDropdownProps {\n  videos: Video[];\n  className?: string;\n}\nfunction VideoDropdown({videos, className}: VideoDropdownProps) {\n  const navigate = useNavigate();\n  return (\n    <MenuTrigger>\n      <Button\n        variant=\"outline\"\n        className={clsx('min-h-40', className)}\n        startIcon={<MediaPlayIcon />}\n      >\n        <Trans message=\"Other sources\" />\n      </Button>\n      <Menu>\n        {videos.map(video => (\n          <MenuItem\n            value={video.id}\n            key={video.id}\n            startIcon={<MediaPlayIcon />}\n            endSection={<QualityBadge video={video} />}\n            onSelected={() => navigate(getWatchLink(video))}\n          >\n            {video.name}\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\ninterface VideoListProps {\n  videos: Video[];\n}\nfunction VideoList({videos}: VideoListProps) {\n  const {videoId} = useParams();\n\n  if (videos.length < 2) {\n    return null;\n  }\n\n  return (\n    <m.div\n      key=\"alternative-sources\"\n      className={className}\n      {...opacityAnimation}\n    >\n      {videos.map(video => (\n        <Button\n          elementType={Link}\n          to={getWatchLink(video)}\n          key={video.id}\n          variant=\"outline\"\n          color={videoId === `${video.id}` ? 'primary' : 'chip'}\n          startIcon={<MediaPlayIcon aria-hidden />}\n          className=\"min-h-40 gap-10\"\n        >\n          {video.name}\n          <QualityBadge video={video} />\n        </Button>\n      ))}\n    </m.div>\n  );\n}\n\ninterface QualityBadgeProps {\n  video: Video;\n}\nfunction QualityBadge({video}: QualityBadgeProps) {\n  if (!video.quality || video.quality === 'default') {\n    return null;\n  }\n  return (\n    <span className=\"rounded border px-6 text-xs font-bold uppercase\">\n      {video.quality}\n    </span>\n  );\n}\n\nfunction Skeletons() {\n  return (\n    <m.div\n      key=\"skeletons\"\n      className={clsx(className, 'h-40')}\n      {...opacityAnimation}\n    >\n      <Skeleton variant=\"rect\" size=\"h-full w-[116px]\" />\n      <Skeleton variant=\"rect\" size=\"h-full w-[116px]\" />\n      <Skeleton variant=\"rect\" size=\"h-full w-[116px]\" />\n      <Skeleton variant=\"rect\" size=\"h-full w-[116px]\" />\n      <Skeleton variant=\"rect\" size=\"h-full w-[116px]\" />\n    </m.div>\n  );\n}\n","import React, {Fragment, useState} from 'react';\nimport {MainNavbar} from '@app/main-navbar';\nimport {useDarkThemeVariables} from '@ui/themes/use-dark-theme-variables';\nimport {\n  useWatchPageVideo,\n  UseWatchPageVideoResponse,\n} from '@app/videos/requests/use-watch-page-video';\nimport {Footer} from '@common/ui/footer/footer';\nimport {PageErrorMessage} from '@common/errors/page-error-message';\nimport {CommentList} from '@common/comments/comment-list/comment-list';\nimport {NewCommentForm} from '@common/comments/new-comment-form';\nimport {WatchPageTitleDetails} from '@app/videos/watch-page/watch-page-title-details';\nimport {WatchPageAside} from '@app/videos/watch-page/watch-page-aside';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {useScrollToTop} from '@common/ui/navigation/use-scroll-to-top';\nimport {VideoPlayerSkeleton} from '@app/videos/video-player-skeleton';\nimport {SiteVideoPlayer} from '@app/videos/site-video-player';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useIsStreamingMode} from '@app/videos/use-is-streaming-mode';\nimport {WatchPageAlternativeVideos} from '@app/videos/watch-page/watch-page-alternative-videos';\nimport {AdHost} from '@common/admin/ads/ad-host';\nimport {Episode} from '@app/titles/models/episode';\nimport {Title} from '@app/titles/models/title';\nimport {Video} from '@app/titles/models/video';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {VideoThumbnail} from '@app/videos/video-thumbnail';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button} from '@ui/buttons/button';\nimport {Link} from 'react-router';\n\nexport function WatchPage() {\n  const darkThemeVars = useDarkThemeVariables();\n  useScrollToTop();\n\n  return (\n    <Fragment>\n      <MainNavbar />\n      <div style={darkThemeVars} className=\"dark min-h-screen bg text\">\n        <div className=\"container mx-auto p-14 md:p-24\">\n          <Content />\n          <Footer className=\"mt-48\" />\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nfunction Content() {\n  const {titles, comments} = useSettings();\n  const {isLoggedIn, hasPermission} = useAuth();\n  const query = useWatchPageVideo();\n  const {data, isLoading} = query;\n  const title = data?.title;\n  const episode = data?.episode;\n  const video = data?.video;\n  let commentable: Episode | Title | Video | undefined = video;\n\n  if (!comments?.per_video) {\n    commentable = episode || title;\n  }\n\n  const shouldShowComments =\n    title && video && titles.enable_comments && hasPermission('comments.view');\n\n  if (data || isLoading) {\n    return (\n      <Fragment key={video?.id || 'loading'}>\n        <PageMetaTags query={query} />\n        <VideoWrapper data={data} />\n        <WatchPageAlternativeVideos data={data} />\n        <AdHost slot=\"watch_top\" className=\"pt-48\" />\n        <section className=\"mt-42 items-start gap-56 lg:flex\">\n          <div className=\"flex-auto\">\n            <WatchPageTitleDetails />\n            {shouldShowComments && (\n              <CommentList\n                commentable={commentable!}\n                className=\"mt-44\"\n                perPage={20}\n              >\n                {isLoggedIn && hasPermission('comments.create') && (\n                  <NewCommentForm\n                    commentable={commentable!}\n                    className=\"mb-14 mt-24\"\n                  />\n                )}\n              </CommentList>\n            )}\n          </div>\n          <WatchPageAside />\n        </section>\n      </Fragment>\n    );\n  }\n\n  return <PageErrorMessage />;\n}\n\ninterface VideoWrapperProps {\n  data?: UseWatchPageVideoResponse;\n}\nfunction VideoWrapper({data}: VideoWrapperProps) {\n  const isStreamingMode = useIsStreamingMode();\n  const {hasPermission} = useAuth();\n\n  const [isVisible, setIsVisible] = useState(false);\n  useLayoutEffect(() => {\n    setIsVisible(true);\n  }, []);\n\n  return (\n    <AnimatePresence initial={false} mode=\"wait\">\n      {data?.video && isVisible ? (\n        <m.div key=\"player\" {...opacityAnimation}>\n          {hasPermission('videos.play') ? (\n            <SiteVideoPlayer\n              title={data.title}\n              episode={data.episode}\n              video={data.video}\n              relatedVideos={data.related_videos}\n              autoPlay\n              logPlays\n              showEpisodeSelector={isStreamingMode}\n            />\n          ) : (\n            <UpgradeMessage video={data.video} />\n          )}\n        </m.div>\n      ) : (\n        <m.div className=\"relative\" key=\"skeleton\" {...opacityAnimation}>\n          <VideoPlayerSkeleton animate />\n        </m.div>\n      )}\n    </AnimatePresence>\n  );\n}\n\ninterface UpgradeMessageProps {\n  video: Video;\n}\nfunction UpgradeMessage({video}: UpgradeMessageProps) {\n  return (\n    <div className=\"relative flex aspect-video items-center justify-center bg-alt\">\n      <div className=\"blur\">\n        <VideoThumbnail video={video} />\n      </div>\n      <div className=\"absolute h-max w-max max-w-full rounded-lg bg-black/60 p-24 text-lg font-medium\">\n        <div>\n          <Trans message=\"Your current plan does not allow watching videos. Upgrade to unlock this feature.\" />\n        </div>\n        <div className=\"mt-14 text-center\">\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            elementType={Link}\n            to=\"/pricing\"\n          >\n            <Trans message=\"Upgrade\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {TitleImage} from '@app/titles/models/title-image';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ImageZoomDialog} from '@ui/overlays/dialog/image-zoom-dialog';\nimport {ButtonBase} from '@ui/buttons/button-base';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {ImageSize, useImageSrc} from '@app/images/use-image-src';\nimport {ReactNode} from 'react';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\n\ninterface Props {\n  images: TitleImage[];\n  count?: number;\n  heading?: ReactNode;\n  srcSize?: ImageSize;\n}\nexport function TitlePageImageGrid({images, count, heading, srcSize}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  const {trans} = useTrans();\n  if (!images?.length) return null;\n\n  if (!count) {\n    count = isMobile ? 6 : 5;\n  }\n\n  return (\n    <div className=\"mt-48\">\n      {heading}\n      <div className=\"grid grid-cols-3 gap-12 md:grid-cols-5 md:gap-24\">\n        {images.slice(0, count).map((image, index) => (\n          <DialogTrigger type=\"modal\" key={image.id}>\n            <ButtonBase\n              aria-label={trans(message('Image :index', {values: {index}}))}\n            >\n              <ImageItem image={image} srcSize={srcSize} />\n            </ButtonBase>\n            <ImageZoomDialog\n              images={images.map(img => img.url)}\n              defaultActiveIndex={index}\n            />\n          </DialogTrigger>\n        ))}\n      </div>\n    </div>\n  );\n}\n\ninterface ImageProps {\n  image: TitleImage;\n  srcSize?: ImageSize;\n}\nfunction ImageItem({image, srcSize = 'md'}: ImageProps) {\n  const src = useImageSrc(image.url, {size: srcSize});\n  return (\n    <img\n      className=\"aspect-square w-full cursor-pointer rounded object-cover\"\n      src={src}\n      alt=\"\"\n    />\n  );\n}\n","import {PersonPoster} from '@app/people/person-poster/person-poster';\nimport {PersonLink} from '@app/people/person-link';\nimport {TitleCredit} from '@app/titles/models/title';\nimport clsx from 'clsx';\nimport {Fragment} from 'react';\nimport {Trans} from '@ui/i18n/trans';\n\ninterface Props {\n  credits: TitleCredit[];\n  className?: string;\n}\nexport function TitleCreditsGrid({credits, className}: Props) {\n  if (!credits.length) {\n    return (\n      <div className=\"italic text-muted\">\n        <Trans message=\"We've no cast information for this title yet.\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={clsx('title-credits-grid grid gap-14 md:gap-20', className)}\n    >\n      {credits.map(credit => (\n        <div\n          key={credit.pivot.id}\n          className=\"flex items-center gap-14 md:gap-20\"\n        >\n          <PersonPoster\n            rounded\n            person={credit}\n            size=\"w-70 md:w-96\"\n            srcSize=\"md\"\n          />\n          <div className=\"max-md:text-sm\">\n            <PersonLink className=\"block font-bold\" person={credit} />\n            <div className=\"text-muted\">\n              <Description credit={credit} />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\ninterface DescriptionProps {\n  credit: TitleCredit;\n}\nfunction Description({credit}: DescriptionProps) {\n  if (credit.pivot.department === 'actors') {\n    return <Fragment>{credit.pivot.character}</Fragment>;\n  }\n  return (\n    <span className=\"capitalize\">\n      <Trans message={credit.pivot.job} />\n    </span>\n  );\n}\n","import {TitleCredit} from '@app/titles/models/title';\nimport {Trans} from '@ui/i18n/trans';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Button} from '@ui/buttons/button';\nimport {Link} from 'react-router';\nimport {ArrowForwardIcon} from '@ui/icons/material/ArrowForward';\nimport {TitleCreditsGrid} from '@app/titles/pages/title-page/title-credits-grid/title-credits-grid';\n\ninterface Props {\n  credits: TitleCredit[] | undefined;\n}\nexport function TitlePageCast({credits = []}: Props) {\n  const cast = credits.filter(credit => credit.pivot.department === 'actors');\n  return (\n    <div className=\"mt-48\">\n      <SiteSectionHeading>\n        <Trans message=\"Cast\" />\n      </SiteSectionHeading>\n      <TitleCreditsGrid credits={cast} />\n      <Button\n        className=\"mt-24\"\n        variant=\"outline\"\n        color=\"primary\"\n        elementType={Link}\n        to=\"full-credits\"\n        endIcon={<ArrowForwardIcon />}\n      >\n        <Trans message=\"All cast and crew\" />\n      </Button>\n    </div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {Title} from '@app/titles/models/title';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  titles: Title[];\n}\n\nexport function useRelatedTitles(titleId: number) {\n  return useQuery({\n    queryKey: ['titles', titleId, 'related'],\n    queryFn: () => fetchRelatedTitles(titleId!),\n  });\n}\n\nfunction fetchRelatedTitles(titleId: number | string) {\n  return apiClient\n    .get<Response>(`titles/${titleId}/related`)\n    .then(response => response.data);\n}\n","import {Title} from '@app/titles/models/title';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Trans} from '@ui/i18n/trans';\nimport {useRelatedTitles} from '@app/titles/requests/use-related-titles';\nimport {useCarousel} from '@app/channels/carousel/use-carousel';\nimport React, {Fragment} from 'react';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport clsx from 'clsx';\nimport {TitlePortraitGridItem} from '@app/channels/content-grid/title-grid-item';\n\ninterface Props {\n  title: Title;\n}\nexport function RelatedTitlesPanel({title}: Props) {\n  const {data} = useRelatedTitles(title.id);\n\n  if (!data || data.titles.length === 0) {\n    return null;\n  }\n\n  return <RelatedTitlesCarousel titles={data.titles} />;\n}\n\ninterface RelatedTitlesCarouselProps {\n  titles: Title[];\n}\nfunction RelatedTitlesCarousel({titles}: RelatedTitlesCarouselProps) {\n  const {\n    scrollContainerRef,\n    canScrollForward,\n    canScrollBackward,\n    scrollToPreviousPage,\n    scrollToNextPage,\n    containerClassName,\n    itemClassName,\n  } = useCarousel();\n\n  return (\n    <div className=\"mt-48\">\n      <SiteSectionHeading\n        actions={\n          <Fragment>\n            <IconButton\n              disabled={!canScrollBackward}\n              onClick={() => scrollToPreviousPage()}\n              aria-label=\"Scroll left\"\n            >\n              <KeyboardArrowLeftIcon />\n            </IconButton>\n            <IconButton\n              disabled={!canScrollForward}\n              onClick={() => scrollToNextPage()}\n              aria-label=\"Scroll right\"\n            >\n              <KeyboardArrowRightIcon />\n            </IconButton>\n          </Fragment>\n        }\n      >\n        <Trans message=\"More like this\" />\n      </SiteSectionHeading>\n      <div\n        ref={scrollContainerRef}\n        className={clsx(containerClassName, 'content-grid-portrait')}\n      >\n        {titles.map(item => (\n          <div className={itemClassName} key={item.id}>\n            <TitlePortraitGridItem item={item} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {SeasonPoster} from '@app/seasons/season-poster';\nimport {SeasonLink} from '@app/seasons/season-link';\nimport {GetTitleResponse} from '@app/titles/requests/use-title';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {useTitleSeasons} from '@app/titles/requests/use-title-seasons';\n\ninterface Props {\n  data: GetTitleResponse;\n}\nexport function TitlePageSeasonGrid({data: {title, seasons}}: Props) {\n  const query = useTitleSeasons(title.id, seasons);\n  return (\n    <div className=\"mt-48\">\n      <SiteSectionHeading\n        titleAppend={seasons?.total ? `(${seasons.total})` : undefined}\n      >\n        <Trans message=\"Seasons\" />\n      </SiteSectionHeading>\n      <div>\n        <div className=\"grid grid-cols-4 gap-14 sm:grid-cols-6 lg:grid-cols-8\">\n          {query.items.map(season => (\n            <div key={season.id}>\n              <SeasonPoster\n                title={title}\n                season={season}\n                srcSize=\"sm\"\n                className=\"aspect-poster flex-shrink-0\"\n              />\n              <div className=\"mt-4\">\n                <SeasonLink\n                  className=\"text-sm\"\n                  title={title}\n                  seasonNumber={season.number}\n                  color=\"primary\"\n                />\n                <div className=\"text-xs text-muted\">\n                  <FormattedDate\n                    timezone=\"utc\"\n                    date={season.release_date}\n                    options={{year: 'numeric'}}\n                  />\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <InfiniteScrollSentinel\n          query={query}\n          variant=\"loadMore\"\n          loaderMarginTop=\"mt-14\"\n          size=\"sm\"\n        />\n      </div>\n    </div>\n  );\n}\n","import {memo, ReactNode} from 'react';\nimport {Trans} from '@ui/i18n/trans';\nimport {BulletSeparatedItems} from '@app/titles/bullet-separated-items';\nimport {PersonLink} from '@app/people/person-link';\nimport {GroupTitleCredits} from '@app/titles/requests/use-title';\n\ninterface Props {\n  credits: GroupTitleCredits | undefined;\n}\nexport const CompactCredits = memo(({credits = {}}: Props) => (\n  <div className=\"mt-16 flex flex-col gap-14 border-t pt-16\">\n    {credits.creators?.length ? (\n      <PeopleDetail label={<Trans message=\"Created by\" />}>\n        <BulletSeparatedItems className=\"hidden-scrollbar overflow-x-auto\">\n          {credits.creators.slice(0, 3).map(creator => (\n            <PersonLink\n              person={creator}\n              key={creator.id}\n              color=\"primary\"\n              className=\"whitespace-nowrap\"\n            />\n          ))}\n        </BulletSeparatedItems>\n      </PeopleDetail>\n    ) : null}\n    {credits.directing?.length ? (\n      <PeopleDetail\n        label={\n          <Trans\n            message=\"[one Director|other Directors]\"\n            values={{count: credits.directing.length}}\n          />\n        }\n      >\n        <BulletSeparatedItems className=\"hidden-scrollbar overflow-x-auto\">\n          {credits.directing.slice(0, 3).map(director => (\n            <PersonLink\n              person={director}\n              key={director.id}\n              color=\"primary\"\n              className=\"whitespace-nowrap\"\n            />\n          ))}\n        </BulletSeparatedItems>\n      </PeopleDetail>\n    ) : null}\n    {credits.writing?.length ? (\n      <PeopleDetail\n        label={\n          <Trans\n            message=\"[one Writer|other Writers]\"\n            values={{count: credits.writing.length}}\n          />\n        }\n      >\n        <BulletSeparatedItems className=\"hidden-scrollbar overflow-x-auto\">\n          {credits.writing.slice(0, 3).map(writer => (\n            <PersonLink\n              person={writer}\n              key={writer.id}\n              color=\"primary\"\n              className=\"whitespace-nowrap\"\n            />\n          ))}\n        </BulletSeparatedItems>\n      </PeopleDetail>\n    ) : null}\n    {credits.actors?.length ? (\n      <PeopleDetail label={<Trans message=\"Stars\" />}>\n        <BulletSeparatedItems className=\"hidden-scrollbar overflow-x-auto\">\n          {credits.actors.slice(0, 3).map(actor => (\n            <PersonLink\n              person={actor}\n              key={actor.id}\n              color=\"primary\"\n              className=\"whitespace-nowrap\"\n            />\n          ))}\n        </BulletSeparatedItems>\n      </PeopleDetail>\n    ) : null}\n  </div>\n));\n\ninterface PeopleDetailProps {\n  label: ReactNode;\n  children: ReactNode;\n}\nfunction PeopleDetail({label, children}: PeopleDetailProps) {\n  return (\n    <div className=\"flex-shrink-0 gap-24 md:flex\">\n      <div className=\"min-w-84 font-bold\">{label}</div>\n      <div>{children}</div>\n    </div>\n  );\n}\n","import React, {useMemo} from 'react';\nimport {Genre} from '@app/titles/models/genre';\nimport {\n  BaseMediaLink,\n  BaseMediaLinkProps,\n  getBaseMediaLink,\n} from '@app/base-media-link';\nimport {Trans} from '@ui/i18n/trans';\n\ninterface Props extends Omit<BaseMediaLinkProps, 'link'> {\n  genre: Genre;\n}\nexport function GenreLink({genre, children, ...otherProps}: Props) {\n  const link = useMemo(() => getGenreLink(genre), [genre]);\n  return (\n    <BaseMediaLink {...otherProps} link={link}>\n      {children ?? <Trans message={genre.display_name || genre.name} />}\n    </BaseMediaLink>\n  );\n}\n\nexport function getGenreLink(\n  genre: Genre,\n  {absolute}: {absolute?: boolean} = {},\n): string {\n  return getBaseMediaLink(`/genre/${genre.name}`, {absolute});\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {NewsArticle} from '@app/titles/models/news-article';\n\ninterface Response {\n  news_articles: NewsArticle[];\n}\n\nexport function useTitleNews(titleId: number | string) {\n  return useQuery({\n    queryKey: ['titles', `${titleId}`, 'news'],\n    queryFn: () => fetchNews(titleId),\n  });\n}\n\nfunction fetchNews(titleId: number | string) {\n  return apiClient\n    .get<Response>(`titles/${titleId}/news`)\n    .then(response => response.data);\n}\n","import {useTitleNews} from '@app/titles/pages/title-page/sections/title-news/use-title-news';\nimport React from 'react';\nimport {NewsArticleGridItem} from '@app/news/news-article-grid-item';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Trans} from '@ui/i18n/trans';\nimport {Title} from '@app/titles/models/title';\n\ninterface Props {\n  title: Title;\n}\nexport function TitleNews({title}: Props) {\n  const {data, isLoading} = useTitleNews(title.id);\n\n  if (!isLoading && !data?.news_articles.length) {\n    return null;\n  }\n\n  return (\n    <section className=\"mt-48\">\n      <SiteSectionHeading>\n        <Trans message=\"Related news\" />\n      </SiteSectionHeading>\n      <div className=\"grid grid-cols-2 gap-24\">\n        {data?.news_articles.map(article => (\n          <NewsArticleGridItem key={article.id} article={article} />\n        ))}\n      </div>\n    </section>\n  );\n}\n","import {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport {useAuth} from '@common/auth/use-auth';\nimport {\n  CreateReviewPayload,\n  useCreateReview,\n} from '@app/reviews/requests/use-create-review';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '@ui/forms/form';\nimport {Avatar} from '@ui/avatar/avatar';\nimport {Trans} from '@ui/i18n/trans';\nimport {StarSelector} from '@app/reviews/review-list/star-selector';\nimport {Button} from '@ui/buttons/button';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Reviewable} from '@app/reviews/reviewable';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport clsx from 'clsx';\nimport {Review} from '@app/titles/models/review';\n\nexport interface NewReviewFormActions {\n  openReviewPanel: () => void;\n}\n\ninterface Props {\n  reviewable: Reviewable;\n  currentReview?: Review;\n  className?: string;\n  disabled?: boolean;\n}\nexport const NewReviewForm = forwardRef<NewReviewFormActions, Props>(\n  ({reviewable, currentReview, className, disabled}, ref) => {\n    const [isExpanded, setIsExpanded] = useState(false);\n    const {user} = useAuth();\n    const form = useForm<CreateReviewPayload>({\n      defaultValues: {\n        score: 8,\n      },\n    });\n\n    useEffect(() => {\n      if (currentReview) {\n        form.setValue('title', currentReview.title);\n        form.setValue('body', currentReview.body);\n        form.setValue('score', currentReview.score);\n      }\n    }, [form, currentReview]);\n\n    const openReviewPanel = useCallback(() => {\n      setIsExpanded(true);\n    }, []);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        openReviewPanel,\n      }),\n      [openReviewPanel],\n    );\n\n    const createReview = useCreateReview(form);\n    return (\n      <Form\n        className={clsx('rounded border bg-alt p-14', className)}\n        form={form}\n        onSubmit={newValues => {\n          if (disabled) return;\n          createReview.mutate(\n            {\n              ...newValues,\n              reviewable,\n            },\n            {\n              onSuccess: () => {\n                toast(message('Review posted'));\n                setIsExpanded(false);\n              },\n            },\n          );\n        }}\n      >\n        <div className=\"items-center gap-24 lg:flex\">\n          <Avatar size=\"xl\" circle src={user?.image} label={user?.name} />\n          <div className=\"flex-auto\">\n            <div className=\"mb-4 text-xs text-muted max-md:mt-10\">\n              <Trans\n                message=\"Review as :name\"\n                values={{\n                  name: <span className=\"font-medium text\">{user?.name}</span>,\n                }}\n              />\n            </div>\n            <StarSelector\n              readonly={disabled}\n              className=\"-ml-8 max-lg:mb-12\"\n              count={10}\n              value={disabled ? 0 : form.watch('score')}\n              onValueChange={newScore => {\n                form.setValue('score', newScore);\n              }}\n            />\n          </div>\n          {!isExpanded && (\n            <Button\n              variant=\"flat\"\n              color=\"primary\"\n              onClick={() => openReviewPanel()}\n              disabled={!user || disabled}\n            >\n              {currentReview ? (\n                <Trans message=\"Update review\" />\n              ) : (\n                <Trans message=\"Add review\" />\n              )}\n            </Button>\n          )}\n        </div>\n        {isExpanded && (\n          <div className=\"mt-24\">\n            <FormTextField\n              name=\"title\"\n              className=\"mb-24\"\n              label={<Trans message=\"Title\" />}\n              labelSuffix={<Trans message=\"10 character minimum\" />}\n              autoFocus\n              minLength={10}\n              required\n            />\n            <FormTextField\n              name=\"body\"\n              label={<Trans message=\"Review\" />}\n              labelSuffix={<Trans message=\"100 character minimum\" />}\n              inputElementType=\"textarea\"\n              rows={5}\n              minLength={100}\n              required\n            />\n            <div className=\"mt-16 flex items-center justify-end gap-8\">\n              <Button\n                variant=\"outline\"\n                className=\"min-w-100\"\n                onClick={() => {\n                  setIsExpanded(false);\n                  form.reset(currentReview);\n                }}\n              >\n                <Trans message=\"Cancel\" />\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"flat\"\n                color=\"primary\"\n                className=\"min-w-100\"\n                disabled={createReview.isPending}\n              >\n                <Trans message=\"Post\" />\n              </Button>\n            </div>\n          </div>\n        )}\n      </Form>\n    );\n  },\n);\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {Review} from '@app/titles/models/review';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\n\ninterface Response extends BackendResponse {\n  review: Review;\n}\n\ninterface Payload {\n  isHelpful: boolean;\n}\n\nexport function useSubmitReviewFeedback(review: Review) {\n  return useMutation({\n    mutationFn: (payload: Payload) => submitFeedback(payload, review),\n    onSuccess: () => {\n      toast(message('Feedback submitted'));\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction submitFeedback(payload: Payload, review: Review): Promise<Response> {\n  return apiClient\n    .post(`reviews/${review.id}/feedback`, {\n      is_helpful: payload.isHelpful,\n    })\n    .then(r => r.data);\n}\n","import {Review} from '@app/titles/models/review';\nimport {UserAvatar} from '@common/auth/user-avatar';\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\nimport {TitleRating} from '@app/reviews/title-rating';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {\n  Fragment,\n  ReactElement,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport {Link, useLocation} from 'react-router';\nimport {Button} from '@ui/buttons/button';\nimport {useSubmitReviewFeedback} from '@app/reviews/requests/use-submit-review-feedback';\nimport clsx from 'clsx';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useAuthClickCapture} from '@app/use-auth-click-capture';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport {useSubmitReport} from '@common/reports/requests/use-submit-report';\nimport {useDeleteReport} from '@common/reports/requests/use-delete-report';\nimport {ShareIcon} from '@ui/icons/material/Share';\nimport useClipboard from 'react-use-clipboard';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {MoreVertIcon} from '@ui/icons/material/MoreVert';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteReviews} from '@app/reviews/requests/use-delete-reviews';\nimport {User} from '@ui/types/user';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {Avatar} from '@ui/avatar/avatar';\n\ninterface Props {\n  review: Review;\n  isShared?: boolean;\n  hideShareButton?: boolean;\n  avatar?: ReactElement;\n}\nexport function ReviewListItem({\n  review,\n  isShared,\n  hideShareButton,\n  avatar,\n}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  const ref = useRef<HTMLDivElement>(null);\n  const scrolled = useRef(false);\n\n  useEffect(() => {\n    if (isShared && !scrolled.current) {\n      setTimeout(() => {\n        ref.current?.scrollIntoView({behavior: 'smooth'});\n        scrolled.current = true;\n      }, 50);\n    }\n  }, [isShared]);\n\n  const defaultAvatar = review.user ? (\n    <UserAvatar user={review.user} size=\"xl\" circle />\n  ) : (\n    <Avatar size=\"xl\" label=\"User\" />\n  );\n\n  return (\n    <div ref={ref}>\n      {isShared && (\n        <div className=\"mb-8 mt-16 text-sm\">\n          <Trans message=\"Shared review\" />\n        </div>\n      )}\n      <div\n        className={clsx(\n          'group flex min-h-70 items-start gap-24 rounded py-18',\n          isShared && 'mb-34 border bg-alt pl-12',\n        )}\n      >\n        {!isMobile && (avatar || defaultAvatar)}\n        <div className=\"flex-auto text-sm\">\n          <div className=\"mb-4 flex items-center gap-8\">\n            {review.user && <UserDisplayName user={review.user} />}\n            <time className=\"text-xs text-muted\">\n              <FormattedRelativeTime date={review.created_at} />\n            </time>\n          </div>\n          <TitleRating className=\"mb-8 mt-10\" score={review.score} />\n          {review.title && (\n            <div className=\"mb-8 text-base font-medium\">{review.title}</div>\n          )}\n          <div className=\"whitespace-break-spaces text-sm\">{review.body}</div>\n          <div className=\"mt-16 items-center gap-8 md:flex\">\n            <Feedback review={review} />\n            {!hideShareButton && <ShareButton review={review} />}\n            <ReviewOptionsTrigger review={review} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface ShareButtonProps {\n  review: Review;\n}\nfunction ShareButton({review}: ShareButtonProps) {\n  const {base_url} = useSettings();\n  const location = useLocation();\n  const url = `${base_url}${location.pathname}?reviewId=${review.id}`;\n  const [, copyLink] = useClipboard(url);\n  return (\n    <Tooltip label={<Trans message=\"Share\" />}>\n      <IconButton\n        className=\"text-muted\"\n        onClick={() => {\n          copyLink();\n          toast(message('Review link copied to clipboard'));\n        }}\n      >\n        <ShareIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n\ninterface FeedbackProps {\n  review: Review;\n}\nfunction Feedback({review}: FeedbackProps) {\n  const {user} = useAuth();\n  const authHandler = useAuthClickCapture();\n  const submitFeedback = useSubmitReviewFeedback(review);\n  const isDisabled =\n    submitFeedback.isPending || (user != null && user.id === review.user_id);\n\n  const [helpfulCount, setHelpfulCount] = useState(review.helpful_count || 1);\n  const [total, setTotal] = useState(\n    review.helpful_count + review.not_helpful_count || 1,\n  );\n\n  let initialFeedback: string | undefined;\n  if (review.current_user_feedback != null) {\n    initialFeedback = review.current_user_feedback ? 'helpful' : 'not_helpful';\n  }\n  const [currentFeedback, setCurrentFeedback] = useState<string | undefined>(\n    initialFeedback,\n  );\n\n  return (\n    <div className=\"mr-auto flex flex-wrap items-center gap-6 max-md:mb-12\">\n      <div className=\"text-xs text-muted\">\n        <Trans\n          message=\":helpfulCount out of :total people found this helpful. Was this review helpful?\"\n          values={{helpfulCount, total}}\n        />\n      </div>\n      <div className=\"flex items-center gap-6 pb-2\">\n        <Button\n          variant=\"link\"\n          className={clsx(\n            'uppercase',\n            currentFeedback === 'helpful' && 'pointer-events-none',\n          )}\n          color={currentFeedback === 'helpful' ? 'primary' : undefined}\n          disabled={isDisabled}\n          onClickCapture={authHandler}\n          onClick={() =>\n            submitFeedback.mutate(\n              {isHelpful: true},\n              {\n                onSuccess: () => {\n                  setHelpfulCount(count => count + 1);\n                  setCurrentFeedback('helpful');\n                  if (!currentFeedback) {\n                    setTotal(count => count + 1);\n                  }\n                },\n              },\n            )\n          }\n        >\n          <Trans message=\"Yes\" />\n        </Button>\n        <div className=\"h-14 w-1 bg-divider\"></div>\n        <Button\n          variant=\"link\"\n          className={clsx(\n            'uppercase',\n            currentFeedback === 'not_helpful' && 'pointer-events-none',\n          )}\n          color={currentFeedback === 'not_helpful' ? 'primary' : undefined}\n          disabled={isDisabled}\n          onClickCapture={authHandler}\n          onClick={() =>\n            submitFeedback.mutate(\n              {isHelpful: false},\n              {\n                onSuccess: () => {\n                  setHelpfulCount(count => count - 1);\n                  setCurrentFeedback('not_helpful');\n                  if (!currentFeedback) {\n                    setTotal(count => count + 1);\n                  }\n                },\n              },\n            )\n          }\n        >\n          <Trans message=\"No\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ninterface ReviewOptionsTriggerProps {\n  review: Review;\n}\nexport function ReviewOptionsTrigger({review}: ReviewOptionsTriggerProps) {\n  const {user, hasPermission} = useAuth();\n  const report = useSubmitReport(review);\n  const deleteReport = useDeleteReport(review);\n  const [isReported, setIsReported] = useState(review.current_user_reported);\n  const handleReport = () => {\n    if (isReported) {\n      deleteReport.mutate(undefined, {\n        onSuccess: () => setIsReported(false),\n      });\n    } else {\n      report.mutate({}, {onSuccess: () => setIsReported(true)});\n    }\n  };\n\n  const deleteReview = useDeleteReviews();\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const showDeleteButton =\n    (user && review.user_id === user.id) || hasPermission('reviews.delete');\n  const handleDelete = (isConfirmed: boolean) => {\n    setIsDeleteDialogOpen(false);\n    if (isConfirmed) {\n      deleteReview.mutate({reviewIds: [review.id]});\n    }\n  };\n\n  return (\n    <Fragment>\n      <MenuTrigger>\n        <IconButton className=\"text-muted\" aria-label=\"More options\">\n          <MoreVertIcon />\n        </IconButton>\n        <Menu>\n          <MenuItem value=\"report\" onSelected={() => handleReport()}>\n            {isReported ? (\n              <Trans message=\"Remove report\" />\n            ) : (\n              <Trans message=\"Report review\" />\n            )}\n          </MenuItem>\n          {showDeleteButton && (\n            <MenuItem\n              value=\"delete\"\n              onSelected={() => setIsDeleteDialogOpen(true)}\n            >\n              <Trans message=\"Delete\" />\n            </MenuItem>\n          )}\n        </Menu>\n      </MenuTrigger>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={isDeleteDialogOpen}\n        onClose={isConfirmed => handleDelete(isConfirmed)}\n      >\n        <ConfirmationDialog\n          isDanger\n          title={<Trans message=\"Delete review?\" />}\n          body={\n            <Trans message=\"Are you sure you want to delete this review?\" />\n          }\n          confirm={<Trans message=\"Delete\" />}\n        />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n\ninterface UserDisplayNameProps {\n  user: User;\n}\nfunction UserDisplayName({user}: UserDisplayNameProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const {auth} = useContext(SiteConfigContext);\n  const sharedClassName = 'flex items-center gap-8 text-base font-medium';\n  if (auth.getUserProfileLink) {\n    return (\n      <Fragment>\n        {isMobile && <UserAvatar user={user} size=\"sm\" circle />}\n        <Link\n          to={auth.getUserProfileLink(user)}\n          className={clsx('hover:underline', sharedClassName)}\n        >\n          {user.name}\n        </Link>\n      </Fragment>\n    );\n  }\n  return (\n    <div className={sharedClassName}>\n      {isMobile && <UserAvatar user={user} size=\"sm\" circle />}\n      {user.name}\n    </div>\n  );\n}\n","import {useReviews} from '@app/reviews/requests/use-reviews';\nimport {Reviewable} from '@app/reviews/reviewable';\nimport {\n  NewReviewForm,\n  NewReviewFormActions,\n} from '@app/reviews/review-list/new-review-form';\nimport React, {ReactNode, useRef} from 'react';\nimport {ReviewListItem} from '@app/reviews/review-list/review-list-item';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {Review} from '@app/titles/models/review';\nimport {AccountRequiredCard} from '@common/comments/comment-list/account-required-card';\nimport {useAuth} from '@common/auth/use-auth';\nimport {message} from '@ui/i18n/message';\n\nconst accountRequiredMessage = message(\n  'Please <l>login</l> or <r>create account</r> to add a review',\n);\n\ninterface Props {\n  reviewable: Reviewable;\n  disabled?: boolean;\n  noResultsMessage?: ReactNode;\n  showAccountRequiredMessage?: boolean;\n}\nexport function ReviewList({\n  reviewable,\n  disabled,\n  noResultsMessage,\n  showAccountRequiredMessage,\n}: Props) {\n  const query = useReviews(reviewable);\n  const actionsRef = useRef<NewReviewFormActions>(null);\n  const {user} = useAuth();\n\n  const currentUserReview = query.data?.pages[0].current_user_review;\n  const sharedReview = query.data?.pages[0].shared_review;\n\n  return (\n    <div>\n      <NewReviewForm\n        className=\"mb-14 md:-mx-14\"\n        reviewable={reviewable}\n        currentReview={currentUserReview}\n        ref={actionsRef}\n        disabled={disabled}\n      />\n      <div>\n        {showAccountRequiredMessage && (\n          <AccountRequiredCard message={accountRequiredMessage} />\n        )}\n        <AnimatePresence initial={false} mode=\"wait\">\n          {query.isLoading ? (\n            <ReviewListSkeletons count={4} />\n          ) : (\n            <ReviewListItems\n              reviews={query.items}\n              sharedReview={sharedReview}\n              noResultsMessage={noResultsMessage}\n            />\n          )}\n        </AnimatePresence>\n        <div className=\"ml-84\">\n          <InfiniteScrollSentinel\n            query={query}\n            variant=\"loadMore\"\n            loaderMarginTop=\"mt-14\"\n            loadMoreExtraContent={\n              <Button\n                variant=\"flat\"\n                color=\"primary\"\n                disabled={!user}\n                onClick={() => {\n                  actionsRef.current?.openReviewPanel();\n                }}\n              >\n                <Trans message=\"Add a review\" />\n              </Button>\n            }\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface ReviewListItemsProps {\n  reviews: Review[];\n  sharedReview?: Review;\n  noResultsMessage?: ReactNode;\n}\nfunction ReviewListItems({\n  reviews,\n  sharedReview,\n  noResultsMessage,\n}: ReviewListItemsProps) {\n  const {user} = useAuth();\n\n  let content: ReactNode;\n\n  if (!reviews.length) {\n    content = user\n      ? noResultsMessage || (\n          <IllustratedMessage\n            className=\"mt-24\"\n            size=\"sm\"\n            title={<Trans message=\"Seems a little quiet over here\" />}\n            description={<Trans message=\"Be the first to leave a review\" />}\n          />\n        )\n      : null;\n  } else {\n    content = reviews.map(review => (\n      <ReviewListItem key={review.id} review={review} />\n    ));\n  }\n\n  return (\n    <m.div key=\"reviews\" {...opacityAnimation}>\n      {sharedReview && <ReviewListItem review={sharedReview} isShared />}\n      {content}\n    </m.div>\n  );\n}\n\ninterface ReviewListSkeletonsProps {\n  count: number;\n}\nexport function ReviewListSkeletons({count}: ReviewListSkeletonsProps) {\n  return (\n    <m.div key=\"loading-skeleton\" {...opacityAnimation}>\n      {[...new Array(count).keys()].map(index => (\n        <div\n          key={index}\n          className=\"group flex min-h-[212px] items-start gap-24 py-18\"\n        >\n          <Skeleton variant=\"avatar\" radius=\"rounded-full\" size=\"w-60 h-60\" />\n          <div className=\"flex-auto text-sm\">\n            <Skeleton\n              className=\"mb-4 max-w-200 text-base font-medium\"\n              variant=\"text\"\n            />\n            <Skeleton variant=\"text\" className=\"mb-8 mt-10 max-w-60 text-lg\" />\n            <Skeleton variant=\"text\" className=\"mb-8 max-w-240 text-base\" />\n            <Skeleton className=\"text-sm\" variant=\"text\" />\n            <Skeleton className=\"text-sm\" variant=\"text\" />\n            <Skeleton className=\"mt-16 text-xs\" variant=\"text\" />\n          </div>\n        </div>\n      ))}\n    </m.div>\n  );\n}\n","import {Title} from '@app/titles/models/title';\nimport {useReviews} from '@app/reviews/requests/use-reviews';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {TitleRating} from '@app/reviews/title-rating';\nimport {Trans} from '@ui/i18n/trans';\nimport {ReviewList} from '@app/reviews/review-list/review-list';\nimport {useLocalStorage} from '@ui/utils/hooks/local-storage';\nimport {ReviewListSortButton} from '@app/reviews/review-list/review-list-sort-button';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport React from 'react';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\n\ninterface Props {\n  title: Title;\n}\nexport function TitlePageReviewList({title}: Props) {\n  const [sort, setSort] = useLocalStorage(\n    `reviewSort.${title.model_type}`,\n    'created_at:desc',\n  );\n  const query = useReviews(title);\n  return (\n    <div className=\"mt-48\">\n      <SiteSectionHeading\n        titleAppend={\n          query.totalItems ? <span>({query.totalItems})</span> : null\n        }\n        actions={\n          <div className=\"flex items-center gap-24\">\n            <TitleRating score={title.rating} className=\"max-md:hidden\" />\n            <ReviewListSortButton\n              value={sort}\n              onValueChange={newValue => setSort(newValue)}\n            />\n          </div>\n        }\n      >\n        <Trans message=\"Reviews\" />\n      </SiteSectionHeading>\n      <ReviewList\n        reviewable={title}\n        showAccountRequiredMessage={title.status !== 'upcoming'}\n        noResultsMessage={\n          title.status === 'upcoming' ? (\n            <IllustratedMessage\n              className=\"mt-24\"\n              size=\"sm\"\n              title={<Trans message=\"This title is not released yet\" />}\n              description={\n                <Trans\n                  message=\"Come back after :date to see the reviews\"\n                  values={{\n                    date: (\n                      <FormattedDate date={title.release_date} timezone=\"utc\" />\n                    ),\n                  }}\n                />\n              }\n            />\n          ) : undefined\n        }\n      />\n    </div>\n  );\n}\n","import {Title} from '@app/titles/models/title';\nimport {Episode} from '@app/titles/models/episode';\nimport {getEpisodeLink} from '@app/episodes/episode-link';\nimport {getTitleLink} from '@app/titles/title-link';\nimport {VideoGrid} from '@app/titles/video-grid';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Trans} from '@ui/i18n/trans';\n\ninterface Props {\n  title: Title;\n  episode?: Episode;\n}\nexport function TitlePageVideoGrid({title, episode}: Props) {\n  const videos = episode ? episode.videos : title.videos;\n  const link = episode\n    ? `${getEpisodeLink(\n        title,\n        episode.season_number,\n        episode.episode_number,\n      )}/videos`\n    : `${getTitleLink(title)}/videos`;\n  return (\n    <VideoGrid\n      videos={videos}\n      title={title}\n      episode={episode}\n      heading={\n        <SiteSectionHeading link={link}>\n          <Trans message=\"Videos\" />\n        </SiteSectionHeading>\n      }\n    />\n  );\n}\n","import React, {Fragment, ReactNode, useState} from 'react';\nimport {useSeasonEpisodes} from '@app/titles/requests/use-season-episodes';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Trans} from '@ui/i18n/trans';\nimport {ContentGridLayout} from '@app/channels/content-grid/content-grid-layout';\nimport {EpisodePoster} from '@app/episodes/episode-poster/episode-poster';\nimport {Link, useParams} from 'react-router';\nimport {getWatchLink} from '@app/videos/watch-page/get-watch-link';\nimport {Episode} from '@app/titles/models/episode';\nimport {Title} from '@app/titles/models/title';\nimport {CompactSeasonEpisode} from '@app/episodes/compact-season-episode';\nimport {Menu, MenuItem, MenuTrigger} from '@ui/menu/menu-trigger';\nimport {Button} from '@ui/buttons/button';\nimport {message} from '@ui/i18n/message';\nimport {SortIcon} from '@ui/icons/material/Sort';\nimport {ExpandMoreIcon} from '@ui/icons/material/ExpandMore';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {Skeleton} from '@ui/skeleton/skeleton';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@ui/animation/opacity-animation';\nimport {UseInfiniteDataResult} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {FormattedDuration} from '@ui/i18n/formatted-duration';\nimport {GetTitleResponse} from '@app/titles/requests/use-title';\n\ninterface Props {\n  data: GetTitleResponse;\n  label?: ReactNode;\n  showSeasonSelector?: boolean;\n}\nexport function TitlePageEpisodeGrid({data, label, showSeasonSelector}: Props) {\n  const {season} = useParams();\n  const [selectedSeason, setSelectedSeason] = useState<number>(\n    season ? parseInt(season) : 1,\n  );\n  const query = useSeasonEpisodes(\n    data.episodes,\n    {\n      perPage: 21,\n      excludeDescription: 'true',\n    },\n    {\n      season: selectedSeason,\n      willSortOrFilter: true,\n      defaultOrderBy: 'episode_number',\n      defaultOrderDir: 'asc',\n      titleId: data.title.id,\n    },\n  );\n  const {isInitialLoading, items, sortDescriptor, setSortDescriptor} = query;\n\n  return (\n    <div className=\"mt-48\">\n      <SiteSectionHeading\n        wrap\n        actions={\n          <Fragment>\n            {showSeasonSelector && (\n              <SeasonSelector\n                selectedSeason={selectedSeason}\n                onSeasonChange={setSelectedSeason}\n                seasonCount={data.title.seasons_count}\n              />\n            )}\n            <SortButton\n              value={`${sortDescriptor.orderBy}:${sortDescriptor?.orderDir}`}\n              onValueChange={value => {\n                const [orderBy, orderDir] = value.split(':');\n                setSortDescriptor({\n                  orderBy,\n                  orderDir: orderDir as 'asc' | 'desc',\n                });\n              }}\n            />\n          </Fragment>\n        }\n      >\n        {label || <Trans message=\"Episodes\" />}\n      </SiteSectionHeading>\n      <AnimatePresence initial={false} mode=\"wait\">\n        {isInitialLoading ? (\n          <SkeletonGrid />\n        ) : (\n          <EpisodeGrid episodes={items} title={data.title} query={query} />\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ninterface GridItemProps {\n  episode: Episode;\n  title: Title;\n}\nfunction GridItem({episode, title}: GridItemProps) {\n  const runtime = episode.runtime || title.runtime;\n  const name = (\n    <Fragment>\n      <CompactSeasonEpisode className=\"uppercase\" episode={episode} /> -{' '}\n      {episode.name}\n    </Fragment>\n  );\n  return (\n    <div>\n      <div className=\"relative\">\n        <EpisodePoster\n          episode={episode}\n          title={title}\n          srcSize=\"md\"\n          showPlayButton\n          rightAction={\n            runtime ? (\n              <span className=\"rounded bg-black/50 p-4 text-xs font-medium text-white\">\n                <FormattedDuration minutes={runtime} verbose />\n              </span>\n            ) : null\n          }\n        />\n      </div>\n      <div className=\"mt-10\">\n        {episode.release_date && (\n          <div className=\"mb-2 text-sm text-muted\">\n            <FormattedDate date={episode.release_date} timezone=\"utc\" />\n          </div>\n        )}\n        <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-base\">\n          {episode.primary_video ? (\n            <Link\n              className=\"rounded outline-none hover:underline focus-visible:ring focus-visible:ring-offset-2\"\n              to={getWatchLink(episode.primary_video)}\n            >\n              {name}\n            </Link>\n          ) : (\n            name\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface EpisodeGridProps {\n  episodes: Episode[];\n  title: Title;\n  query: UseInfiniteDataResult<Episode>;\n}\nfunction EpisodeGrid({title, episodes, query}: EpisodeGridProps) {\n  return (\n    <m.div key=\"episode-grid\" {...opacityAnimation}>\n      <ContentGridLayout variant=\"landscape\">\n        {episodes.map(episode => (\n          <GridItem key={episode.id} episode={episode} title={title} />\n        ))}\n      </ContentGridLayout>\n      <InfiniteScrollSentinel\n        query={query}\n        variant=\"loadMore\"\n        size=\"sm\"\n        loaderMarginTop=\"mt-16\"\n      />\n    </m.div>\n  );\n}\n\nfunction SkeletonGrid() {\n  return (\n    <m.div key=\"episode-grid\" {...opacityAnimation}>\n      <ContentGridLayout variant=\"landscape\">\n        {[...new Array(6).keys()].map(number => (\n          <div key={number}>\n            <Skeleton variant=\"rect\" size=\"aspect-video\" animation=\"pulsate\" />\n            <div className=\"mt-10 min-h-44\">\n              <Skeleton variant=\"text\" />\n              <Skeleton variant=\"text\" />\n            </div>\n          </div>\n        ))}\n      </ContentGridLayout>\n    </m.div>\n  );\n}\n\ninterface SeasonSelectorProps {\n  selectedSeason: number;\n  onSeasonChange: (newSeason: number) => void;\n  seasonCount: number;\n}\nfunction SeasonSelector({\n  selectedSeason,\n  onSeasonChange,\n  seasonCount,\n}: SeasonSelectorProps) {\n  return (\n    <MenuTrigger\n      selectedValue={selectedSeason}\n      onSelectionChange={newValue => onSeasonChange(newValue as number)}\n      selectionMode=\"single\"\n    >\n      <Button variant=\"outline\" startIcon={<ExpandMoreIcon />} className=\"mr-4\">\n        <Trans message=\"Season :number\" values={{number: selectedSeason}} />\n      </Button>\n      <Menu>\n        {[...new Array(seasonCount).keys()].map(number => {\n          const seasonNumber = number + 1;\n          return (\n            <MenuItem value={seasonNumber} key={seasonNumber}>\n              <Trans message=\"Season :number\" values={{number: seasonNumber}} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\nconst SortOptions = [\n  {\n    value: 'episode_number:desc',\n    label: message('Newest'),\n  },\n  {\n    value: 'episode_number:asc',\n    label: message('Oldest'),\n  },\n];\n\ninterface SortButtonProps {\n  value: string;\n  onValueChange: (newValue: string) => void;\n}\nfunction SortButton({value, onValueChange}: SortButtonProps) {\n  let selectedOption = SortOptions.find(option => option.value === value);\n  if (!selectedOption) {\n    selectedOption = SortOptions[0];\n  }\n  return (\n    <MenuTrigger\n      selectedValue={value}\n      onSelectionChange={newValue => onValueChange(newValue as string)}\n      selectionMode=\"single\"\n    >\n      <Button variant=\"outline\" startIcon={<SortIcon />}>\n        <Trans {...selectedOption.label} />\n      </Button>\n      <Menu>\n        {SortOptions.map(option => (\n          <MenuItem value={option.value} key={option.value}>\n            <Trans {...option.label} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import { Options, tokenize } from 'linkifyjs';\n\n/**\n\tConvert strings of text into linkable HTML text\n*/\nfunction escapeText(text) {\n  return text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\nfunction escapeAttr(href) {\n  return href.replace(/\"/g, '&quot;');\n}\nfunction attributesToString(attributes) {\n  const result = [];\n  for (const attr in attributes) {\n    let val = attributes[attr] + '';\n    result.push(`${attr}=\"${escapeAttr(val)}\"`);\n  }\n  return result.join(' ');\n}\nfunction defaultRender(_ref) {\n  let {\n    tagName,\n    attributes,\n    content\n  } = _ref;\n  return `<${tagName} ${attributesToString(attributes)}>${escapeText(content)}</${tagName}>`;\n}\n\n/**\n * Convert a plan text string to an HTML string with links. Expects that the\n * given strings does not contain any HTML entities. Use the linkify-html\n * interface if you need to parse HTML entities.\n *\n * @param {string} str string to linkify\n * @param {import('linkifyjs').Opts} [opts] overridable options\n * @returns {string}\n */\nfunction linkifyStr(str, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  opts = new Options(opts, defaultRender);\n  const tokens = tokenize(str);\n  const result = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.t === 'nl' && opts.get('nl2br')) {\n      result.push('<br>\\n');\n    } else if (!token.isLink || !opts.check(token)) {\n      result.push(escapeText(token.toString()));\n    } else {\n      result.push(opts.render(token));\n    }\n  }\n  return result.join('');\n}\nif (!String.prototype.linkify) {\n  Object.defineProperty(String.prototype, 'linkify', {\n    writable: false,\n    value: function linkify(options) {\n      return linkifyStr(this, options);\n    }\n  });\n}\n\nexport { linkifyStr as default };\n","import {useMemo} from 'react';\nimport linkifyStr from 'linkify-string';\n\nexport function useLinkifiedString(text: string | null | undefined) {\n  return useMemo(() => {\n    if (!text) {\n      return text;\n    }\n    return linkifyStr(text, {\n      nl2br: true,\n      attributes: {rel: 'nofollow'},\n    });\n  }, [text]);\n}\n","import {useLinkifiedString} from '@ui/utils/hooks/use-linkified-string';\nimport {Fragment, useRef, useState} from 'react';\nimport {Button} from '@ui/buttons/button';\nimport {Trans} from '@ui/i18n/trans';\nimport clsx from 'clsx';\nimport {useLayoutEffect} from '@react-aria/utils';\n\ninterface TruncatedDescriptionProps {\n  description?: string;\n  className?: string;\n}\n\nexport function TruncatedDescription({\n  description,\n  className,\n}: TruncatedDescriptionProps) {\n  const linkifiedDescription = useLinkifiedString(description);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  const [isOverflowing, setIsOverflowing] = useState(false);\n  const [isShowingAll, setIsShowingAll] = useState(false);\n\n  useLayoutEffect(() => {\n    const wrapperHeight =\n      wrapperRef.current?.getBoundingClientRect().height || 0;\n    const contentHeight = wrapperRef.current?.scrollHeight || 0;\n    if (contentHeight > wrapperHeight) {\n      setIsOverflowing(true);\n    }\n  }, []);\n\n  if (!linkifiedDescription) return null;\n\n  return (\n    <Fragment>\n      <div\n        ref={wrapperRef}\n        className={clsx(\n          'relative',\n          className,\n          !isShowingAll && 'max-h-160 overflow-hidden',\n          !isShowingAll &&\n            isOverflowing &&\n            'after:absolute after:bottom-0 after:left-0 after:h-20 after:w-full after:bg-gradient-to-b after:from-transparent after:to-background',\n        )}\n      >\n        <div\n          ref={contentRef}\n          dangerouslySetInnerHTML={{__html: linkifiedDescription}}\n        />\n      </div>\n      {isOverflowing && (\n        <Button\n          size=\"xs\"\n          className=\"mt-20\"\n          variant=\"outline\"\n          onClick={() => setIsShowingAll(!isShowingAll)}\n        >\n          {isShowingAll ? (\n            <Trans message=\"Show less\" />\n          ) : (\n            <Trans message=\"Show more\" />\n          )}\n        </Button>\n      )}\n    </Fragment>\n  );\n}\n","import {ChipList} from '@ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\nimport {Link} from 'react-router';\nimport {TitlePageImageGrid} from '@app/titles/pages/title-page/sections/title-page-image-grid';\nimport {TitlePageCast} from '@app/titles/pages/title-page/sections/title-page-cast';\nimport {RelatedTitlesPanel} from '@app/titles/related-titles-panel';\nimport {TitlePageSeasonGrid} from '@app/titles/pages/title-page/sections/title-page-season-grid';\nimport {CompactCredits} from '@app/titles/compact-credits';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Trans} from '@ui/i18n/trans';\nimport {getTitleLink} from '@app/titles/title-link';\nimport {getGenreLink} from '@app/titles/genre-link';\nimport {TitleNews} from '@app/titles/pages/title-page/sections/title-news/title-news';\nimport clsx from 'clsx';\nimport {TitlePageReviewList} from '@app/titles/pages/title-page/sections/title-page-review-list';\nimport {GetTitleResponse} from '@app/titles/requests/use-title';\nimport {TitlePageVideoGrid} from '@app/titles/pages/title-page/sections/title-page-video-grid';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {useAuth} from '@common/auth/use-auth';\nimport {TitlePageEpisodeGrid} from '@app/titles/pages/title-page/sections/title-page-episode-grid';\nimport {TitlePageSections} from '@app/titles/pages/title-page/sections/title-page-sections';\nimport {Title} from '@app/titles/models/title';\nimport {AdHost} from '@common/admin/ads/ad-host';\nimport {TruncatedDescription} from '@common/ui/other/truncated-description';\n\ninterface Props {\n  data: GetTitleResponse;\n  className?: string;\n}\nexport function TitlePageMainContent({data, className}: Props) {\n  const {title, credits} = data;\n  const {title_page} = useSettings();\n  return (\n    <main className={clsx(className, '@container')}>\n      {title.genres?.length ? (\n        <ChipList>\n          {title.genres.map(genre => (\n            <Chip\n              className=\"capitalize\"\n              elementType={Link}\n              to={getGenreLink(genre)}\n              key={genre.id}\n            >\n              <Trans message={genre.display_name || genre.name} />\n            </Chip>\n          ))}\n        </ChipList>\n      ) : null}\n      {title.tagline && (\n        <blockquote className=\"mt-16\">“{title.tagline}”</blockquote>\n      )}\n      <TruncatedDescription className=\"mt-16\" description={title.description} />\n      <CompactCredits credits={credits} />\n      <AdHost slot=\"title_top\" className=\"pt-48\" />\n      {title_page?.sections?.map(name => (\n        <TitlePageSection key={name} name={name} title={title} data={data} />\n      ))}\n    </main>\n  );\n}\n\ninterface TitlePageSectionProps {\n  title: Title;\n  data: GetTitleResponse;\n  name: (typeof TitlePageSections)[number];\n}\nfunction TitlePageSection({name, title, data}: TitlePageSectionProps) {\n  const {titles} = useSettings();\n  const {hasPermission} = useAuth();\n  switch (name) {\n    case 'episodes':\n      return title.is_series ? (\n        <TitlePageEpisodeGrid data={data} showSeasonSelector />\n      ) : null;\n    case 'seasons':\n      return title.is_series ? <TitlePageSeasonGrid data={data} /> : null;\n    case 'videos':\n      return <TitlePageVideoGrid title={title} />;\n    case 'images':\n      return (\n        <TitlePageImageGrid\n          images={title.images}\n          heading={\n            <SiteSectionHeading link={`${getTitleLink(title)}/images`}>\n              <Trans message=\"Images\" />\n            </SiteSectionHeading>\n          }\n        />\n      );\n    case 'reviews':\n      return titles.enable_reviews && hasPermission('reviews.view') ? (\n        <TitlePageReviewList title={title} />\n      ) : null;\n    case 'cast':\n      return <TitlePageCast credits={data.credits?.actors} />;\n    case 'news':\n      return <TitleNews title={title} />;\n    case 'related':\n      return <RelatedTitlesPanel title={title} />;\n  }\n}\n","import {ReactNode} from 'react';\n\ninterface Props {\n  name: ReactNode;\n  poster?: ReactNode;\n  description?: ReactNode;\n  right?: ReactNode;\n  children?: ReactNode;\n}\nexport function TitlePageHeaderLayout({\n  name,\n  description,\n  children,\n  right,\n  poster,\n}: Props) {\n  return (\n    <div className=\"mb-24 items-center justify-between gap-24 lg:flex\">\n      {poster}\n      <div className=\"flex-auto\">\n        {children}\n        <h1 className=\"mb-12 text-4xl md:mb-8 md:text-5xl\">{name}</h1>\n        {description && (\n          <div className=\"text-base font-normal\">{description}</div>\n        )}\n      </div>\n      {right}\n    </div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useAuth} from '@common/auth/use-auth';\nimport {Title} from '@app/titles/models/title';\nimport {Episode} from '@app/titles/models/episode';\n\ninterface Response extends BackendResponse {\n  watchlist: {\n    id: number;\n    items: {\n      title: Record<number, boolean>;\n      episode: Record<number, boolean>;\n    };\n  };\n}\n\nexport function useCurrentUserWatchlist() {\n  const {user} = useAuth();\n  return useQuery({\n    queryKey: ['channel', 'watchlist', 'compact'],\n    queryFn: () => fetchWatchlist(),\n    enabled: !!user,\n  });\n}\n\nexport function useIsItemWatchlisted(item: Title | Episode) {\n  const query = useCurrentUserWatchlist();\n  return {\n    isLoading: query.isLoading && query.fetchStatus !== 'idle',\n    isWatchlisted: !!query.data?.watchlist?.items[item.model_type]?.[item.id],\n  };\n}\n\nfunction fetchWatchlist() {\n  return apiClient\n    .get<Response>(`users/me/watchlist`)\n    .then(response => response.data);\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {Title} from '@app/titles/models/title';\nimport {useCurrentUserWatchlist} from '@app/user-lists/requests/use-current-user-watchlist';\n\ninterface Response extends BackendResponse {}\n\nexport function useAddToWatchlist() {\n  const {data} = useCurrentUserWatchlist();\n  return useMutation({\n    mutationFn: (payload: Title) =>\n      addToWatchlist(data!.watchlist!.id, payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: ['channel', 'watchlist'],\n      });\n      toast(message('Added to your watchlist'));\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction addToWatchlist(listId: number, payload: Title): Promise<Response> {\n  return apiClient\n    .post(`channel/${listId}/add`, {\n      itemId: payload.id,\n      itemType: payload.model_type,\n    })\n    .then(r => r.data);\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {Title} from '@app/titles/models/title';\nimport {useCurrentUserWatchlist} from '@app/user-lists/requests/use-current-user-watchlist';\n\ninterface Response extends BackendResponse {}\n\nexport function useRemoveFromWatchlist() {\n  const {data} = useCurrentUserWatchlist();\n  return useMutation({\n    mutationFn: (payload: Title) =>\n      removeFromWatchlist(data!.watchlist.id, payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: ['channel', 'watchlist'],\n      });\n      toast(message('Removed from your watchlist'));\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction removeFromWatchlist(\n  listId: number,\n  payload: Title,\n): Promise<Response> {\n  return apiClient\n    .post(`channel/${listId}/remove`, {\n      itemId: payload.id,\n      itemType: payload.model_type,\n    })\n    .then(r => r.data);\n}\n","import {Button, ButtonProps} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport {Trans} from '@ui/i18n/trans';\nimport {Title} from '@app/titles/models/title';\nimport {CheckIcon} from '@ui/icons/material/Check';\nimport {useAddToWatchlist} from '@app/user-lists/requests/use-add-to-watchlist';\nimport {useRemoveFromWatchlist} from '@app/user-lists/requests/use-remove-from-watchlist';\nimport {useIsItemWatchlisted} from '@app/user-lists/requests/use-current-user-watchlist';\nimport {useAuthClickCapture} from '@app/use-auth-click-capture';\nimport React from 'react';\nimport clsx from 'clsx';\n\ninterface Props {\n  variant?: ButtonProps['variant'];\n  color?: ButtonProps['color'];\n  item: Title;\n  size?: 'sm' | 'lg';\n  className?: string;\n}\nexport function WatchlistButton({\n  item,\n  variant = 'flat',\n  color = 'primary',\n  size = 'lg',\n  className,\n}: Props) {\n  const {isLoading, isWatchlisted} = useIsItemWatchlisted(item);\n  const addToWatchlist = useAddToWatchlist();\n  const removeFromWatchlist = useRemoveFromWatchlist();\n  const authHandler = useAuthClickCapture();\n\n  return (\n    <Button\n      variant={variant}\n      color={color}\n      size={size === 'sm' ? 'xs' : undefined}\n      className={clsx(size === 'lg' && 'mt-14 min-h-40 w-full', className)}\n      startIcon={isWatchlisted ? <CheckIcon /> : <AddIcon />}\n      disabled={\n        addToWatchlist.isPending || removeFromWatchlist.isPending || isLoading\n      }\n      onClickCapture={authHandler}\n      onClick={() => {\n        if (isWatchlisted) {\n          removeFromWatchlist.mutate(item);\n        } else {\n          addToWatchlist.mutate(item);\n        }\n      }}\n    >\n      {isWatchlisted ? (\n        <Trans message=\"In watchlist\" />\n      ) : size === 'sm' ? (\n        <Trans message=\"Watchlist\" />\n      ) : (\n        <Trans message=\"Add to watchlist\" />\n      )}\n    </Button>\n  );\n}\n","import {InteractableRating} from '@app/reviews/interactable-rating';\nimport {Title} from '@app/titles/models/title';\nimport {TitlePageHeaderLayout} from '@app/titles/pages/title-page/title-page-header-layout';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {FormattedDuration} from '@ui/i18n/formatted-duration';\nimport {BulletSeparatedItems} from '@app/titles/bullet-separated-items';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\nimport {TitleLink} from '@app/titles/title-link';\nimport React from 'react';\nimport {WatchlistButton} from '@app/user-lists/watchlist-button';\n\ninterface Props {\n  title: Title;\n  showPoster?: boolean;\n}\nexport function TitlePageHeader({title, showPoster = false}: Props) {\n  return (\n    <TitlePageHeaderLayout\n      name={<TitleLink title={title} />}\n      poster={\n        showPoster ? (\n          <TitlePoster title={title} size=\"w-80\" srcSize=\"sm\" />\n        ) : null\n      }\n      description={\n        <div>\n          <BulletSeparatedItems>\n            <FormattedDate date={title.release_date} timezone=\"utc\" />\n            {title.certification && (\n              <div className=\"uppercase\">{title.certification}</div>\n            )}\n            {title.runtime && (\n              <FormattedDuration minutes={title.runtime} verbose />\n            )}\n          </BulletSeparatedItems>\n        </div>\n      }\n      right={\n        <div className=\"flex items-center justify-between gap-10 max-md:mt-10 max-md:flex-wrap\">\n          <InteractableRating title={title} />\n          <WatchlistButton item={title} size=\"sm\" className=\"md:hidden\" />\n        </div>\n      }\n    />\n  );\n}\n","import {Title} from '@app/titles/models/title';\nimport {Episode} from '@app/titles/models/episode';\nimport {TitleBackdrop} from '@app/titles/title-poster/title-backdrop';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {MediaPlayIcon} from '@ui/icons/media/media-play';\nimport {Link} from 'react-router';\nimport {getWatchLink} from '@app/videos/watch-page/get-watch-link';\nimport {Season} from '@app/titles/models/season';\n\ninterface Props {\n  title: Title;\n  season?: Season;\n  episode?: Episode;\n}\nexport function TitlePageHeaderImage({title, season, episode}: Props) {\n  const {streaming} = useSettings();\n  const watchItem = episode || season || title;\n  const backdropUrl = episode?.poster || title.backdrop;\n\n  if (!backdropUrl) {\n    return null;\n  }\n\n  const backdrop = (\n    <TitleBackdrop\n      title={title}\n      episode={episode}\n      size=\"w-full h-full\"\n      className=\"object-top\"\n      lazy={false}\n    />\n  );\n  return (\n    <header className=\"relative isolate max-h-320 overflow-hidden bg-black md:max-h-400 lg:max-h-450\">\n      <div className=\"container relative left-0 right-0 top-0 z-20 mx-auto h-full w-full px-24\">\n        {backdrop}\n      </div>\n      <div className=\"h-[calc(100% + 20px)] absolute left-1/2 top-1/2 z-10 w-[calc(100%+100px)] -translate-x-1/2 -translate-y-1/2 bg-black opacity-50 blur-md\">\n        {backdrop}\n      </div>\n      <div className=\"pointer-events-none absolute left-0 top-0 z-30 h-full w-full bg-gradient-to-b from-black/20 md:from-black/40\" />\n      {streaming?.show_header_play && watchItem?.primary_video ? (\n        <PlayButton item={watchItem} />\n      ) : null}\n    </header>\n  );\n}\n\ninterface PlayButtonProps {\n  item: Season | Episode | Title;\n}\nfunction PlayButton({item}: PlayButtonProps) {\n  const link = getWatchLink(item.primary_video!);\n  return (\n    <IconButton\n      radius=\"rounded-full\"\n      color=\"white\"\n      variant=\"raised\"\n      size=\"lg\"\n      className=\"absolute inset-0 z-40 m-auto\"\n      elementType={Link}\n      to={link}\n    >\n      <MediaPlayIcon />\n    </IconButton>\n  );\n}\n","import {Fragment, ReactElement, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface Props {\n  poster: ReactElement;\n  children: ReactNode;\n  className?: string;\n}\nexport function TitlePageAsideLayout({poster, children, className}: Props) {\n  return (\n    <div className={clsx('top-40 flex-shrink-0 md:sticky md:w-1/4', className)}>\n      {poster}\n      <div className=\"flex-auto max-md:ml-16 max-md:text-sm\">{children}</div>\n    </div>\n  );\n}\n\ninterface DetailItemProps {\n  label: ReactNode;\n  children: ReactNode;\n}\nexport function DetailItem({label, children}: DetailItemProps) {\n  return (\n    <Fragment>\n      <dt className=\"font-semibold\">{label}</dt>\n      <dl className=\"mb-12 md:mb-24\">{children}</dl>\n    </Fragment>\n  );\n}\n","import React, {useMemo} from 'react';\nimport {\n  BaseMediaLink,\n  BaseMediaLinkProps,\n  getBaseMediaLink,\n} from '@app/base-media-link';\nimport {Keyword} from '@app/titles/models/keyword';\nimport {Trans} from '@ui/i18n/trans';\n\ninterface Props extends Omit<BaseMediaLinkProps, 'link'> {\n  keyword: Keyword;\n}\nexport function KeywordLink({keyword, children, ...otherProps}: Props) {\n  const link = useMemo(() => getKeywordLink(keyword), [keyword]);\n  return (\n    <BaseMediaLink {...otherProps} link={link}>\n      {children ?? <Trans message={keyword.display_name || keyword.name} />}\n    </BaseMediaLink>\n  );\n}\n\nexport function getKeywordLink(\n  keyword: Keyword,\n  {absolute}: {absolute?: boolean} = {},\n): string {\n  return getBaseMediaLink(`/keyword/${keyword.name}`, {absolute});\n}\n","import React, {useMemo} from 'react';\nimport {\n  BaseMediaLink,\n  BaseMediaLinkProps,\n  getBaseMediaLink,\n} from '@app/base-media-link';\nimport {ProductionCountry} from '@app/titles/models/production-country';\n\ninterface Props extends Omit<BaseMediaLinkProps, 'link'> {\n  country: ProductionCountry;\n}\nexport function ProductionCountryLink({\n  country,\n  children,\n  ...otherProps\n}: Props) {\n  const link = useMemo(() => getKeywordLink(country), [country]);\n  return (\n    <BaseMediaLink {...otherProps} link={link}>\n      {children ?? (country.display_name || country.name)}\n    </BaseMediaLink>\n  );\n}\n\nexport function getKeywordLink(\n  country: ProductionCountry,\n  {absolute}: {absolute?: boolean} = {}\n): string {\n  return getBaseMediaLink(`/production-countries/${country.name}`, {absolute});\n}\n","import {MediaPlayIcon} from '@ui/icons/media/media-play';\nimport {Trans} from '@ui/i18n/trans';\nimport {Button, ButtonProps} from '@ui/buttons/button';\nimport {Link} from 'react-router';\nimport {getWatchLink} from '@app/videos/watch-page/get-watch-link';\nimport {Video} from '@app/titles/models/video';\nimport {CompactSeasonEpisode} from '@app/episodes/compact-season-episode';\n\ninterface Props {\n  variant?: ButtonProps['variant'];\n  color?: ButtonProps['color'];\n  size?: string;\n  video: Video;\n  defaultLabel?: boolean;\n}\nexport function WatchNowButton({\n  video,\n  variant = 'outline',\n  color = 'primary',\n  size = 'w-full min-h-40 mt-14',\n  defaultLabel,\n}: Props) {\n  const label =\n    video.episode_num && !defaultLabel ? (\n      <span className=\"inline-flex gap-4\">\n        <Trans message=\"Start watching\" />\n        <CompactSeasonEpisode\n          seasonNum={video.season_num}\n          episodeNum={video.episode_num}\n        />\n      </span>\n    ) : (\n      <Trans message=\"Watch now\" />\n    );\n\n  return (\n    <Button\n      to={getWatchLink(video)}\n      elementType={Link}\n      startIcon={<MediaPlayIcon />}\n      color={color}\n      variant={variant}\n      className={size}\n    >\n      {label}\n    </Button>\n  );\n}\n","import {Title} from '@app/titles/models/title';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedCurrency} from '@ui/i18n/formatted-currency';\nimport {WatchlistButton} from '@app/user-lists/watchlist-button';\nimport {\n  DetailItem,\n  TitlePageAsideLayout,\n} from '@app/titles/pages/title-page/title-page-aside-layout';\nimport {KeywordLink} from '@app/titles/keyword-link';\nimport {ProductionCountryLink} from '@app/titles/production-country-link';\nimport {WatchNowButton} from '@app/titles/pages/title-page/watch-now-button';\nimport {useIsStreamingMode} from '@app/videos/use-is-streaming-mode';\nimport {getTitleLink} from '@app/titles/title-link';\nimport {ShareMenuTrigger} from '@app/sharing/share-menu-trigger';\nimport {Button} from '@ui/buttons/button';\nimport React from 'react';\nimport {ShareIcon} from '@ui/icons/material/Share';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {Link} from 'react-router';\nimport {useAuth} from '@common/auth/use-auth';\nimport {GetTitleResponse} from '@app/titles/requests/use-title';\n\ninterface Props {\n  data: GetTitleResponse;\n  className?: string;\n}\nexport function TitlePageAside({data: {title, language}, className}: Props) {\n  const isStreamingMode = useIsStreamingMode();\n  const {hasPermission} = useAuth();\n  return (\n    <TitlePageAsideLayout\n      className={className}\n      poster={\n        <div className=\"relative\">\n          <TitlePoster title={title} size=\"w-full\" srcSize=\"lg\" />\n          {hasPermission('titles.update') && (\n            <IconButton\n              elementType={Link}\n              to={`/admin/titles/${title.id}/edit`}\n              className=\"absolute bottom-6 right-4\"\n              color=\"white\"\n            >\n              <EditIcon />\n            </IconButton>\n          )}\n        </div>\n      }\n    >\n      {isStreamingMode && title.primary_video && (\n        <WatchNowButton video={title.primary_video} variant=\"flat\" />\n      )}\n      <WatchlistButton\n        item={title}\n        variant={isStreamingMode ? 'outline' : 'flat'}\n      />\n      <ShareButton title={title} />\n      <dl className=\"mt-14\">\n        {language && (\n          <DetailItem label={<Trans message=\"Original language\" />}>\n            <Trans message={language} />\n          </DetailItem>\n        )}\n        {title.original_title !== title.name && (\n          <DetailItem label={<Trans message=\"Original title\" />}>\n            {title.original_title}\n          </DetailItem>\n        )}\n        {title.budget ? (\n          <DetailItem label={<Trans message=\"Budget\" />}>\n            <FormattedCurrency value={title.budget} currency=\"usd\" />\n          </DetailItem>\n        ) : null}\n        {title.revenue ? (\n          <DetailItem label={<Trans message=\"Revenue\" />}>\n            <FormattedCurrency value={title.revenue} currency=\"usd\" />\n          </DetailItem>\n        ) : null}\n        {title.production_countries?.length ? (\n          <DetailItem label={<Trans message=\"Production countries\" />}>\n            <ul className=\"mt-12 flex flex-wrap gap-8\">\n              {title.production_countries.map(country => (\n                <li\n                  key={country.id}\n                  className=\"w-max rounded-full border px-10 py-4 text-xs\"\n                >\n                  <ProductionCountryLink country={country} />\n                </li>\n              ))}\n            </ul>\n          </DetailItem>\n        ) : null}\n        {title.keywords?.length ? (\n          <DetailItem label={<Trans message=\"Keywords\" />}>\n            <ul className=\"mt-12 flex flex-wrap gap-8\">\n              {title.keywords.map(keyword => (\n                <li\n                  key={keyword.id}\n                  className=\"w-max rounded-full border px-10 py-4 text-xs\"\n                >\n                  <KeywordLink keyword={keyword} />\n                </li>\n              ))}\n            </ul>\n          </DetailItem>\n        ) : null}\n      </dl>\n    </TitlePageAsideLayout>\n  );\n}\n\ninterface ShareButtonProps {\n  title: Title;\n}\nfunction ShareButton({title}: ShareButtonProps) {\n  const link = getTitleLink(title, {absolute: true});\n  return (\n    <ShareMenuTrigger link={link}>\n      <Button\n        variant=\"outline\"\n        color=\"primary\"\n        startIcon={<ShareIcon />}\n        className=\"mt-14 min-h-40 w-full\"\n      >\n        <Trans message=\"Share\" />\n      </Button>\n    </ShareMenuTrigger>\n  );\n}\n","import {GetTitleResponse, useTitle} from '@app/titles/requests/use-title';\nimport {PageStatus} from '@common/http/page-status';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport React, {Fragment} from 'react';\nimport {TitlePageMainContent} from '@app/titles/pages/title-page/title-page-main-content';\nimport {TitlePageHeader} from '@app/titles/pages/title-page/title-page-header';\nimport {TitlePageHeaderImage} from '@app/titles/pages/title-page/title-page-header-image';\nimport {TitlePageAside} from '@app/titles/pages/title-page/title-page-aside';\nimport {SitePageLayout} from '@app/site-page-layout';\n\nexport function TitlePage() {\n  const query = useTitle('titlePage');\n\n  const content = query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent data={query.data} />\n    </Fragment>\n  ) : (\n    <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n  );\n\n  return <SitePageLayout>{content}</SitePageLayout>;\n}\n\ninterface PageContentProps {\n  data: GetTitleResponse;\n}\nfunction PageContent({data}: PageContentProps) {\n  return (\n    <Fragment>\n      <TitlePageHeaderImage title={data.title} />\n      <div className=\"container mx-auto mt-24 px-14 md:mt-40 md:px-24\">\n        <div className=\"items-start gap-54 md:flex\">\n          <TitlePageAside data={data} className=\"max-lg:hidden\" />\n          <div className=\"flex-auto\">\n            <TitlePageHeader title={data.title} />\n            <TitlePageMainContent data={data} />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {TitlePageHeaderImage} from '@app/titles/pages/title-page/title-page-header-image';\nimport {Title} from '@app/titles/models/title';\nimport {VideoGrid} from '@app/titles/video-grid';\nimport {TitlePageHeader} from '@app/titles/pages/title-page/title-page-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {useTitle} from '@app/titles/requests/use-title';\n\nexport function TitleVideosPage() {\n  const query = useTitle('titlePage');\n\n  const content = query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent title={query.data.title} />\n    </Fragment>\n  ) : (\n    <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n  );\n\n  return <SitePageLayout>{content}</SitePageLayout>;\n}\n\ninterface PageContentProps {\n  title: Title;\n}\nfunction PageContent({title}: PageContentProps) {\n  return (\n    <div>\n      <TitlePageHeaderImage title={title} />\n      <div className=\"container mx-auto mt-24 px-14 md:mt-40 md:px-24\">\n        <TitlePageHeader title={title} showPoster />\n        <VideoGrid\n          videos={title.videos}\n          title={title}\n          count={24}\n          heading={\n            <SiteSectionHeading>\n              <Trans message=\"Video gallery\" />\n            </SiteSectionHeading>\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {TitlePageHeaderImage} from '@app/titles/pages/title-page/title-page-header-image';\nimport {Title} from '@app/titles/models/title';\nimport {TitlePageHeader} from '@app/titles/pages/title-page/title-page-header';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {TitlePageImageGrid} from '@app/titles/pages/title-page/sections/title-page-image-grid';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Trans} from '@ui/i18n/trans';\nimport {useTitle} from '@app/titles/requests/use-title';\n\nexport function TitleImagesPage() {\n  const query = useTitle('titlePage');\n\n  const content = query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent title={query.data.title} />\n    </Fragment>\n  ) : (\n    <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n  );\n\n  return <SitePageLayout>{content}</SitePageLayout>;\n}\n\ninterface PageContentProps {\n  title: Title;\n}\nfunction PageContent({title}: PageContentProps) {\n  return (\n    <div>\n      <TitlePageHeaderImage title={title} />\n      <div className=\"container mx-auto mt-24 px-14 md:mt-40 md:px-24\">\n        <TitlePageHeader title={title} showPoster />\n        <TitlePageImageGrid\n          images={title.images}\n          srcSize=\"lg\"\n          count={50}\n          heading={\n            <SiteSectionHeading>\n              <Trans message=\"Image gallery\" />\n            </SiteSectionHeading>\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {TitlePageHeaderImage} from '@app/titles/pages/title-page/title-page-header-image';\nimport {TitlePageHeader} from '@app/titles/pages/title-page/title-page-header';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {GetTitleResponse, useTitle} from '@app/titles/requests/use-title';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Trans} from '@ui/i18n/trans';\nimport {TitleCreditsGrid} from '@app/titles/pages/title-page/title-credits-grid/title-credits-grid';\n\nexport function TitleFullCreditsPage() {\n  const query = useTitle('titleCreditsPage');\n\n  const content = query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent data={query.data} />\n    </Fragment>\n  ) : (\n    <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n  );\n\n  return <SitePageLayout>{content}</SitePageLayout>;\n}\n\ninterface PageContentProps {\n  data: GetTitleResponse;\n}\nfunction PageContent({\n  data: {title, credits: groupedCredits = {}},\n}: PageContentProps) {\n  return (\n    <div>\n      <TitlePageHeaderImage title={title} />\n      <div className=\"container mx-auto mt-24 px-14 md:mt-40 md:px-24\">\n        <TitlePageHeader title={title} showPoster />\n        <div className=\"mt-48 @container\">\n          <SiteSectionHeading headingType=\"h2\" className=\"mb-40\">\n            <Trans message=\"Full cast and crew\" />\n          </SiteSectionHeading>\n          {Object.entries(groupedCredits).map(([department, credits]) => (\n            <div key={department}>\n              <h3 className=\"mb-16 text-2xl font-bold capitalize\">\n                <Trans message={department} />\n              </h3>\n              <TitleCreditsGrid credits={credits} className=\"mb-68\" />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {GetSeasonResponse, useSeason} from '@app/seasons/requests/use-season';\nimport {TitlePageHeaderImage} from '@app/titles/pages/title-page/title-page-header-image';\nimport {Title} from '@app/titles/models/title';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\nimport {Trans} from '@ui/i18n/trans';\nimport {TitleLink} from '@app/titles/title-link';\nimport {SeasonLink} from '@app/seasons/season-link';\nimport {useParams} from 'react-router';\nimport clsx from 'clsx';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {EpisodeListItem} from '@app/seasons/episode-list-item';\nimport {useSeasonEpisodes} from '@app/titles/requests/use-season-episodes';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\n\nexport function SeasonPage() {\n  const query = useSeason('seasonPage');\n  const content = query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent data={query.data} />\n    </Fragment>\n  ) : (\n    <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n  );\n\n  return <SitePageLayout>{content}</SitePageLayout>;\n}\n\ninterface PageContentProps {\n  data: GetSeasonResponse;\n}\nfunction PageContent({data}: PageContentProps) {\n  const {title, season} = data;\n  return (\n    <div>\n      <TitlePageHeaderImage title={title} season={season} />\n      <div className=\"container mx-auto mt-24 px-14 md:mt-40 md:px-24\">\n        <div className=\"mb-24 flex items-center gap-12\">\n          <TitlePoster size=\"w-70\" srcSize=\"sm\" title={title} />\n          <div>\n            <TitleLink title={title} color=\"primary\" className=\"text-xl\" />\n            <div className=\"text-lg\">\n              <Trans message=\"Episode list\" />\n            </div>\n          </div>\n        </div>\n        <SeasonList title={title} />\n        <EpisodeList data={data} />\n        <SeasonList title={title} />\n      </div>\n    </div>\n  );\n}\n\ninterface SeasonListProps {\n  title: Title;\n}\nfunction SeasonList({title}: SeasonListProps) {\n  const {season} = useParams();\n  return (\n    <div>\n      <div className=\"mb-4 text-base font-semibold\">\n        <Trans message=\"Seasons\" />:\n      </div>\n      <div className=\"mb-34 flex flex-wrap items-center gap-10\">\n        {[...new Array(title.seasons_count).keys()].map(index => {\n          const number = index + 1;\n          const isActive = season === `${number}`;\n          return (\n            <SeasonLink\n              key={number}\n              title={title}\n              seasonNumber={number}\n              className={clsx(\n                'flex h-30 w-30 flex-shrink-0 items-center justify-center rounded border text-base',\n                isActive\n                  ? 'pointer-events-none bg-primary text-white'\n                  : 'text-primary',\n              )}\n            >\n              {number}\n            </SeasonLink>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\ninterface EpisodeListProps {\n  data: GetSeasonResponse;\n}\nfunction EpisodeList({data: {episodes, title}}: EpisodeListProps) {\n  const query = useSeasonEpisodes(episodes);\n  return (\n    <main>\n      {query.items.map(episode => (\n        <EpisodeListItem\n          key={episode.id}\n          episode={episode}\n          title={title}\n          allowRating\n          showPlayButton\n          className=\"mb-34\"\n        />\n      ))}\n      <InfiniteScrollSentinel query={query} />\n    </main>\n  );\n}\n","import {TitlePageHeaderLayout} from '@app/titles/pages/title-page/title-page-header-layout';\nimport {BulletSeparatedItems} from '@app/titles/bullet-separated-items';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {FormattedDuration} from '@ui/i18n/formatted-duration';\nimport {InteractableRating} from '@app/reviews/interactable-rating';\nimport {Breadcrumb} from '@ui/breadcrumbs/breadcrumb';\nimport {BreadcrumbItem} from '@ui/breadcrumbs/breadcrumb-item';\nimport {getTitleLink} from '@app/titles/title-link';\nimport {getSeasonLink} from '@app/seasons/season-link';\nimport React from 'react';\nimport {Title} from '@app/titles/models/title';\nimport {Episode} from '@app/titles/models/episode';\nimport {useNavigate} from '@common/ui/navigation/use-navigate';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\n\ninterface Props {\n  title: Title;\n  episode: Episode;\n  showPoster?: boolean;\n}\nexport function EpisodePageHeader({title, episode, showPoster}: Props) {\n  const navigate = useNavigate();\n  const runtime = episode.runtime || title.runtime;\n  return (\n    <TitlePageHeaderLayout\n      poster={\n        showPoster ? (\n          <TitlePoster title={title} size=\"w-80\" srcSize=\"sm\" />\n        ) : undefined\n      }\n      name={episode.name}\n      description={\n        <BulletSeparatedItems className=\"my-10 md:my-0\">\n          <Trans\n            message=\"Aired :date\"\n            values={{\n              date: (\n                <FormattedDate date={episode.release_date} timezone=\"utc\" />\n              ),\n            }}\n          />\n          {title.certification && (\n            <span className=\"uppercase\">{title.certification}</span>\n          )}\n          {runtime ? <FormattedDuration minutes={runtime} verbose /> : null}\n        </BulletSeparatedItems>\n      }\n      right={<InteractableRating title={title} episode={episode} />}\n    >\n      <Breadcrumb isNavigation>\n        <BreadcrumbItem onSelected={() => navigate(getTitleLink(title))}>\n          {title.name}\n        </BreadcrumbItem>\n        <BreadcrumbItem\n          onSelected={() =>\n            navigate(getSeasonLink(title, episode.season_number))\n          }\n        >\n          <Trans\n            message=\"Season :number\"\n            values={{number: episode.season_number}}\n          />\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Trans\n            message=\"Episode :number\"\n            values={{number: episode.episode_number}}\n          />\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </TitlePageHeaderLayout>\n  );\n}\n","import {PageStatus} from '@common/http/page-status';\nimport {Title} from '@app/titles/models/title';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport React, {Fragment} from 'react';\nimport {TitlePageHeaderImage} from '@app/titles/pages/title-page/title-page-header-image';\nimport {\n  GetEpisodeResponse,\n  useEpisode,\n} from '@app/episodes/requests/use-episode';\nimport {ChipList} from '@ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\nimport {Link} from 'react-router';\nimport {TitlePageCast} from '@app/titles/pages/title-page/sections/title-page-cast';\nimport {RelatedTitlesPanel} from '@app/titles/related-titles-panel';\nimport {CompactCredits} from '@app/titles/compact-credits';\nimport {TitlePageAsideLayout} from '@app/titles/pages/title-page/title-page-aside-layout';\nimport {WatchlistButton} from '@app/user-lists/watchlist-button';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\nimport {getGenreLink} from '@app/titles/genre-link';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {EpisodePageHeader} from '@app/episodes/episode-page-header';\nimport {TitlePageVideoGrid} from '@app/titles/pages/title-page/sections/title-page-video-grid';\nimport {useIsStreamingMode} from '@app/videos/use-is-streaming-mode';\nimport {WatchNowButton} from '@app/titles/pages/title-page/watch-now-button';\nimport {Episode} from '@app/titles/models/episode';\nimport {TitlePageSections} from '@app/titles/pages/title-page/sections/title-page-sections';\nimport {TitlePageEpisodeGrid} from '@app/titles/pages/title-page/sections/title-page-episode-grid';\nimport {Trans} from '@ui/i18n/trans';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {TruncatedDescription} from '@common/ui/other/truncated-description';\n\nexport function EpisodePage() {\n  const query = useEpisode('episodePage');\n\n  const content = query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent data={query.data} />\n    </Fragment>\n  ) : (\n    <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n  );\n\n  return <SitePageLayout>{content}</SitePageLayout>;\n}\n\ninterface PageContentProps {\n  data: GetEpisodeResponse;\n}\nfunction PageContent({data}: PageContentProps) {\n  const {episode, title} = data;\n  return (\n    <div>\n      <TitlePageHeaderImage title={title} episode={episode} />\n      <div className=\"container mx-auto mt-12 px-14 md:mt-40 md:px-24\">\n        <div className=\"items-start gap-54 md:flex\">\n          <Aside title={title} episode={episode} />\n          <div className=\"flex-auto\">\n            <EpisodePageHeader title={title} episode={episode} />\n            <MainContent data={data} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface MainContentProps {\n  data: GetEpisodeResponse;\n}\nfunction MainContent({data}: MainContentProps) {\n  const {episode, title, credits} = data;\n  const {title_page} = useSettings();\n  return (\n    <main className=\"@container\">\n      {title.genres?.length ? (\n        <ChipList>\n          {title.genres.map(genre => (\n            <Chip\n              className=\"capitalize\"\n              elementType={Link}\n              to={getGenreLink(genre)}\n              key={genre.id}\n            >\n              {genre.display_name || genre.name}\n            </Chip>\n          ))}\n        </ChipList>\n      ) : null}\n      <TruncatedDescription\n        className=\"mt-16\"\n        description={episode.description}\n      />\n      <CompactCredits credits={credits} />\n      {title_page?.sections.map(name => (\n        <EpisodePageSection key={name} name={name} data={data} />\n      ))}\n    </main>\n  );\n}\n\ninterface EpisodePageSectionProps {\n  data: GetEpisodeResponse;\n  name: (typeof TitlePageSections)[number];\n}\nfunction EpisodePageSection({name, data}: EpisodePageSectionProps) {\n  switch (name) {\n    case 'videos':\n      return <TitlePageVideoGrid title={data.title} episode={data.episode} />;\n    case 'cast':\n      return <TitlePageCast credits={data.credits?.actors} />;\n    case 'related':\n      return <RelatedTitlesPanel title={data.title} />;\n    case 'episodes':\n      return (\n        <TitlePageEpisodeGrid\n          data={data}\n          label={<Trans message=\"Other episodes\" />}\n        />\n      );\n    default:\n      return null;\n  }\n}\n\ninterface AsideProps {\n  title: Title;\n  episode: Episode;\n}\nfunction Aside({title, episode}: AsideProps) {\n  const isStreamingMode = useIsStreamingMode();\n  return (\n    <TitlePageAsideLayout\n      className=\"max-md:hidden\"\n      poster={<TitlePoster title={title} size=\"w-full\" srcSize=\"lg\" />}\n    >\n      {isStreamingMode && episode.primary_video && (\n        <WatchNowButton\n          video={episode.primary_video}\n          variant=\"flat\"\n          defaultLabel\n        />\n      )}\n      <WatchlistButton\n        item={title}\n        variant={isStreamingMode ? 'outline' : 'flat'}\n      />\n    </TitlePageAsideLayout>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {TitlePageHeaderImage} from '@app/titles/pages/title-page/title-page-header-image';\nimport {Title} from '@app/titles/models/title';\nimport {VideoGrid} from '@app/titles/video-grid';\nimport {Trans} from '@ui/i18n/trans';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {useEpisode} from '@app/episodes/requests/use-episode';\nimport {Episode} from '@app/titles/models/episode';\nimport {EpisodePageHeader} from '@app/episodes/episode-page-header';\n\nexport function EpisodeVideosPage() {\n  const query = useEpisode('episodePage');\n\n  const content = query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent title={query.data.title} episode={query.data.episode} />\n    </Fragment>\n  ) : (\n    <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n  );\n\n  return <SitePageLayout>{content}</SitePageLayout>;\n}\n\ninterface PageContentProps {\n  episode: Episode;\n  title: Title;\n}\nfunction PageContent({episode, title}: PageContentProps) {\n  return (\n    <div>\n      <TitlePageHeaderImage title={title} episode={episode} />\n      <div className=\"container mx-auto mt-24 px-14 md:mt-40 md:px-24\">\n        <EpisodePageHeader title={title} episode={episode} showPoster />\n        <VideoGrid\n          videos={episode.videos}\n          title={title}\n          episode={episode}\n          count={24}\n          heading={\n            <SiteSectionHeading>\n              <Trans message=\"Video gallery\" />\n            </SiteSectionHeading>\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {TitlePageHeaderImage} from '@app/titles/pages/title-page/title-page-header-image';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Trans} from '@ui/i18n/trans';\nimport {TitleCreditsGrid} from '@app/titles/pages/title-page/title-credits-grid/title-credits-grid';\nimport {\n  GetEpisodeResponse,\n  useEpisode,\n} from '@app/episodes/requests/use-episode';\nimport {EpisodePageHeader} from '@app/episodes/episode-page-header';\n\nexport function EpisodeFullCreditsPage() {\n  const query = useEpisode('episodeCreditsPage');\n\n  const content = query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent data={query.data} />\n    </Fragment>\n  ) : (\n    <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n  );\n\n  return <SitePageLayout>{content}</SitePageLayout>;\n}\n\ninterface PageContentProps {\n  data: GetEpisodeResponse;\n}\nfunction PageContent({\n  data: {title, episode, credits: groupedCredits},\n}: PageContentProps) {\n  return (\n    <div>\n      <TitlePageHeaderImage title={title} episode={episode} />\n      <div className=\"container mx-auto mt-24 px-14 md:mt-40 md:px-24\">\n        <EpisodePageHeader title={title} episode={episode} showPoster />\n        <div className=\"mt-48 @container\">\n          <SiteSectionHeading headingType=\"h2\" className=\"mb-40\">\n            <Trans message=\"Full cast and crew\" />\n          </SiteSectionHeading>\n          {groupedCredits &&\n            Object.entries(groupedCredits).map(([department, credits]) => (\n              <div key={department}>\n                <h3 className=\"mb-16 text-2xl font-bold capitalize\">\n                  <Trans message={department} />\n                </h3>\n                <TitleCreditsGrid credits={credits} className=\"mb-68\" />\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {\n  DetailItem,\n  TitlePageAsideLayout,\n} from '@app/titles/pages/title-page/title-page-aside-layout';\nimport {PersonPoster} from '@app/people/person-poster/person-poster';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport React from 'react';\nimport {PersonAge} from '@app/people/person-age';\nimport {GetPersonResponse} from '@app/people/requests/use-person';\nimport {ShareMenuTrigger} from '@app/sharing/share-menu-trigger';\nimport {Button} from '@ui/buttons/button';\nimport {ShareIcon} from '@ui/icons/material/Share';\nimport {Person} from '@app/titles/models/person';\nimport {getPersonLink} from '@app/people/person-link';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {Link} from 'react-router';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {useAuth} from '@common/auth/use-auth';\n\ninterface Props {\n  data: GetPersonResponse;\n}\nexport function PersonPageAside({data: {person, total_credits_count}}: Props) {\n  const {hasPermission} = useAuth();\n  const age = (\n    <Trans\n      message=\":count years old\"\n      values={{count: <PersonAge person={person} />}}\n    />\n  );\n\n  return (\n    <TitlePageAsideLayout\n      className=\"max-md:flex\"\n      poster={\n        <div>\n          <div className=\"relative\">\n            <PersonPoster person={person} size=\"w-140 md:w-full\" srcSize=\"lg\" />\n            {hasPermission('titles.update') && (\n              <IconButton\n                elementType={Link}\n                to={`/admin/people/${person.id}/edit`}\n                className=\"absolute bottom-6 right-4\"\n                color=\"white\"\n              >\n                <EditIcon />\n              </IconButton>\n            )}\n          </div>\n          <ShareButton person={person} />\n        </div>\n      }\n    >\n      <dl className=\"mt-12 md:mt-24\">\n        {person.known_for && (\n          <DetailItem label={<Trans message=\"Known for\" />}>\n            <Trans message={person.known_for} />\n          </DetailItem>\n        )}\n        {person.gender && (\n          <DetailItem label={<Trans message=\"Gender\" />}>\n            <span className=\"capitalize\">\n              <Trans message={person.gender} />\n            </span>\n          </DetailItem>\n        )}\n        {total_credits_count ? (\n          <DetailItem label={<Trans message=\"Known credits\" />}>\n            {total_credits_count}\n          </DetailItem>\n        ) : null}\n        {person.birth_date ? (\n          <DetailItem label={<Trans message=\"Born\" />}>\n            <FormattedDate date={person.birth_date} timezone=\"utc\" />{' '}\n            {!person.death_date && age ? <span>({age})</span> : null}\n          </DetailItem>\n        ) : null}\n        {person.birth_place ? (\n          <DetailItem label={<Trans message=\"Birthplace\" />}>\n            {person.birth_place}\n          </DetailItem>\n        ) : null}\n        {person.death_date ? (\n          <DetailItem label={<Trans message=\"Died\" />}>\n            <FormattedDate date={person.death_date} timezone=\"utc\" /> ({age})\n          </DetailItem>\n        ) : null}\n      </dl>\n    </TitlePageAsideLayout>\n  );\n}\n\ninterface ShareButtonProps {\n  person: Person;\n}\nfunction ShareButton({person}: ShareButtonProps) {\n  const link = getPersonLink(person, {absolute: true});\n  return (\n    <ShareMenuTrigger link={link}>\n      <Button\n        variant=\"outline\"\n        color=\"primary\"\n        startIcon={<ShareIcon />}\n        className=\"mt-14 md:min-h-40 md:w-full\"\n      >\n        <Trans message=\"Share\" />\n      </Button>\n    </ShareMenuTrigger>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {EpisodeCredit, PersonCredit} from '@app/titles/models/title';\nimport {Person} from '@app/titles/models/person';\n\nexport interface GetFullTitleCreditsResponse extends BackendResponse {\n  credits: EpisodeCredit[];\n}\n\ninterface Params {\n  credit: PersonCredit;\n  department: string;\n  person: Person;\n}\n\ninterface Options {\n  enabled?: boolean;\n}\n\nexport function useFullPersonCreditsForTitle(\n  {person, credit, department}: Params,\n  options: Options,\n) {\n  return useQuery({\n    queryKey: [\n      'people',\n      `${person.id}`,\n      'full-credits',\n      `${credit.id}`,\n      `${department}`,\n    ],\n    queryFn: () => fetchCredits(person.id, credit.id, department),\n    enabled: options.enabled,\n  });\n}\n\nfunction fetchCredits(\n  personId: number | string,\n  titleId: number | string,\n  department: string,\n) {\n  return apiClient\n    .get<GetFullTitleCreditsResponse>(\n      `people/${personId}/full-credits/${titleId}/${department}`,\n    )\n    .then(response => response.data);\n}\n","import {EpisodeCredit, PersonCredit} from '@app/titles/models/title';\nimport {Trans} from '@ui/i18n/trans';\n\ninterface Props {\n  credit: PersonCredit | EpisodeCredit;\n  className?: string;\n}\nexport function CharacterOrJob({credit, className}: Props) {\n  return (\n    <div className={className}>\n      {credit.pivot?.department === 'actors' ? (\n        credit.pivot?.character ?? <Trans message=\"Unknown\" />\n      ) : (\n        <span className=\"capitalize\">\n          {credit.pivot?.job ? (\n            <Trans message={credit.pivot?.job} />\n          ) : (\n            <Trans message=\"Unknown\" />\n          )}\n        </span>\n      )}\n    </div>\n  );\n}\n","import {GetPersonResponse} from '@app/people/requests/use-person';\nimport {Accordion, AccordionItem} from '@ui/accordion/accordion';\nimport {Trans} from '@ui/i18n/trans';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {TitleLink} from '@app/titles/title-link';\nimport {PersonCredit} from '@app/titles/models/title';\nimport {BulletSeparatedItems} from '@app/titles/bullet-separated-items';\nimport {CompactSeasonEpisode} from '@app/episodes/compact-season-episode';\nimport {EpisodeLink} from '@app/episodes/episode-link';\nimport {Button} from '@ui/buttons/button';\nimport {Fragment, useState} from 'react';\nimport {useFullPersonCreditsForTitle} from '@app/people/requests/use-full-person-credits-for-title';\nimport {CharacterOrJob} from '@app/people/person-page/character-or-job';\nimport {Person} from '@app/titles/models/person';\n\ninterface Props {\n  data: GetPersonResponse;\n}\nexport function PersonPageCredits({data: {credits, person}}: Props) {\n  return (\n    <div className=\"mt-34\">\n      <SiteSectionHeading fontSize=\"text-xl\">\n        <Trans message=\"Credits\" />\n      </SiteSectionHeading>\n      <Accordion mode=\"multiple\" defaultExpandedValues={[0]} isLazy>\n        {Object.entries(credits).map(([department, credits]) => (\n          <AccordionItem\n            labelClassName=\"font-semibold text-base\"\n            description={\n              <Trans\n                message=\"(:count credits)\"\n                values={{count: credits.length}}\n              />\n            }\n            key={department}\n            label={\n              <span className=\"capitalize\">\n                <Trans\n                  message={department === 'actors' ? 'Acting' : department}\n                />\n              </span>\n            }\n          >\n            {credits.map((credit, index) => {\n              const isLast = credit === credits[credits.length - 1];\n              return (\n                <Fragment key={credit.id}>\n                  <div className=\"flex items-start py-6\">\n                    <TitlePoster\n                      title={credit}\n                      size=\"w-40\"\n                      className=\"mr-12\"\n                      lazy\n                      srcSize=\"sm\"\n                    />\n                    <div className=\"mr-24 pt-2\">\n                      <div className=\"text-base font-semibold\">\n                        <TitleLink title={credit} />\n                      </div>\n                      <CharacterOrJob\n                        className=\"text-sm text-muted\"\n                        credit={credit}\n                      />\n                      {credit.credited_episode_count ? (\n                        <EpisodeList\n                          credit={credit}\n                          department={department}\n                          person={person}\n                        />\n                      ) : null}\n                    </div>\n                    <div className=\"ml-auto text-sm text-muted\">\n                      {credit.year}\n                    </div>\n                  </div>\n                  {!isLast && credit.year !== credits[index + 1]?.year && (\n                    <div className=\"my-8 h-1 w-full bg-divider\" />\n                  )}\n                </Fragment>\n              );\n            })}\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </div>\n  );\n}\n\ninterface EpisodeListProps {\n  credit: PersonCredit;\n  department: string;\n  person: Person;\n}\nfunction EpisodeList({credit, department, person}: EpisodeListProps) {\n  const [loadMoreEpisodes, setLoadMoreEpisodes] = useState(false);\n  const query = useFullPersonCreditsForTitle(\n    {person, department, credit},\n    {\n      enabled: loadMoreEpisodes,\n    },\n  );\n  const allEpisodesLoaded =\n    credit.episodes.length === credit.credited_episode_count ||\n    query.data != null;\n  const isLoadingMore = query.isLoading && query.fetchStatus !== 'idle';\n  const shouldShowLoadMoreBtn = isLoadingMore || !allEpisodesLoaded;\n  const episodeCredits = query.data?.credits.length\n    ? query.data.credits\n    : credit.episodes;\n\n  return (\n    <div className=\"mt-4\">\n      <div>\n        {episodeCredits.map(episodeCredit => (\n          <div className=\"mb-4 pl-10 text-xs\" key={episodeCredit.id}>\n            <BulletSeparatedItems>\n              <span>\n                -{' '}\n                <EpisodeLink\n                  title={credit}\n                  episode={episodeCredit}\n                  seasonNumber={episodeCredit.season_number}\n                />{' '}\n                ({episodeCredit.year})\n              </span>\n              <CompactSeasonEpisode episode={episodeCredit} />\n              <CharacterOrJob credit={episodeCredit} />\n            </BulletSeparatedItems>\n          </div>\n        ))}\n      </div>\n      {shouldShowLoadMoreBtn && (\n        <div className=\"mt-8\">\n          <Button\n            size=\"xs\"\n            disabled={isLoadingMore}\n            onClick={() => {\n              setLoadMoreEpisodes(true);\n            }}\n          >\n            <Trans\n              message=\"Show all :count episodes\"\n              values={{count: credit.credited_episode_count}}\n            />\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import {PageStatus} from '@common/http/page-status';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport React, {Fragment} from 'react';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {GetPersonResponse, usePerson} from '@app/people/requests/use-person';\nimport {Person} from '@app/titles/models/person';\nimport {Trans} from '@ui/i18n/trans';\nimport {TitlePageHeaderLayout} from '@app/titles/pages/title-page/title-page-header-layout';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {PersonPageAside} from '@app/people/person-page/person-page-aside';\nimport {ContentGridLayout} from '@app/channels/content-grid/content-grid-layout';\nimport {PersonCredit} from '@app/titles/models/title';\nimport {TitlePortraitGridItem} from '@app/channels/content-grid/title-grid-item';\nimport {PersonPageCredits} from '@app/people/person-page/person-page-credits';\nimport {CharacterOrJob} from '@app/people/person-page/character-or-job';\nimport {AdHost} from '@common/admin/ads/ad-host';\nimport {TruncatedDescription} from '@common/ui/other/truncated-description';\n\nexport function PersonPage() {\n  const query = usePerson('personPage');\n\n  const content = query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent data={query.data} />\n    </Fragment>\n  ) : (\n    <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n  );\n\n  return <SitePageLayout>{content}</SitePageLayout>;\n}\n\ninterface PageContentProps {\n  data: GetPersonResponse;\n}\nfunction PageContent({data}: PageContentProps) {\n  const {person, knownFor} = data;\n  return (\n    <Fragment>\n      <div className=\"container mx-auto mt-14 px-14 md:mt-40 md:px-24\">\n        <div className=\"items-start gap-54 md:flex\">\n          <PersonPageAside data={data} />\n          <main className=\"flex-auto @container max-md:mt-34\">\n            <TitlePageHeaderLayout name={person.name} />\n            <Biography person={person} />\n            <AdHost slot=\"person_top\" className=\"pt-48\" />\n            <KnowForList items={knownFor} />\n            <PersonPageCredits data={data} />\n          </main>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\ninterface BiographyProps {\n  person: Person;\n}\nfunction Biography({person}: BiographyProps) {\n  if (!person.description) return null;\n  return (\n    <Fragment>\n      <SiteSectionHeading fontSize=\"text-xl\">\n        <Trans message=\"Biography\" />\n      </SiteSectionHeading>\n      <TruncatedDescription\n        className=\"text-sm\"\n        description={person.description}\n      />\n    </Fragment>\n  );\n}\n\ninterface KnownForProps {\n  items: PersonCredit[];\n}\nfunction KnowForList({items}: KnownForProps) {\n  if (!items?.length) return null;\n  return (\n    <div className=\"mt-34\">\n      <SiteSectionHeading fontSize=\"text-xl\">\n        <Trans message=\"Known for\" />\n      </SiteSectionHeading>\n      <ContentGridLayout variant=\"portrait\">\n        {items.slice(0, 4).map(item => (\n          <TitlePortraitGridItem\n            key={item.id}\n            item={item}\n            description={\n              <CharacterOrJob className=\"text-muted\" credit={item} />\n            }\n          />\n        ))}\n      </ContentGridLayout>\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {\n  GetNewsArticleResponse,\n  useNewsArticle,\n} from '@app/admin/news/requests/use-news-article';\nimport {NewsArticle} from '@app/titles/models/news-article';\nimport {BulletSeparatedItems} from '@app/titles/bullet-separated-items';\nimport {NewsArticleImage} from '@app/news/news-article-image';\nimport {NewsArticleLink} from '@app/news/news-article-link';\nimport {NewsArticleByline} from '@app/news/news-article-byline';\nimport {NewsArticleSourceLink} from '@app/news/news-article-source-link';\nimport {FormattedDate} from '@ui/i18n/formatted-date';\nimport {Trans} from '@ui/i18n/trans';\n\nexport function NewsArticlePage() {\n  const query = useNewsArticle('newsArticlePage');\n\n  const content = query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent data={query.data} />\n    </Fragment>\n  ) : (\n    <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n  );\n\n  return <SitePageLayout>{content}</SitePageLayout>;\n}\n\ninterface PageContentProps {\n  data: GetNewsArticleResponse;\n}\nfunction PageContent({data: {article, related}}: PageContentProps) {\n  return (\n    <div className=\"container mx-auto mt-14 items-start gap-40 px-14 md:mt-40 md:px-24 lg:flex\">\n      <main className=\"mb-24 flex-auto rounded border p-16\">\n        <h1 className=\"mb-24 text-3xl md:text-4xl\">{article.title}</h1>\n        <div className=\"items-start gap-16 md:flex\">\n          <NewsArticleImage\n            article={article}\n            size=\"w-184 h-184\"\n            className=\"max-md:mb-24\"\n          />\n          <div\n            className=\"prose text dark:prose-invert\"\n            dangerouslySetInnerHTML={{__html: article.body}}\n          />\n        </div>\n        <BulletSeparatedItems className=\"mt-24 text-sm text-muted\">\n          <FormattedDate date={article.created_at} />\n          {article.byline ? <NewsArticleByline article={article} /> : null}\n          {article.source ? <NewsArticleSourceLink article={article} /> : null}\n        </BulletSeparatedItems>\n      </main>\n      <OtherNews articles={related} />\n    </div>\n  );\n}\n\ninterface OtherNewsProps {\n  articles: NewsArticle[];\n}\nfunction OtherNews({articles}: OtherNewsProps) {\n  return (\n    <div className=\"w-full max-w-full flex-shrink-0 lg:w-400\">\n      <h2 className=\"mb-14 text-2xl\">\n        <Trans message=\"Other news\" />\n      </h2>\n      {articles.map(article => (\n        <div\n          key={article.id}\n          className=\"mb-14 flex items-center gap-14 rounded border pr-14\"\n        >\n          <NewsArticleImage article={article} size=\"w-80 h-80\" lazy={false} />\n          <div className=\"min-w-0\">\n            <h3 className=\"line-clamp-2 text-sm font-semibold\">\n              <NewsArticleLink article={article} />\n            </h3>\n            <BulletSeparatedItems className=\"mt-6 text-sm text-muted\">\n              <FormattedDate date={article.created_at} />\n              <NewsArticleByline article={article} />\n            </BulletSeparatedItems>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@ui/toast/toast';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  listId: number | string;\n}\n\nexport function useDeleteList() {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: Payload) => deleteList(payload),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({queryKey: ['channel']});\n      toast(trans(message('List deleted')));\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction deleteList(payload: Payload) {\n  return apiClient\n    .delete<Response>(`channel/${payload.listId}`)\n    .then(r => r.data);\n}\n","import {Channel} from '@common/channels/channel';\nimport {Title} from '@app/titles/models/title';\nimport {Person} from '@app/titles/models/person';\nimport {useDeleteList} from '@app/user-lists/requests/use-delete-list';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {ConfirmationDialog} from '@ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@ui/i18n/trans';\nimport React, {Fragment} from 'react';\nimport {getUserListLink, UserListLink} from '@app/user-lists/user-list-link';\nimport {Button} from '@ui/buttons/button';\nimport {Link} from 'react-router';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {UserListByline} from '@app/user-lists/user-list-byline';\nimport {UserListDetails} from '@app/user-lists/user-list-details';\nimport clsx from 'clsx';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\nimport {PersonPoster} from '@app/people/person-poster/person-poster';\nimport {User} from '@ui/types/user';\nimport {useAuth} from '@common/auth/use-auth';\n\ninterface UserListIndexItemProps {\n  list: Channel;\n  user: User;\n  showVisibility?: boolean;\n}\nexport function UserListIndexItem({\n  list,\n  user,\n  showVisibility = true,\n}: UserListIndexItemProps) {\n  const {user: authUser} = useAuth();\n  const canEdit = authUser && authUser.id === user.id;\n  return (\n    <div className=\"flex items-center gap-24 border-b py-24\">\n      {\n        <ItemsPreview\n          className=\"max-md:hidden\"\n          list={list as Channel<Title | Person>}\n        />\n      }\n      <section className=\"flex-auto\">\n        <div className=\"flex items-center gap-8\">\n          <UserListLink\n            list={list}\n            className=\"mr-auto block text-lg font-semibold capitalize\"\n          />\n          {!list.config.preventDeletion && !list.internal && canEdit && (\n            <Fragment>\n              <Button\n                elementType={Link}\n                to={`${getUserListLink(list)}/edit`}\n                variant=\"outline\"\n                size=\"2xs\"\n                color=\"primary\"\n              >\n                <Trans message=\"Edit\" />\n              </Button>\n              <DialogTrigger type=\"modal\">\n                <Button\n                  color=\"danger\"\n                  variant=\"outline\"\n                  radius=\"rounded\"\n                  size=\"2xs\"\n                >\n                  <Trans message=\"Delete\" />\n                </Button>\n                <DeleteListDialog list={list} />\n              </DialogTrigger>\n            </Fragment>\n          )}\n        </div>\n        {list.description && (\n          <p className=\"mt-8 whitespace-nowrap text-sm text-muted\">\n            {list.description}\n          </p>\n        )}\n        <div className=\"mt-12 text-sm\">\n          <div className=\"items-center justify-between gap-24 md:flex\">\n            {user && <UserListByline user={user} />}\n            <UserListDetails\n              list={list}\n              showVisibility={showVisibility}\n              className=\"max-md:mt-12\"\n            />\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\ninterface ItemPreviewProps {\n  list: Channel<Title | Person>;\n  className?: string;\n}\nfunction ItemsPreview({list, className}: ItemPreviewProps) {\n  if (!list.items?.length) return null;\n  return (\n    <div\n      className={clsx('flex items-center overflow-hidden rounded', className)}\n    >\n      {list.items?.map((item, index) => (\n        <div\n          key={item.id}\n          style={{zIndex: 100 - index}}\n          className={clsx(\n            'relative overflow-hidden rounded shadow-[2px_0_7px_#000]',\n            index !== 0 && '-ml-30',\n          )}\n        >\n          {item.model_type === 'title' ? (\n            <TitlePoster title={item} size=\"w-70\" srcSize=\"sm\" />\n          ) : (\n            <PersonPoster person={item} size=\"w-70\" srcSize=\"sm\" />\n          )}\n          <div className=\"pointer-events-none absolute inset-0 shadow-[inset_0_0_0_1px_rgba(221,238,255,.35)]\" />\n        </div>\n      ))}\n    </div>\n  );\n}\n\ninterface DeleteButtonProps {\n  list: Channel;\n}\nfunction DeleteListDialog({list}: DeleteButtonProps) {\n  const deleteList = useDeleteList();\n  const {close} = useDialogContext();\n\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete list\" />}\n      body={<Trans message=\"Are you sure you want to delete this list?\" />}\n      confirm={<Trans message=\"Delete\" />}\n      isLoading={deleteList.isPending}\n      onConfirm={() => deleteList.mutate({listId: list.id}, {onSuccess: close})}\n    />\n  );\n}\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {useParams} from 'react-router';\nimport {Channel} from '@common/channels/channel';\n\nexport function useProfileLists() {\n  const {userId = 'me'} = useParams();\n  return useInfiniteData<Channel>({\n    endpoint: `user-profile/${userId}/lists`,\n    queryKey: ['channel', 'profile-lists', userId],\n    paginate: 'simple',\n  });\n}\n","import React from 'react';\nimport {PageStatus} from '@common/http/page-status';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {Trans} from '@ui/i18n/trans';\nimport {SiteSectionHeading} from '@app/titles/site-section-heading';\nimport {Link} from 'react-router';\nimport {Button} from '@ui/buttons/button';\nimport {Channel} from '@common/channels/channel';\nimport {UserListIndexItem} from '@app/user-lists/pages/user-lists-index-page/user-list-index-item';\nimport {useProfileLists} from '@app/profile/requests/use-profile-lists';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\nimport {useAuth} from '@common/auth/use-auth';\nimport {UseInfiniteDataResult} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport todoImage from '@app/admin/lists/todo.svg';\nimport {SvgImage} from '@ui/images/svg-image';\n\nexport function UserListsIndexPage() {\n  const query = useProfileLists();\n\n  const content = query.data ? (\n    <PageContent query={query} />\n  ) : (\n    <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n  );\n\n  return (\n    <SitePageLayout>\n      <StaticPageTitle>\n        <Trans message=\"Your lists\" />\n      </StaticPageTitle>\n      <div className=\"container mx-auto mt-48 px-24\">\n        <header>\n          <SiteSectionHeading\n            headingType=\"h1\"\n            margin=\"mb-34\"\n            actions={\n              <Button\n                variant=\"flat\"\n                color=\"primary\"\n                elementType={Link}\n                to=\"new\"\n              >\n                <Trans message=\"New list\" />\n              </Button>\n            }\n          >\n            <Trans message=\"My lists\" />\n          </SiteSectionHeading>\n        </header>\n        {content}\n      </div>\n    </SitePageLayout>\n  );\n}\n\ninterface PageContentProps {\n  query: UseInfiniteDataResult<Channel>;\n}\nfunction PageContent({query}: PageContentProps) {\n  const {user} = useAuth();\n\n  if (query.noResults) {\n    return (\n      <IllustratedMessage\n        className=\"mt-80\"\n        image={<SvgImage src={todoImage} />}\n        title={<Trans message=\"You have not created any lists yet.\" />}\n      />\n    );\n  }\n\n  return (\n    <div>\n      {query.items.map(list => (\n        <UserListIndexItem list={list} key={list.id} user={user!} />\n      ))}\n      <InfiniteScrollSentinel query={query} />\n    </div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {User} from '@ui/types/user';\nimport {apiClient} from '@common/http/query-client';\nimport {useParams} from 'react-router';\n\nexport interface UseUserProfileResponse extends BackendResponse {\n  user: User;\n}\n\nexport const userProfileQueryKey = (userId: number | string) => [\n  'users',\n  `${userId}`,\n  'profile',\n];\n\nexport function useUserProfile() {\n  const {userId} = useParams();\n  return useQuery({\n    queryKey: userProfileQueryKey(userId!),\n    queryFn: () => fetchProfile(userId!),\n  });\n}\n\nfunction fetchProfile(userId: string) {\n  return apiClient\n    .get<UseUserProfileResponse>(`user-profile/${userId}`)\n    .then(response => response.data);\n}\n","import {UserProfile} from '@app/profile/user-profile';\nimport clsx from 'clsx';\n\ninterface Props {\n  profile?: UserProfile;\n  className?: string;\n}\nexport function ProfileDescription({profile, className}: Props) {\n  if (!profile) return null;\n  return (\n    <div className={clsx('text-sm', className)}>\n      {profile.description && (\n        <p className=\"rounded text-secondary whitespace-nowrap overflow-hidden overflow-ellipsis\">\n          {profile.description}\n        </p>\n      )}\n      {profile.city || profile.country ? (\n        <div className=\"flex items-center gap-24 justify-between mt-4\">\n          {(profile.city || profile.country) && (\n            <div className=\"rounded text-secondary w-max\">\n              {profile.city}\n              {profile.city && ','} {profile.country}\n            </div>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useAuth} from '@common/auth/use-auth';\nimport {User} from '@ui/types/user';\n\ninterface Response extends BackendResponse {\n  ids: number[];\n}\n\nexport function useFollowedUsers() {\n  const {user} = useAuth();\n  return useQuery({\n    queryKey: ['users', 'followed', 'ids'],\n    queryFn: () => fetchIds(),\n    enabled: !!user,\n  });\n}\n\nexport function useIsUserFollowing(user: User) {\n  const {data, isLoading} = useFollowedUsers();\n  return {\n    isLoading,\n    isFollowing: !!data?.ids.includes(user.id),\n  };\n}\n\nfunction fetchIds() {\n  return apiClient\n    .get<Response>(`users/me/followed-users/ids`)\n    .then(response => response.data);\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {User} from '@ui/types/user';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  user: User;\n}\n\nexport function useFollowUser() {\n  return useMutation({\n    mutationFn: (payload: Payload) => followUser(payload),\n    onSuccess: async (response, {user}) => {\n      await queryClient.invalidateQueries({queryKey: ['users']});\n      toast(message('Following :name', {values: {name: user.name}}));\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction followUser({user}: Payload): Promise<Response> {\n  return apiClient.post(`users/${user.id}/follow`).then(r => r.data);\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/http/show-http-error-toast';\nimport {User} from '@ui/types/user';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  user: User;\n}\n\nexport function useUnfollowUser() {\n  return useMutation({\n    mutationFn: (payload: Payload) => unfollowUser(payload),\n    onSuccess: async (response, {user}) => {\n      await queryClient.invalidateQueries({queryKey: ['users']});\n      toast(message('Stopped following :name', {values: {name: user.name}}));\n    },\n    onError: r => showHttpErrorToast(r),\n  });\n}\n\nfunction unfollowUser({user}: Payload): Promise<Response> {\n  return apiClient.post(`users/${user.id}/unfollow`).then(r => r.data);\n}\n","import {Button, ButtonProps} from '@ui/buttons/button';\nimport {useAuth} from '@common/auth/use-auth';\nimport {User} from '@ui/types/user';\nimport {useIsUserFollowing} from '@common/users/queries/use-followed-users';\nimport {useFollowUser} from '@common/users/queries/use-follow-user';\nimport {useUnfollowUser} from '@common/users/queries/use-unfollow-user';\nimport {Trans} from '@ui/i18n/trans';\nimport clsx from 'clsx';\n\ninterface Props extends Omit<ButtonProps, 'onClick' | 'disabled'> {\n  user: User;\n  minWidth?: string | null;\n}\nexport function FollowButton({\n  user,\n  className,\n  minWidth = 'min-w-82',\n  ...buttonProps\n}: Props) {\n  const {user: currentUser} = useAuth();\n  const {isFollowing, isLoading} = useIsUserFollowing(user);\n  const followUser = useFollowUser();\n  const unfollowUser = useUnfollowUser();\n\n  const mergedClassName = clsx(className, minWidth);\n\n  if (isFollowing) {\n    return (\n      <Button\n        {...buttonProps}\n        className={mergedClassName}\n        onClick={() => unfollowUser.mutate({user})}\n        disabled={\n          !currentUser ||\n          currentUser?.id === user.id ||\n          unfollowUser.isPending ||\n          isLoading\n        }\n      >\n        <Trans message=\"Unfollow\" />\n      </Button>\n    );\n  }\n\n  return (\n    <Button\n      {...buttonProps}\n      className={mergedClassName}\n      onClick={() => followUser.mutate({user})}\n      disabled={\n        !currentUser ||\n        currentUser?.id === user.id ||\n        followUser.isPending ||\n        isLoading\n      }\n    >\n      <Trans message=\"Follow\" />\n    </Button>\n  );\n}\n","import {useFieldArray} from 'react-hook-form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@ui/i18n/trans';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {CloseIcon} from '@ui/icons/material/Close';\nimport {Button} from '@ui/buttons/button';\nimport {AddIcon} from '@ui/icons/material/Add';\nimport React from 'react';\nimport {UserLink} from '@app/profile/user-link';\n\nexport function ProfileLinksForm() {\n  const {fields, append, remove} = useFieldArray<{links: UserLink[]}>({\n    name: 'links',\n  });\n  return (\n    <div>\n      {fields.map((field, index) => {\n        return (\n          <div key={field.id} className=\"mb-10 flex items-end gap-10\">\n            <FormTextField\n              required\n              type=\"url\"\n              label={<Trans message=\"URL\" />}\n              name={`links.${index}.url`}\n              size=\"sm\"\n              className=\"flex-auto\"\n            />\n            <FormTextField\n              required\n              label={<Trans message=\"Short title\" />}\n              name={`links.${index}.title`}\n              size=\"sm\"\n              className=\"flex-auto\"\n            />\n            <IconButton\n              size=\"sm\"\n              color=\"primary\"\n              className=\"flex-shrink-0\"\n              onClick={() => {\n                remove(index);\n              }}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        );\n      })}\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        size=\"xs\"\n        onClick={() => {\n          append({url: '', title: ''});\n        }}\n      >\n        <Trans message=\"Add another link\" />\n      </Button>\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport {toast} from '@ui/toast/toast';\nimport {message} from '@ui/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useAuth} from '@common/auth/use-auth';\nimport {UserLink} from '@app/profile/user-link';\nimport {userProfileQueryKey} from '@app/profile/requests/use-user-profile';\nimport {User} from '@ui/types/user';\n\ninterface Response extends BackendResponse {\n  user: User;\n}\n\nexport interface UpdateProfilePayload {\n  user: {\n    image?: string;\n    first_name?: string;\n    last_name?: string;\n    username?: string;\n  };\n  profile: {\n    city?: string;\n    country?: string;\n    description?: string;\n  };\n  links: UserLink[];\n}\n\nexport function useUpdateUserProfile(\n  form: UseFormReturn<UpdateProfilePayload>,\n) {\n  const {user} = useAuth();\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: UpdateProfilePayload) => updateProfile(payload),\n    onSuccess: async () => {\n      if (user) {\n        await queryClient.invalidateQueries({\n          queryKey: userProfileQueryKey(user.id),\n        });\n      }\n      toast(trans(message('Profile updated')));\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateProfile(payload: UpdateProfilePayload): Promise<Response> {\n  return apiClient.put('user-profile/me', payload).then(r => r.data);\n}\n","import {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@ui/overlays/dialog/dialog-header';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {User} from '@ui/types/user';\nimport {Form} from '@ui/forms/form';\nimport {FormTextField} from '@ui/forms/input-field/text-field/text-field';\nimport {FormImageSelector} from '@common/uploads/components/image-selector';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {Option} from '@ui/forms/combobox/combobox';\nimport {useValueLists} from '@common/http/value-lists';\nimport {useForm} from 'react-hook-form';\nimport {ProfileLinksForm} from '@app/profile/profile-links-form';\nimport {\n  UpdateProfilePayload,\n  useUpdateUserProfile,\n} from '@app/profile/requests/use-update-user-profile';\nimport {FormSelect} from '@ui/forms/select/select';\n\ninterface Props {\n  user: User;\n}\nexport function EditUserProfileDialog({user}: Props) {\n  const {close, formId} = useDialogContext();\n  const {data} = useValueLists(['countries']);\n  const form = useForm<UpdateProfilePayload>({\n    defaultValues: {\n      user: {\n        username: user.username,\n        image: user.image,\n        first_name: user.first_name,\n        last_name: user.last_name,\n      },\n      profile: {\n        city: user.profile?.city,\n        country: user.profile?.country,\n        description: user.profile?.description,\n      },\n      links: user.links,\n    },\n  });\n  const updateProfile = useUpdateUserProfile(form);\n  return (\n    <Dialog size=\"xl\">\n      <DialogHeader>\n        <Trans message=\"Edit your profile\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values =>\n            updateProfile.mutate(values, {onSuccess: () => close()})\n          }\n        >\n          <FileUploadProvider>\n            <div className=\"items-start gap-30 md:flex\">\n              <FormImageSelector\n                label={<Trans message=\"Avatar\" />}\n                name=\"user.image\"\n                diskPrefix=\"avatars\"\n                variant=\"avatar\"\n                previewSize=\"w-200 h-200\"\n                className=\"max-md:mb-20\"\n              />\n              <div className=\"flex-auto\">\n                <FormTextField\n                  name=\"user.username\"\n                  label={<Trans message=\"Username\" />}\n                  className=\"mb-24\"\n                />\n                <div className=\"flex items-center gap-24\">\n                  <FormTextField\n                    name=\"user.first_name\"\n                    label={<Trans message=\"First name\" />}\n                    className=\"mb-24 flex-1\"\n                  />\n                  <FormTextField\n                    name=\"user.last_name\"\n                    label={<Trans message=\"Last name\" />}\n                    className=\"mb-24 flex-1\"\n                  />\n                </div>\n                <div className=\"flex items-center gap-24\">\n                  <FormTextField\n                    name=\"profile.city\"\n                    label={<Trans message=\"City\" />}\n                    className=\"mb-24 flex-1\"\n                  />\n                  <FormSelect\n                    showSearchField\n                    className=\"mb-24 flex-1\"\n                    selectionMode=\"single\"\n                    name=\"profile.country\"\n                    label={<Trans message=\"Country\" />}\n                  >\n                    <Option key=\"none\" value={undefined}>\n                      <Trans message=\"None\" />\n                    </Option>\n                    {data?.countries?.map(country => (\n                      <Option key={country.code} value={country.name}>\n                        {country.name}\n                      </Option>\n                    ))}\n                  </FormSelect>\n                </div>\n                <FormTextField\n                  name=\"profile.description\"\n                  label={<Trans message=\"Description\" />}\n                  inputElementType=\"textarea\"\n                  rows={4}\n                />\n              </div>\n            </div>\n            <div className=\"mt-24\">\n              <div className=\"mb-16 border-b pb-16\">\n                <Trans message=\"Your links\" />\n              </div>\n              <ProfileLinksForm />\n            </div>\n          </FileUploadProvider>\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            close();\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={updateProfile.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {User} from '@ui/types/user';\nimport React, {\n  Children,\n  Fragment,\n  ReactElement,\n  ReactNode,\n  useContext,\n} from 'react';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {Trans} from '@ui/i18n/trans';\nimport {Link} from 'react-router';\nimport {FormattedNumber} from '@ui/i18n/formatted-number';\n\ninterface Props {\n  user: User;\n}\nexport function ProfileStatsList({user}: Props) {\n  const {\n    auth: {getUserProfileLink},\n  } = useContext(SiteConfigContext);\n  const profileLink = getUserProfileLink!(user);\n\n  return (\n    <StatsItems>\n      <StatsItem\n        label={<Trans message=\"Followers\" />}\n        value={user.followers_count || 0}\n        link={`${profileLink}/followers`}\n      />\n      <StatsItem\n        label={<Trans message=\"Following\" />}\n        value={user.followed_users_count || 0}\n        link={`${profileLink}/followed-users`}\n      />\n      <StatsItem\n        label={<Trans message=\"Lists\" />}\n        value={user.lists_count || 0}\n        link={`${profileLink}/lists`}\n      />\n    </StatsItems>\n  );\n}\n\ninterface StatsItemsProps {\n  children: ReactNode;\n}\nfunction StatsItems(props: StatsItemsProps) {\n  const children = Children.toArray(props.children);\n  return (\n    <div className=\"flex items-center\">\n      {children.map((child, index) => (\n        <Fragment key={index}>\n          {child}\n          {index < children.length - 1 && (\n            <div className=\"mx-10 h-34 w-1 bg-divider\" />\n          )}\n        </Fragment>\n      ))}\n    </div>\n  );\n}\n\ninterface StatsItemProps {\n  label: ReactElement;\n  value: number;\n  link: string;\n}\nfunction StatsItem({label, value, link}: StatsItemProps) {\n  return (\n    <Link to={link} className=\"group block text-center\">\n      <div className=\"text-lg font-bold\">\n        <FormattedNumber value={value} />\n      </div>\n      <div className=\"text-xs uppercase text-muted transition-colors group-hover:text-primary\">\n        {label}\n      </div>\n    </Link>\n  );\n}\n","import memoize from 'nano-memoize';\nimport clsx from 'clsx';\nimport {isAbsoluteUrl} from '@ui/utils/urls/is-absolute-url';\n\ninterface RemoteFaviconProps {\n  url: string;\n  className?: string;\n  size?: string;\n  alt?: string;\n}\nexport function RemoteFavicon({\n  url,\n  className,\n  size = 'w-16 h-16',\n  alt,\n}: RemoteFaviconProps) {\n  if (!url) {\n    return null;\n  }\n\n  const src = getFaviconSrc(url);\n\n  if (!src) {\n    return null;\n  }\n\n  return (\n    <img\n      className={clsx(size, className)}\n      src={src}\n      alt={alt || `${src} favicon`}\n    />\n  );\n}\n\nconst getFaviconSrc = memoize((url: string): string | null => {\n  if (url.includes('youtube')) {\n    return 'https://www.youtube.com/s/desktop/ca54e1bd/img/favicon.ico';\n  }\n\n  // relative url to current site\n  if (!isAbsoluteUrl(url)) {\n    url = `${window.location.protocol}//${window.location.host}`;\n  }\n\n  try {\n    const domain = new URL(url).origin;\n    return 'https://www.google.com/s2/favicons?domain=' + domain;\n  } catch (e) {}\n\n  return null;\n});\n","import {UserLink} from '@app/profile/user-link';\nimport {Tooltip} from '@ui/tooltip/tooltip';\nimport clsx from 'clsx';\nimport {ButtonBase} from '@ui/buttons/button-base';\nimport {OpenInNewIcon} from '@ui/icons/material/OpenInNew';\nimport {RemoteFavicon} from '@common/ui/other/remote-favicon';\n\ninterface Props {\n  links?: UserLink[];\n  className?: string;\n}\nexport function ProfileLinks({links, className}: Props) {\n  if (!links?.length) return null;\n\n  if (links.length === 1) {\n    return (\n      <a\n        className=\"mt-24 flex items-center gap-6 transition-colors hover:text-primary max-md:justify-center md:mt-12\"\n        href={links[0].url}\n      >\n        <OpenInNewIcon className=\"text-muted\" size=\"sm\" />\n        <span className=\"capitalize\">{links[0].title}</span>\n      </a>\n    );\n  }\n\n  return (\n    <div className={clsx('flex items-center', className)}>\n      {links.map(link => (\n        <Tooltip label={link.title} key={link.url}>\n          <ButtonBase\n            elementType=\"a\"\n            href={link.url}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <RemoteFavicon url={link.url} alt={link.title} size=\"w-20 h-20\" />\n          </ButtonBase>\n        </Tooltip>\n      ))}\n    </div>\n  );\n}\n","import {UserAvatar} from '@common/auth/user-avatar';\nimport {ProfileDescription} from '@app/profile/header/profile-description';\nimport {FollowButton} from '@common/users/follow-button';\nimport React from 'react';\nimport {useAuth} from '@common/auth/use-auth';\nimport {User} from '@ui/types/user';\nimport {Trans} from '@ui/i18n/trans';\nimport {DialogTrigger} from '@ui/overlays/dialog/dialog-trigger';\nimport {Button} from '@ui/buttons/button';\nimport {EditIcon} from '@ui/icons/material/Edit';\nimport {EditUserProfileDialog} from '@app/profile/edit-user-profile-dialog';\nimport {ProfileStatsList} from '@app/profile/header/profile-stats-list';\nimport {ProfileLinks} from '@app/profile/header/profile-links';\nimport {Chip} from '@ui/forms/input-field/chip-field/chip';\n\ninterface Props {\n  user: User;\n}\nexport function ProfilePageHeader({user}: Props) {\n  const {user: currentUser} = useAuth();\n  return (\n    <div className=\"flex flex-col items-center gap-24 md:flex-row\">\n      <UserAvatar user={user} circle size=\"w-140 h-140\" />\n      <div className=\"flex-auto\">\n        <div className=\"mb-8 flex items-center gap-8\">\n          <h1 className=\"text-2xl font-bold\">{user.name}</h1>\n          {user.is_pro && (\n            <Chip size=\"xs\" color=\"primary\" radius=\"rounded\" className=\"mt-2\">\n              <Trans message=\"PRO\" />\n            </Chip>\n          )}\n        </div>\n        <ProfileDescription profile={user.profile} />\n        <div className=\"mt-12 flex items-center gap-14\">\n          {currentUser?.id !== user.id && (\n            <FollowButton\n              variant=\"outline\"\n              color=\"primary\"\n              size=\"xs\"\n              user={user}\n            />\n          )}\n          {currentUser?.id === user.id && <EditButton user={user} />}\n        </div>\n      </div>\n      <div>\n        <ProfileStatsList user={user} />\n        <ProfileLinks\n          links={user.links}\n          className=\"ml-auto mt-12 flex-shrink-0\"\n        />\n      </div>\n    </div>\n  );\n}\n\ninterface EditButtonProps {\n  user: User;\n}\nfunction EditButton({user}: EditButtonProps) {\n  return (\n    <DialogTrigger type=\"modal\">\n      <Button variant=\"outline\" size=\"xs\" startIcon={<EditIcon />}>\n        <Trans message=\"Edit profile\" />\n      </Button>\n      <EditUserProfileDialog user={user} />\n    </DialogTrigger>\n  );\n}\n","import {useUserProfile} from '@app/profile/requests/use-user-profile';\nimport React, {Fragment, useContext} from 'react';\nimport {PageMetaTags} from '@common/http/page-meta-tags';\nimport {PageStatus} from '@common/http/page-status';\nimport {SitePageLayout} from '@app/site-page-layout';\nimport {User} from '@ui/types/user';\nimport {Tabs} from '@ui/tabs/tabs';\nimport {TabList} from '@ui/tabs/tab-list';\nimport {Tab} from '@ui/tabs/tab';\nimport {Trans} from '@ui/i18n/trans';\nimport {Link, Outlet, useLocation} from 'react-router';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\nimport {message} from '@ui/i18n/message';\nimport {ProfilePageHeader} from '@app/profile/header/profile-page-header';\n\nconst PageTabs = [\n  {uri: 'lists', label: message('Lists')},\n  {uri: 'ratings', label: message('Ratings')},\n  {uri: 'reviews', label: message('Reviews')},\n  {uri: 'comments', label: message('Comments')},\n  {uri: 'followers', label: message('Followers')},\n  {uri: 'followed-users', label: message('Following')},\n];\n\nexport function UserProfilePage() {\n  const query = useUserProfile();\n\n  const content = query.data ? (\n    <Fragment>\n      <PageMetaTags query={query} />\n      <PageContent user={query.data.user} />\n    </Fragment>\n  ) : (\n    <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />\n  );\n\n  return <SitePageLayout>{content}</SitePageLayout>;\n}\n\ninterface PageContentProps {\n  user: User;\n}\nfunction PageContent({user}: PageContentProps) {\n  return (\n    <div className=\"container mx-auto mt-24 px-14 md:mt-40 md:px-24\">\n      <ProfilePageHeader user={user} />\n      <ProfileTabs user={user} />\n    </div>\n  );\n}\n\ninterface ProfileTabsProps {\n  user: User;\n}\nfunction ProfileTabs({user}: ProfileTabsProps) {\n  const {\n    auth: {getUserProfileLink},\n  } = useContext(SiteConfigContext);\n  const profileLink = getUserProfileLink!(user);\n\n  const {pathname} = useLocation();\n  const tabName = pathname.split('/').pop();\n  let selectedTab = PageTabs.findIndex(tab => tab.uri === tabName);\n  if (selectedTab === -1) {\n    selectedTab = 0;\n  }\n\n  return (\n    <Tabs className=\"mt-34\" selectedTab={selectedTab}>\n      <TabList>\n        {PageTabs.map(tab => (\n          <Tab\n            key={tab.uri}\n            width=\"min-w-132\"\n            elementType={Link}\n            to={`${profileLink}/${tab.uri}`}\n            replace\n          >\n            <Trans {...tab.label} />\n          </Tab>\n        ))}\n      </TabList>\n      <div className=\"mt-24\">\n        <Outlet />\n      </div>\n    </Tabs>\n  );\n}\n","import {useProfileLists} from '@app/profile/requests/use-profile-lists';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {ListAltIcon} from '@ui/icons/material/ListAlt';\nimport {Trans} from '@ui/i18n/trans';\nimport {UserListIndexItem} from '@app/user-lists/pages/user-lists-index-page/user-list-index-item';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {PageStatus} from '@common/http/page-status';\nimport React from 'react';\nimport {useUserProfile} from '@app/profile/requests/use-user-profile';\n\nexport function ProfileListsPanel() {\n  const userQuery = useUserProfile();\n  const user = userQuery.data!.user;\n  const listsQuery = useProfileLists();\n\n  if (listsQuery.noResults) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<ListAltIcon className=\"text-muted\" />}\n        size=\"sm\"\n        title={<Trans message=\"No lists yet\" />}\n        description={\n          <Trans\n            message=\"Follow :user for updates on lists they create in the future.\"\n            values={{user: user.name}}\n          />\n        }\n      />\n    );\n  }\n\n  if (listsQuery.data) {\n    return (\n      <div>\n        {listsQuery.items.map(list => (\n          <UserListIndexItem\n            key={list.id}\n            list={list}\n            user={user}\n            showVisibility={false}\n          />\n        ))}\n        <InfiniteScrollSentinel query={listsQuery} />\n      </div>\n    );\n  }\n\n  return <PageStatus query={listsQuery} />;\n}\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {useParams} from 'react-router';\nimport {Review} from '@app/titles/models/review';\n\nexport function useProfileRatings() {\n  const {userId = 'me'} = useParams();\n  return useInfiniteData<Review>({\n    endpoint: `user-profile/${userId}/ratings`,\n    queryKey: ['reviews', 'profile-page-ratings', userId],\n    paginate: 'simple',\n  });\n}\n","import {TitleRating} from '@app/reviews/title-rating';\nimport React from 'react';\nimport {Episode} from '@app/titles/models/episode';\nimport {EpisodePoster} from '@app/episodes/episode-poster/episode-poster';\nimport {Title} from '@app/titles/models/title';\nimport {TitleLinkWithEpisodeNumber} from '@app/titles/title-link';\n\nexport interface EpisodePortraitGridItemProps {\n  item: Episode;\n  title: Title;\n  rating?: number;\n}\nexport function EpisodePortraitGridItem({\n  item,\n  title,\n  rating,\n}: EpisodePortraitGridItemProps) {\n  return (\n    <div>\n      <EpisodePoster\n        episode={item}\n        title={title}\n        srcSize=\"lg\"\n        aspect=\"aspect-poster\"\n        showPlayButton\n      />\n      <div className=\"mt-10 text-sm\">\n        <TitleRating score={rating ?? item.rating} className=\"mb-4\" />\n        <TitleLinkWithEpisodeNumber\n          title={title}\n          episode={item}\n          className=\"block font-medium text-base\"\n        />\n      </div>\n    </div>\n  );\n}\n","import {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {Trans} from '@ui/i18n/trans';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {PageStatus} from '@common/http/page-status';\nimport React, {Fragment} from 'react';\nimport {StarIcon} from '@ui/icons/material/Star';\nimport {useProfileRatings} from '@app/profile/requests/use-profile-ratings';\nimport {ContentGridLayout} from '@app/channels/content-grid/content-grid-layout';\nimport {Title} from '@app/titles/models/title';\nimport {TitlePortraitGridItem} from '@app/channels/content-grid/title-grid-item';\nimport {useUserProfile} from '@app/profile/requests/use-user-profile';\nimport {Episode} from '@app/titles/models/episode';\nimport {EpisodePortraitGridItem} from '@app/channels/content-grid/episode-grid-item';\n\nexport function ProfileRatingsPanel() {\n  const userQuery = useUserProfile();\n  const user = userQuery.data!.user;\n  const ratingsQuery = useProfileRatings();\n\n  if (ratingsQuery.noResults) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<StarIcon className=\"text-muted\" />}\n        size=\"sm\"\n        title={<Trans message=\"No ratings yet\" />}\n        description={\n          <Trans\n            message=\"Follow :user for updates on titles they rate in the future.\"\n            values={{user: user.name}}\n          />\n        }\n      />\n    );\n  }\n\n  if (ratingsQuery.data) {\n    return (\n      <Fragment>\n        <ContentGridLayout variant=\"portrait\">\n          {ratingsQuery.items.map(review => {\n            const reviewable = review.reviewable as Title | Episode;\n            if (reviewable.model_type === 'episode') {\n              return (\n                <EpisodePortraitGridItem\n                  key={review.id}\n                  item={reviewable}\n                  title={reviewable.title!}\n                  rating={review.score}\n                />\n              );\n            }\n            return (\n              <TitlePortraitGridItem\n                item={review.reviewable as Title}\n                key={review.id}\n                rating={review.score}\n              />\n            );\n          })}\n        </ContentGridLayout>\n        <InfiniteScrollSentinel query={ratingsQuery} />\n      </Fragment>\n    );\n  }\n\n  return <PageStatus query={ratingsQuery} />;\n}\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {useParams} from 'react-router';\nimport {Review} from '@app/titles/models/review';\n\nexport function useProfileReviews() {\n  const {userId = 'me'} = useParams();\n  return useInfiniteData<Review>({\n    endpoint: `user-profile/${userId}/reviews`,\n    queryKey: ['reviews', 'profile-page-reviews', userId],\n    paginate: 'simple',\n  });\n}\n","import {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {Trans} from '@ui/i18n/trans';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {PageStatus} from '@common/http/page-status';\nimport React, {Fragment} from 'react';\nimport {useUserProfile} from '@app/profile/requests/use-user-profile';\nimport {RateReviewIcon} from '@ui/icons/material/RateReview';\nimport {useProfileReviews} from '@app/profile/requests/use-profile-reviews';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\nimport {Title} from '@app/titles/models/title';\nimport {Review} from '@app/titles/models/review';\nimport {TitleRating} from '@app/reviews/title-rating';\nimport {TitleLink, TitleLinkWithEpisodeNumber} from '@app/titles/title-link';\nimport {Episode} from '@app/titles/models/episode';\n\nexport function ProfileReviewsPanel() {\n  const userQuery = useUserProfile();\n  const user = userQuery.data!.user;\n  const reviewsQuery = useProfileReviews();\n\n  if (reviewsQuery.noResults) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<RateReviewIcon className=\"text-muted\" />}\n        size=\"sm\"\n        title={<Trans message=\"No reviews yet\" />}\n        description={\n          <Trans\n            message=\"Follow :user for updates on titles they review in the future.\"\n            values={{user: user.name}}\n          />\n        }\n      />\n    );\n  }\n\n  if (reviewsQuery.data) {\n    return (\n      <Fragment>\n        {reviewsQuery.items.map(review => (\n          <ReviewListItem key={review.id} review={review} />\n        ))}\n        <InfiniteScrollSentinel query={reviewsQuery} />\n      </Fragment>\n    );\n  }\n\n  return <PageStatus query={reviewsQuery} />;\n}\n\ninterface ReviewListItemProps {\n  review: Review;\n}\nfunction ReviewListItem({review}: ReviewListItemProps) {\n  const totalVotes = review.helpful_count + review.not_helpful_count;\n  const reviewable = review.reviewable as Title | Episode;\n  const title =\n    reviewable.model_type === 'episode' ? reviewable.title! : reviewable;\n  return (\n    <div className=\"mb-24 flex items-start gap-24 border-b pb-24\">\n      <TitlePoster title={title} size=\"w-90\" srcSize=\"sm\" />\n      <div>\n        <div className=\"text-lg font-semibold\">\n          {reviewable.model_type === 'episode' ? (\n            <TitleLinkWithEpisodeNumber\n              title={title}\n              episode={reviewable}\n              target=\"_blank\"\n            />\n          ) : (\n            <TitleLink title={title} target=\"_blank\" />\n          )}\n        </div>\n        <TitleRating className=\"mb-8 mt-14\" score={review.score} />\n        <div className=\"text-base font-semibold\">{review.title}</div>\n        <p className=\"mt-10 whitespace-pre-line text-sm\">{review.body}</p>\n        {totalVotes ? (\n          <div className=\"mt-12 text-xs text-muted\">\n            <Trans\n              message=\":helpfulCount out of :total people found this helpful.\"\n              values={{\n                helpfulCount: review.helpful_count,\n                total: review.helpful_count + review.not_helpful_count,\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {useParams} from 'react-router';\nimport {Comment} from '@common/comments/comment';\n\nexport function useProfileComments() {\n  const {userId = 'me'} = useParams();\n  return useInfiniteData<Comment>({\n    endpoint: `user-profile/${userId}/comments`,\n    queryKey: ['comment', 'profile-page-comments', userId],\n    paginate: 'simple',\n  });\n}\n","import {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {Trans} from '@ui/i18n/trans';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {PageStatus} from '@common/http/page-status';\nimport React, {Fragment} from 'react';\nimport {useUserProfile} from '@app/profile/requests/use-user-profile';\nimport {RateReviewIcon} from '@ui/icons/material/RateReview';\nimport {TitlePoster} from '@app/titles/title-poster/title-poster';\nimport {Title} from '@app/titles/models/title';\nimport {TitleLink, TitleLinkWithEpisodeNumber} from '@app/titles/title-link';\nimport {Episode} from '@app/titles/models/episode';\nimport {useProfileComments} from '@app/profile/requests/use-profile-comments';\nimport {Comment} from '@common/comments/comment';\nimport {ThumbUpIcon} from '@ui/icons/material/ThumbUp';\nimport {FormattedRelativeTime} from '@ui/i18n/formatted-relative-time';\n\nexport function ProfileCommentsPanel() {\n  const userQuery = useUserProfile();\n  const user = userQuery.data!.user;\n  const commentsQuery = useProfileComments();\n\n  if (commentsQuery.noResults) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<RateReviewIcon className=\"text-muted\" />}\n        size=\"sm\"\n        title={<Trans message=\"No comments yet\" />}\n        description={\n          <Trans\n            message=\"Follow :user for updates on comments they post in the future.\"\n            values={{user: user.name}}\n          />\n        }\n      />\n    );\n  }\n\n  if (commentsQuery.data) {\n    return (\n      <Fragment>\n        {commentsQuery.items.map(comment => {\n          if (!comment.commentable) return null;\n          return <CommentListItem key={comment.id} comment={comment} />;\n        })}\n        <InfiniteScrollSentinel query={commentsQuery} />\n      </Fragment>\n    );\n  }\n\n  return <PageStatus query={commentsQuery} />;\n}\n\ninterface CommentListItemProps {\n  comment: Comment;\n}\nfunction CommentListItem({comment}: CommentListItemProps) {\n  const commentable = comment.commentable as Title | Episode;\n  const title =\n    commentable.model_type === 'episode' ? commentable.title! : commentable;\n  return (\n    <div className=\"mb-24 flex items-start gap-24 border-b pb-24\">\n      <TitlePoster title={title} size=\"w-90\" srcSize=\"sm\" />\n      <div>\n        <div className=\"text-lg font-semibold\">\n          {commentable.model_type === 'episode' ? (\n            <TitleLinkWithEpisodeNumber\n              title={title}\n              episode={commentable}\n              target=\"_blank\"\n            />\n          ) : (\n            <TitleLink title={title} target=\"_blank\" />\n          )}\n        </div>\n        <time className=\"mt-12 block text-xs text-muted\">\n          <FormattedRelativeTime date={comment.created_at} />\n        </time>\n        <p className=\"mt-8 whitespace-pre-line text-sm\">{comment.content}</p>\n        {comment.upvotes ? (\n          <div className=\"mt-12 flex items-center gap-8 text-muted\">\n            <ThumbUpIcon size=\"sm\" />\n            <div>{comment.upvotes}</div>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {useParams} from 'react-router';\nimport {User} from '@ui/types/user';\n\nexport function useProfileFollowers() {\n  const {userId = 'me'} = useParams();\n  return useInfiniteData<User>({\n    endpoint: `users/${userId}/followers`,\n    queryKey: ['users', 'profile-page-followers', userId],\n    paginate: 'simple',\n  });\n}\n","import {User} from '@ui/types/user';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {UserProfileLink} from '@common/users/user-profile-link';\nimport {UserAvatar} from '@common/auth/user-avatar';\nimport {FollowButton} from '@common/users/follow-button';\n\ninterface Props {\n  follower: User;\n}\nexport function FollowerListItem({follower}: Props) {\n  return (\n    <div\n      key={follower.id}\n      className=\"mb-16 flex items-center gap-16 border-b pb-16\"\n    >\n      <UserAvatar user={follower} size=\"lg\" />\n      <div className=\"text-sm\">\n        <UserProfileLink user={follower} />\n        {follower.followers_count && follower.followers_count > 0 ? (\n          <div className=\"text-xs text-muted\">\n            <Trans\n              message=\"[one 1 followers|other :count followers]\"\n              values={{count: follower.followers_count}}\n            />\n          </div>\n        ) : null}\n      </div>\n      <FollowButton\n        variant=\"outline\"\n        size=\"xs\"\n        className=\"ml-auto\"\n        user={follower}\n      />\n    </div>\n  );\n}\n","import {Trans} from '@ui/i18n/trans';\nimport React, {Fragment} from 'react';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {BookmarkBorderIcon} from '@ui/icons/material/BookmarkBorder';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {useUserProfile} from '@app/profile/requests/use-user-profile';\nimport {useProfileFollowers} from '@app/profile/requests/use-profile-followers';\nimport {FollowerListItem} from '@app/profile/follower-list-item';\nimport {PageStatus} from '@common/http/page-status';\n\nexport function ProfileFollowersPanel() {\n  const userQuery = useUserProfile();\n  const user = userQuery.data!.user;\n  const followersQuery = useProfileFollowers();\n\n  if (followersQuery.noResults) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<BookmarkBorderIcon className=\"text-muted\" />}\n        size=\"sm\"\n        title={<Trans message=\"No followers yet\" />}\n        description={\n          <Trans\n            message=\"Be the first to follow :name.\"\n            values={{name: user.name}}\n          />\n        }\n      />\n    );\n  }\n\n  if (followersQuery.data) {\n    return (\n      <Fragment>\n        {followersQuery.items.map(follower => (\n          <FollowerListItem key={follower.id} follower={follower} />\n        ))}\n        <InfiniteScrollSentinel query={followersQuery} />\n      </Fragment>\n    );\n  }\n\n  return <PageStatus query={followersQuery} />;\n}\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\nimport {useParams} from 'react-router';\nimport {User} from '@ui/types/user';\n\nexport function useProfileFollowedUsers() {\n  const {userId = 'me'} = useParams();\n  return useInfiniteData<User>({\n    endpoint: `users/${userId}/followed-users`,\n    queryKey: ['users', 'profile-page-followed-users', userId],\n    paginate: 'simple',\n  });\n}\n","import {Trans} from '@ui/i18n/trans';\nimport React, {Fragment} from 'react';\nimport {IllustratedMessage} from '@ui/images/illustrated-message';\nimport {BookmarkBorderIcon} from '@ui/icons/material/BookmarkBorder';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {useUserProfile} from '@app/profile/requests/use-user-profile';\nimport {FollowerListItem} from '@app/profile/follower-list-item';\nimport {useProfileFollowedUsers} from '@app/profile/requests/use-profile-followed-users';\nimport {PageStatus} from '@common/http/page-status';\n\nexport function ProfileFollowedUsersPanel() {\n  const userQuery = useUserProfile();\n  const user = userQuery.data!.user;\n  const followedUsersQuery = useProfileFollowedUsers();\n\n  if (followedUsersQuery.noResults) {\n    return (\n      <IllustratedMessage\n        imageHeight=\"h-auto\"\n        imageMargin=\"mb-14\"\n        image={<BookmarkBorderIcon className=\"text-muted\" />}\n        size=\"sm\"\n        title={<Trans message=\"Not following anyone yet\" />}\n        description={\n          <Trans\n            message=\"Check back later to see users :user is following.\"\n            values={{user: user.name}}\n          />\n        }\n      />\n    );\n  }\n\n  if (followedUsersQuery.data) {\n    return (\n      <Fragment>\n        {followedUsersQuery.items.map(followedUser => (\n          <FollowerListItem key={followedUser.id} follower={followedUser} />\n        ))}\n        <InfiniteScrollSentinel query={followedUsersQuery} />\n      </Fragment>\n    );\n  }\n\n  return <PageStatus query={followedUsersQuery} />;\n}\n","import {ReactElement} from 'react';\nimport {GuestRoute} from '../../auth/guards/guest-route';\nimport {RegisterPage} from '../../auth/ui/register-page';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {CustomPageLayout} from '@common/custom-page/custom-page-layout';\nimport {LoginPageWrapper} from '@common/auth/ui/login-page-wrapper';\n\ninterface DynamicHomepageProps {\n  homepageResolver?: (type?: string) => ReactElement;\n}\nexport function DynamicHomepage({homepageResolver}: DynamicHomepageProps) {\n  const {homepage} = useSettings();\n\n  if (homepage?.type === 'loginPage') {\n    return (\n      <GuestRoute>\n        <LoginPageWrapper />\n      </GuestRoute>\n    );\n  }\n\n  if (homepage?.type === 'registerPage') {\n    return (\n      <GuestRoute>\n        <RegisterPage />\n      </GuestRoute>\n    );\n  }\n\n  if (homepage?.type === 'customPage') {\n    return <CustomPageLayout slug={homepage.value} />;\n  }\n\n  return homepageResolver?.(homepage?.type) || null;\n}\n","import {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\nimport {Trans} from '@ui/i18n/trans';\nimport React from 'react';\nimport {Title} from '@app/titles/models/title';\nimport {useImageSrc} from '@app/images/use-image-src';\nimport {message} from '@ui/i18n/message';\nimport {useTrans} from '@ui/i18n/use-trans';\nimport clsx from 'clsx';\nimport {MovieIcon} from '@ui/icons/material/Movie';\n\nexport function LandingPageTrendingTitles() {\n  const titles = getBootstrapData().loaders?.landingPage?.trendingTitles;\n  if (!titles?.length) {\n    return null;\n  }\n\n  return (\n    <div className=\"landing-container mb-48 md:mb-80\">\n      <div className=\"mb-48 mt-14 h-1 bg-divider md:mb-80\" />\n      <h2 className=\"mb-34 text-center text-4xl\">\n        <Trans message=\"See what's currently trending.\" />\n      </h2>\n      <div className=\"grid grid-cols-3 gap-24\">\n        {titles.map(title => (\n          <TitleItem key={title.id} title={title} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\ninterface TitleItemProps {\n  title: Title;\n}\nfunction TitleItem({title}: TitleItemProps) {\n  const src = useImageSrc(title?.backdrop, {size: 'lg'});\n  const {trans} = useTrans();\n\n  const imageClassName = clsx(\n    'h-full w-full rounded bg-fg-base/4 object-cover',\n    !src ? 'flex items-center justify-center' : 'block',\n  );\n\n  const image = src ? (\n    <img\n      className={imageClassName}\n      draggable={false}\n      loading=\"lazy\"\n      src={src}\n      alt={trans(message('Poster for :name', {values: {name: title.name}}))}\n    />\n  ) : (\n    <span className={imageClassName}>\n      <MovieIcon className=\"max-w-[60%] text-divider\" size=\"text-6xl\" />\n    </span>\n  );\n\n  return (\n    <div>\n      <div className=\"relative\">{image}</div>\n      <div className=\"mt-10 text-center text-base font-medium\">\n        {title.name}\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport {LandingPageContent} from './landing-page-content';\nimport {Button, ButtonProps} from '@ui/buttons/button';\nimport {Footer} from '@common/ui/footer/footer';\nimport {Trans} from '@ui/i18n/trans';\nimport {Link} from 'react-router';\nimport {createSvgIconFromTree} from '@ui/icons/create-svg-icon';\nimport {MenuItemConfig} from '@common/menus/menu-config';\nimport React, {Fragment, useState} from 'react';\nimport {DefaultMetaTags} from '@common/seo/default-meta-tags';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {PricingTable} from '@common/billing/pricing-table/pricing-table';\nimport {BillingCycleRadio} from '@common/billing/pricing-table/billing-cycle-radio';\nimport {UpsellBillingCycle} from '@common/billing/pricing-table/find-best-price';\nimport {useProducts} from '@common/billing/pricing-table/use-products';\nimport {LandingPageTrendingTitles} from '@app/landing-page/landing-page-trending-titles';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {MixedImage} from '@ui/images/mixed-image';\n\ninterface ContentProps {\n  content: LandingPageContent;\n}\nexport function LandingPage() {\n  const settings = useSettings();\n  const appearance = settings.homepage?.appearance;\n  const showPricing = settings.homepage?.pricing && settings.billing.enable;\n  const showTrending = settings.homepage?.trending;\n\n  if (!appearance) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <DefaultMetaTags />\n      <HeroHeader content={appearance} />\n      <PrimaryFeatures content={appearance} />\n      <SecondaryFeatures content={appearance} />\n      {showTrending && <LandingPageTrendingTitles />}\n      <BottomCta content={appearance} />\n      {showPricing && <PricingSection content={appearance} />}\n      <Footer className=\"landing-container\" />\n    </Fragment>\n  );\n}\n\nfunction HeroHeader({content}: ContentProps) {\n  const {\n    headerTitle,\n    headerSubtitle,\n    headerImage,\n    headerImageOpacity,\n    actions,\n    headerOverlayColor1,\n    headerOverlayColor2,\n    blurHeaderImage,\n  } = content;\n  let overlayBackground = undefined;\n\n  if (headerOverlayColor1 && headerOverlayColor2) {\n    overlayBackground = `linear-gradient(45deg, ${headerOverlayColor1} 0%, ${headerOverlayColor2} 100%)`;\n  } else if (headerOverlayColor1) {\n    overlayBackground = headerOverlayColor1;\n  } else if (headerOverlayColor2) {\n    overlayBackground = headerOverlayColor2;\n  }\n\n  return (\n    <header className=\"relative isolate mb-14 overflow-hidden md:mb-60\">\n      <img\n        src={headerImage}\n        style={{\n          opacity: headerImageOpacity,\n        }}\n        alt=\"\"\n        width=\"2347\"\n        height=\"1244\"\n        decoding=\"async\"\n        loading=\"lazy\"\n        className={clsx(\n          'absolute left-1/2 top-1/2 z-20 max-w-none -translate-x-1/2 -translate-y-1/2',\n          blurHeaderImage && 'blur-sm',\n        )}\n      />\n      {overlayBackground && (\n        <div\n          className=\"absolute z-10 h-full w-full bg-alt\"\n          style={{background: overlayBackground}}\n        />\n      )}\n      <div className=\"gradient absolute inset-0 z-30 m-auto\"></div>\n      <div className=\"relative z-30 flex h-full flex-col\">\n        <Navbar\n          color=\"transparent\"\n          darkModeColor=\"transparent\"\n          className=\"flex-shrink-0\"\n          menuPosition=\"landing-page-navbar\"\n          primaryButtonColor=\"white\"\n        />\n        <div className=\"mx-auto flex max-w-850 flex-auto flex-col items-center justify-center px-14 py-50 text-center text-white lg:py-140\">\n          {headerTitle && (\n            <h1\n              className=\"text-3xl font-normal md:text-5xl\"\n              data-testid=\"headerTitle\"\n            >\n              <Trans message={headerTitle} />\n            </h1>\n          )}\n          {headerSubtitle && (\n            <div\n              className=\"max-auto mt-24 max-w-640 text-lg tracking-tight md:text-xl\"\n              data-testid=\"headerSubtitle\"\n            >\n              <Trans message={headerSubtitle} />\n            </div>\n          )}\n          <div className=\"flex min-h-50 gap-20 pb-30 pt-40 empty:min-h-0 md:pb-50 md:pt-60\">\n            <CtaButton\n              item={actions.cta1}\n              variant=\"raised\"\n              color=\"white\"\n              size=\"lg\"\n              radius=\"rounded-full\"\n              className=\"min-w-180\"\n            />\n            <CtaButton\n              item={actions.cta2}\n              variant=\"text\"\n              color=\"paper\"\n              size=\"lg\"\n              radius=\"rounded-full\"\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"absolute bottom-0 z-20 h-[6vw] w-full translate-y-1/2 -skew-y-3 transform bg\"></div>\n    </header>\n  );\n}\n\ninterface CtaButtonProps extends ButtonProps {\n  item?: MenuItemConfig;\n}\nfunction CtaButton({item, ...buttonProps}: CtaButtonProps) {\n  if (!item?.label || !item?.action) return null;\n  const Icon = item.icon ? createSvgIconFromTree(item.icon) : undefined;\n  return (\n    <Button\n      elementType={item.type === 'route' ? Link : 'a'}\n      href={item.action}\n      to={item.action}\n      startIcon={Icon ? <Icon /> : undefined}\n      {...buttonProps}\n    >\n      <Trans message={item.label} />\n    </Button>\n  );\n}\n\nfunction PrimaryFeatures({content}: ContentProps) {\n  if (!content.primaryFeatures?.length) {\n    return null;\n  }\n  return (\n    <Fragment>\n      <div\n        className=\"landing-container z-20 items-stretch gap-26 md:flex\"\n        id=\"primary-features\"\n      >\n        {content.primaryFeatures.map((feature, index) => (\n          <div\n            key={index}\n            className=\"mb-14 flex-1 rounded-2xl px-24 py-36 text-center shadow-[0_10px_30px_rgba(0,0,0,0.08)] dark:bg-alt md:mb-0\"\n            data-testid={`primary-root-${index}`}\n          >\n            <MixedImage\n              className=\"mx-auto mb-30 h-128\"\n              data-testid={`primary-image-${index}`}\n              src={feature.image}\n            />\n            <h2\n              className=\"my-16 text-lg font-medium\"\n              data-testid={`primary-title-${index}`}\n            >\n              <Trans message={feature.title} />\n            </h2>\n            <div\n              className=\"text-md text-[0.938rem]\"\n              data-testid={`primary-subtitle-${index}`}\n            >\n              <Trans message={feature.subtitle} />\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"mt-100 h-1 bg-divider\" />\n    </Fragment>\n  );\n}\n\nfunction SecondaryFeatures({content}: ContentProps) {\n  return (\n    <div\n      className={clsx(\n        'relative overflow-hidden',\n        content.primaryFeatures?.length && 'pt-100',\n      )}\n    >\n      <div className=\"landing-container relative\" id=\"features\">\n        {content.secondaryFeatures.map((feature, index) => {\n          const isEven = index % 2 === 0;\n          return (\n            <div\n              key={index}\n              data-testid={`secondary-root-${index}`}\n              className={clsx(\n                'relative z-20 mb-14 py-16 md:mb-80 md:flex',\n                isEven && 'flex-row-reverse',\n              )}\n            >\n              <img\n                src={feature.image}\n                className=\"mr-auto aspect-[600/382] w-580 max-w-full rounded-lg shadow-lg dark:border\"\n                alt=\"\"\n              />\n              <div className=\"ml-30 mr-auto max-w-350 pt-30\">\n                <small\n                  className=\"mb-16 text-xs font-medium uppercase tracking-widest text-muted\"\n                  data-testid={`secondary-subtitle-${index}`}\n                >\n                  <Trans message={feature.subtitle} />\n                </small>\n                <h3\n                  className=\"py-16 text-3xl\"\n                  data-testid={`secondary-title-${index}`}\n                >\n                  <Trans message={feature.title} />\n                </h3>\n                <div className=\"h-2 w-50 bg-black/90 dark:bg-divider\" />\n                <div\n                  className=\"my-20 text-[0.938rem]\"\n                  data-testid={`secondary-description-${index}`}\n                >\n                  <Trans message={feature.description} />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\ninterface PricingSectionProps {\n  content: LandingPageContent;\n}\nfunction PricingSection({content}: PricingSectionProps) {\n  const query = useProducts('landingPage');\n  const [selectedCycle, setSelectedCycle] =\n    useState<UpsellBillingCycle>('yearly');\n\n  return (\n    <div className=\"py-80 sm:py-128\" id=\"pricing\">\n      <div className=\"mx-auto max-w-1280 px-24 lg:px-32\">\n        <div className=\"text-center\">\n          {content.pricingTitle && (\n            <h2\n              className=\"font-display text-3xl tracking-tight sm:text-4xl\"\n              data-testid=\"pricingTitle\"\n            >\n              <Trans message={content.pricingTitle} />\n            </h2>\n          )}\n          {content.pricingSubtitle && (\n            <p\n              className=\"mt-16 text-lg text-muted\"\n              data-testid=\"pricingSubtitle\"\n            >\n              <Trans message={content.pricingSubtitle} />\n            </p>\n          )}\n        </div>\n        <BillingCycleRadio\n          products={query.data?.products}\n          selectedCycle={selectedCycle}\n          onChange={setSelectedCycle}\n          className=\"my-50 flex justify-center\"\n          size=\"lg\"\n        />\n        <PricingTable\n          selectedCycle={selectedCycle}\n          productLoader=\"landingPage\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction BottomCta({\n  content: {footerSubtitle, footerImage, footerTitle, actions},\n}: ContentProps) {\n  if (!footerTitle && !footerSubtitle) {\n    return null;\n  }\n\n  return (\n    <div\n      className=\"relative overflow-hidden bg-black py-90 text-white before:pointer-events-none before:absolute before:inset-0 before:z-10 before:bg-gradient-to-r before:from-black before:to-transparent md:py-128\"\n      data-testid=\"footerImage\"\n    >\n      {footerImage && (\n        <img\n          draggable={false}\n          src={footerImage}\n          alt=\"\"\n          width=\"2347\"\n          height=\"1244\"\n          decoding=\"async\"\n          loading=\"lazy\"\n          className=\"absolute left-1/2 top-1/2 max-w-none -translate-x-1/2 -translate-y-1/2 blur-sm\"\n        />\n      )}\n      <div className=\"relative z-20 mx-auto max-w-1280 px-24 text-center sm:px-16 lg:px-32\">\n        <div className=\"mx-auto max-w-512 text-center\">\n          {footerTitle && (\n            <h2\n              className=\" font-display text-3xl tracking-tight sm:text-4xl\"\n              data-testid=\"footerTitle\"\n            >\n              <Trans message={footerTitle} />\n            </h2>\n          )}\n          {footerSubtitle && (\n            <p\n              className=\"mt-16 text-lg tracking-tight\"\n              data-testid=\"footerSubtitle\"\n            >\n              <Trans message={footerSubtitle} />\n            </p>\n          )}\n          <CtaButton\n            item={actions.cta3}\n            size=\"lg\"\n            radius=\"rounded-full\"\n            variant=\"flat\"\n            color=\"white\"\n            className=\"mt-40 block\"\n            data-testid=\"cta3\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {DynamicHomepage} from '@common/ui/other/dynamic-homepage';\nimport {LandingPage} from '@app/landing-page/landing-page';\nimport React from 'react';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {HomepageChannelPage} from '@app/channels/homepage-channel-page';\nimport {useAuth} from '@common/auth/use-auth';\n\nexport function Homepage() {\n  const {homepage} = useSettings();\n  const {user} = useAuth();\n\n  // if user is logged in or homepage is a channel, show the channel page\n  if (\n    homepage?.type?.startsWith('channel') ||\n    (homepage?.type?.startsWith('landing') && user)\n  ) {\n    return <HomepageChannelPage />;\n  }\n\n  return <DynamicHomepage homepageResolver={() => <LandingPage />} />;\n}\n"],"names":["SiteSectionHeading","children","titleAppend","link","fontSize","fontWeight","margin","className","HeadingType","description","descriptionFontSize","actions","hideBorder","wrap","title","jsx","Link","clsx","jsxs","IconButton","KeyboardArrowRightIcon","useInfiniteChannelContent","channel","queryParams","useChannelQueryParams","useInfiniteData","channelQueryKey","channelEndpoint","ChannelSortButton","config","channelContentConfig","sortMethods","method","Sort","message","searchParams","setSearchParams","useSearchParams","selectedValue","label","_a","MenuTrigger","newValue","prev","SortIcon","Button","Trans","Menu","MenuItem","useChannelLayouts","availableLayouts","m","selectedLayout","setSelectedLayout","useCookie","ChannelLayoutButton","layoutConfig","GridViewIcon","UserListByline","user","auth","useContext","SiteConfigContext","UserAvatar","CopyLinkIcon","createSvgIcon","shareLinkSocially","network","name","image","url","generateShareUrl","openNewWindow","left","top","opts","type","ShareMenuTrigger","trans","useTrans","setUrlCopied","useClipboard","Item","toast","FacebookIcon","TwitterIcon","UserListLink","list","linkProps","useAuth","useMemo","getUserListLink","content","BaseMediaLink","absolute","getBaseMediaLink","UserListDetails","showShareButton","showVisibility","showEditButton","Fragment","ShareButton","Divider","FormattedRelativeTime","LockOpenIcon","LockIcon","ShareIcon","marginLeft","FilterModelTypes","TITLE_MODEL","MOVIE_MODEL","SERIES_MODEL","ChannelHeader","isNested","shouldShowFilterButton","encodedFilters","useBackendFilterUrlParams","filters","filtersLoading","useTitleIndexFilters","ChannelTitle","AddFilterButton","TuneIcon","AnimatePresence","FilterListSkeleton","opacityAnimation","FilterList","urlParam","useParams","ChannelDescription","ContentGridLayout","variant","gridCols","PersonAge","memo","person","showRange","FormattedDateTimeRange","calculateAgeFromBirthDate","_birthDate","_deathDate","until","birthDate","age","NewsArticleGridItem","article","NewsArticleImage","NewsArticleLink","BulletSeparatedItems","FormattedDate","TitlePortraitGridItem","item","rating","TitlePoster","RatingOrReleaseDate","TitleLink","TitleLandscapeGridItem","TitleBackdrop","TitleRating","ChannelContentGridItem","PERSON_MODEL","PersonGridItem","NEWS_ARTICLE_MODEL","PersonPoster","PersonLink","ChannelContentGrid","props","isInfiniteScroll","InfiniteScrollGrid","PaginatedGrid","query","ContentGrid","InfiniteScrollSentinel","useChannelContent","PaginationControls","SearchPage","searchTerm","useSearchResults","PageMetaTags","SitePageLayout","MobileSearchBar","PageContent","searchQuery","navigate","useNavigate","TextField","e","branding","useSettings","IllustratedMessage","SearchIcon","SearchResults","PageStatus","movies","series","people","result","functionDebounce","debounce","fn","wait","callFirst","timeout","debouncedFn","clear","flush","call","debounceWrapper","context","args","callNow","containerClassName","itemClassName","useCarousel","rotate","scrollContainerRef","useRef","itemWidth","perPage","canScrollBackward","setCanScrollBackward","useState","canScrollForward","setCanScrollForward","activePage","setActivePage","updateNavStatus","useCallback","el","pageWidth","useEffect","handleScroll","useLayoutEffect","firstGridItem","observer","entries","scrollToIndex","index","amount","scrollToPreviousPage","currentScroll","scrollLeft","scrollToNextPage","ChannelContentCarousel","gridClassName","KeyboardArrowLeftIcon","ChannelContentSlider","pagination","Slide","ChevronLeftIcon","ChevronRightIcon","UpNext","MediaPlayIcon","getWatchLink","titles","itemCount","start","end","items","NewsArticleSourceLink","OpenInNewIcon","LinkStyle","NewsArticleByline","ChannelContentNews","LeftColArticle","_b","ChannelContentListItem","FormattedDuration","InteractableRating","KnownForCompact","ChannelContentList","InfiniteScrollList","PaginatedList","Content","ChannelContent","CHANNEL_MODEL","NestedChannels","ChannelLayout","NoResultsMessage","SvgImage","todoImage","nestedChannel","ChannelPage","slugOrId","useChannel","ListChannelPage","HomepageChannelPage","homepage","useWatchPageVideo","videoId","useQuery","fetchVideo","keepPreviousData","data","getBootstrapData","apiClient","response","commentsQueryKey","commentable","params","useComments","useCreateComment","queryClient","useQueryClient","useMutation","createComment","err","showHttpErrorToast","inReplyTo","other","payload","r","NewCommentForm","onSuccess","autoFocus","isMobile","useIsMobileMediaQuery","inputRef","useObjectRef","inputIsExpanded","setInputIsExpanded","inputValue","setInputValue","clearInput","Avatar","useStoreVote","model","changeVote","ThumbButtons","showUpvotesOnly","upvotes","setUpvotes","downvotes","setDownvotes","currentVote","setCurrentVote","syncLocalState","ThumbUpIcon","FormattedNumber","ThumbDownIcon","useSubmitReport","submitReport","CommentListItem","comment","canDelete","hasPermission","replyFormVisible","setReplyFormVisible","showReplyButton","UserDisplayName","Position","ReplyIcon","CommentOptionsTrigger","position","seconds","deleteComments","useDeleteComments","reportComment","isDeleteDialogOpen","setIsDeleteDialogOpen","showDeleteButton","handleReport","handleDelete","isConfirmed","MoreVertIcon","DialogTrigger","ConfirmationDialog","AccountRequiredCard","parts","accountRequiredMessage","CommentList","canDeleteAllComments","totalItems","CommentIcon","CommentSkeletons","CommentListItems","comments","count","Skeleton","useDeleteReport","deleteReport","reportable","useIsStreamingMode","streaming","WatchPageTitleDetails","isStreamingMode","Layout","EpisodeLink","CompactSeasonEpisode","ReportButton","video","Tooltip","report","isReported","setIsReported","FlagIcon","poster","titleLink","videoName","episodeName","rate","WatchPageAside","RelatedVideo","VideoGridItemSkeleton","Header","activeVideo","VideoGridItem","WatchPageAlternativeVideos","episode","showEpisodeSelector","VideoDropdown","VideoList","Skeletons","EpisodeSelector","MediaEpisodesIcon","videos","QualityBadge","WatchPage","darkThemeVars","useDarkThemeVariables","useScrollToTop","MainNavbar","Footer","isLoggedIn","isLoading","shouldShowComments","VideoWrapper","AdHost","PageErrorMessage","isVisible","setIsVisible","SiteVideoPlayer","UpgradeMessage","VideoPlayerSkeleton","VideoThumbnail","TitlePageImageGrid","images","heading","srcSize","ButtonBase","ImageItem","ImageZoomDialog","img","src","useImageSrc","TitleCreditsGrid","credits","credit","Description","TitlePageCast","cast","ArrowForwardIcon","useRelatedTitles","titleId","fetchRelatedTitles","RelatedTitlesPanel","RelatedTitlesCarousel","TitlePageSeasonGrid","seasons","useTitleSeasons","season","SeasonPoster","SeasonLink","CompactCredits","PeopleDetail","creator","director","_c","writer","_d","actor","getGenreLink","genre","useTitleNews","fetchNews","TitleNews","NewReviewForm","forwardRef","reviewable","currentReview","disabled","ref","isExpanded","setIsExpanded","form","useForm","openReviewPanel","useImperativeHandle","createReview","useCreateReview","Form","newValues","StarSelector","newScore","FormTextField","useSubmitReviewFeedback","review","submitFeedback","ReviewListItem","isShared","hideShareButton","avatar","scrolled","defaultAvatar","Feedback","ReviewOptionsTrigger","base_url","location","useLocation","copyLink","authHandler","useAuthClickCapture","isDisabled","helpfulCount","setHelpfulCount","total","setTotal","initialFeedback","currentFeedback","setCurrentFeedback","deleteReview","useDeleteReviews","sharedClassName","ReviewList","noResultsMessage","showAccountRequiredMessage","useReviews","actionsRef","currentUserReview","sharedReview","ReviewListSkeletons","ReviewListItems","reviews","TitlePageReviewList","sort","setSort","useLocalStorage","ReviewListSortButton","TitlePageVideoGrid","getEpisodeLink","getTitleLink","VideoGrid","TitlePageEpisodeGrid","showSeasonSelector","selectedSeason","setSelectedSeason","useSeasonEpisodes","isInitialLoading","sortDescriptor","setSortDescriptor","SeasonSelector","SortButton","value","orderBy","orderDir","SkeletonGrid","EpisodeGrid","GridItem","runtime","EpisodePoster","episodes","number","onSeasonChange","seasonCount","ExpandMoreIcon","seasonNumber","SortOptions","onValueChange","selectedOption","option","escapeText","text","escapeAttr","href","attributesToString","attributes","attr","val","defaultRender","_ref","tagName","linkifyStr","str","Options","tokens","tokenize","token","options","useLinkifiedString","TruncatedDescription","linkifiedDescription","wrapperRef","contentRef","isOverflowing","setIsOverflowing","isShowingAll","setIsShowingAll","wrapperHeight","TitlePageMainContent","title_page","ChipList","Chip","TitlePageSection","TitlePageHeaderLayout","right","useCurrentUserWatchlist","fetchWatchlist","useIsItemWatchlisted","useAddToWatchlist","addToWatchlist","listId","useRemoveFromWatchlist","removeFromWatchlist","WatchlistButton","color","size","isWatchlisted","CheckIcon","AddIcon","TitlePageHeader","showPoster","TitlePageHeaderImage","watchItem","backdrop","PlayButton","TitlePageAsideLayout","DetailItem","KeywordLink","keyword","otherProps","getKeywordLink","ProductionCountryLink","country","WatchNowButton","defaultLabel","TitlePageAside","language","EditIcon","FormattedCurrency","TitlePage","useTitle","TitleVideosPage","TitleImagesPage","TitleFullCreditsPage","groupedCredits","department","SeasonPage","useSeason","SeasonList","EpisodeList","isActive","EpisodeListItem","EpisodePageHeader","Breadcrumb","BreadcrumbItem","getSeasonLink","EpisodePage","useEpisode","Aside","MainContent","EpisodePageSection","EpisodeVideosPage","EpisodeFullCreditsPage","PersonPageAside","total_credits_count","getPersonLink","useFullPersonCreditsForTitle","fetchCredits","personId","CharacterOrJob","PersonPageCredits","Accordion","AccordionItem","isLast","loadMoreEpisodes","setLoadMoreEpisodes","allEpisodesLoaded","isLoadingMore","shouldShowLoadMoreBtn","episodeCredits","episodeCredit","PersonPage","usePerson","knownFor","Biography","KnowForList","NewsArticlePage","useNewsArticle","related","OtherNews","articles","useDeleteList","deleteList","UserListIndexItem","authUser","canEdit","ItemsPreview","DeleteListDialog","close","useDialogContext","useProfileLists","userId","UserListsIndexPage","StaticPageTitle","userProfileQueryKey","useUserProfile","fetchProfile","ProfileDescription","profile","useFollowedUsers","fetchIds","useIsUserFollowing","useFollowUser","followUser","useUnfollowUser","unfollowUser","FollowButton","minWidth","buttonProps","currentUser","isFollowing","mergedClassName","ProfileLinksForm","fields","append","remove","useFieldArray","field","CloseIcon","useUpdateUserProfile","updateProfile","onFormQueryError","EditUserProfileDialog","formId","useValueLists","Dialog","DialogHeader","DialogBody","values","FileUploadProvider","FormImageSelector","FormSelect","Option","DialogFooter","ProfileStatsList","getUserProfileLink","profileLink","StatsItems","StatsItem","Children","child","RemoteFavicon","alt","getFaviconSrc","memoize","isAbsoluteUrl","ProfileLinks","links","ProfilePageHeader","EditButton","PageTabs","UserProfilePage","ProfileTabs","pathname","tabName","selectedTab","tab","Tabs","TabList","Tab","Outlet","ProfileListsPanel","listsQuery","ListAltIcon","useProfileRatings","EpisodePortraitGridItem","TitleLinkWithEpisodeNumber","ProfileRatingsPanel","ratingsQuery","StarIcon","useProfileReviews","ProfileReviewsPanel","reviewsQuery","RateReviewIcon","totalVotes","useProfileComments","ProfileCommentsPanel","commentsQuery","useProfileFollowers","FollowerListItem","follower","UserProfileLink","ProfileFollowersPanel","followersQuery","BookmarkBorderIcon","useProfileFollowedUsers","ProfileFollowedUsersPanel","followedUsersQuery","followedUser","DynamicHomepage","homepageResolver","GuestRoute","LoginPageWrapper","RegisterPage","CustomPageLayout","LandingPageTrendingTitles","TitleItem","imageClassName","MovieIcon","LandingPage","settings","appearance","showPricing","showTrending","DefaultMetaTags","HeroHeader","PrimaryFeatures","SecondaryFeatures","BottomCta","PricingSection","headerTitle","headerSubtitle","headerImage","headerImageOpacity","headerOverlayColor1","headerOverlayColor2","blurHeaderImage","overlayBackground","Navbar","CtaButton","Icon","createSvgIconFromTree","feature","MixedImage","isEven","useProducts","selectedCycle","setSelectedCycle","BillingCycleRadio","PricingTable","footerSubtitle","footerImage","footerTitle","Homepage"],"mappings":"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","x_google_ignoreList":[19,64]}