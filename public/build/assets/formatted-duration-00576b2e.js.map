{"version":3,"file":"formatted-duration-00576b2e.js","sources":["../../../node_modules/@react-stately/utils/dist/number.mjs","../../../node_modules/@internationalized/number/dist/NumberParser.mjs","../../../common/foundation/resources/client/ui/library/icons/material/KeyboardArrowRight.tsx","../../../common/foundation/resources/client/ui/library/utils/date/start-of-day.ts","../../../common/foundation/resources/client/ui/library/utils/date/end-of-day.ts","../../../common/foundation/resources/client/ui/library/i18n/get-user-timezone.ts","../../../common/foundation/resources/client/ui/library/i18n/use-current-date-time.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-presets.ts","../../../common/foundation/resources/client/ui/library/icons/material/DateRange.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/input.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/date-picker-field.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/utils.ts","../../../common/foundation/resources/client/ui/library/i18n/to-safe-zoned.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/use-base-date-picker-state.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/use-date-range-picker-state.ts","../../../common/foundation/resources/client/ui/library/icons/material/ArrowRightAlt.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/utils/adjust-segment.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/utils/set-segment.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/utils/page-step.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/editable-date-segment.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/literal-segment.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/utils/get-segment-limits.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/segments/date-segment-list.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/calendar/calendar-cell.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/calendar/calendar-month.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/calendar/calendar.tsx","../../../common/foundation/resources/client/ui/library/i18n/formatted-date-time-range.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-preset-list.tsx","../../../common/foundation/resources/client/ui/library/utils/hooks/is-tablet-media-query.ts","../../../common/foundation/resources/client/ui/library/forms/toggle/switch.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets.ts","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list.tsx","../../../common/foundation/resources/client/ui/library/forms/input-field/date/date-range-picker/dialog/date-range-dialog.tsx","../../../common/foundation/resources/client/ui/library/i18n/formatted-number.tsx","../../../common/foundation/resources/client/ui/library/icons/material/ArrowBack.tsx","../../../common/foundation/resources/client/ui/library/i18n/formatted-duration.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /**\n * Takes a value and forces it to the closest min/max if it's outside. Also forces it to the closest valid step.\n */ function $9446cca9a3875146$export$7d15b64cf5a3a4c4(value, min = -Infinity, max = Infinity) {\n    let newValue = Math.min(Math.max(value, min), max);\n    return newValue;\n}\nfunction $9446cca9a3875146$export$e1a7b8e69ef6c52f(value, step) {\n    let roundedValue = value;\n    let stepString = step.toString();\n    let pointIndex = stepString.indexOf('.');\n    let precision = pointIndex >= 0 ? stepString.length - pointIndex : 0;\n    if (precision > 0) {\n        let pow = Math.pow(10, precision);\n        roundedValue = Math.round(roundedValue * pow) / pow;\n    }\n    return roundedValue;\n}\nfunction $9446cca9a3875146$export$cb6e0bb50bc19463(value, min, max, step) {\n    min = Number(min);\n    max = Number(max);\n    let remainder = (value - (isNaN(min) ? 0 : min)) % step;\n    let snappedValue = $9446cca9a3875146$export$e1a7b8e69ef6c52f(Math.abs(remainder) * 2 >= step ? value + Math.sign(remainder) * (step - Math.abs(remainder)) : value - remainder, step);\n    if (!isNaN(min)) {\n        if (snappedValue < min) snappedValue = min;\n        else if (!isNaN(max) && snappedValue > max) snappedValue = min + Math.floor($9446cca9a3875146$export$e1a7b8e69ef6c52f((max - min) / step, step)) * step;\n    } else if (!isNaN(max) && snappedValue > max) snappedValue = Math.floor($9446cca9a3875146$export$e1a7b8e69ef6c52f(max / step, step)) * step;\n    // correct floating point behavior by rounding to step precision\n    snappedValue = $9446cca9a3875146$export$e1a7b8e69ef6c52f(snappedValue, step);\n    return snappedValue;\n}\nfunction $9446cca9a3875146$export$b6268554fba451f(value, digits, base = 10) {\n    const pow = Math.pow(base, digits);\n    return Math.round(value * pow) / pow;\n}\n\n\nexport {$9446cca9a3875146$export$7d15b64cf5a3a4c4 as clamp, $9446cca9a3875146$export$e1a7b8e69ef6c52f as roundToStepPrecision, $9446cca9a3875146$export$cb6e0bb50bc19463 as snapValueToStep, $9446cca9a3875146$export$b6268554fba451f as toFixedNumber};\n//# sourceMappingURL=number.module.js.map\n","import {NumberFormatter as $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5} from \"./NumberFormatter.mjs\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \nconst $6c7bd7858deea686$var$CURRENCY_SIGN_REGEX = new RegExp('^.*\\\\(.*\\\\).*$');\nconst $6c7bd7858deea686$var$NUMBERING_SYSTEMS = [\n    'latn',\n    'arab',\n    'hanidec'\n];\nclass $6c7bd7858deea686$export$cd11ab140839f11d {\n    /**\n   * Parses the given string to a number. Returns NaN if a valid number could not be parsed.\n   */ parse(value) {\n        return $6c7bd7858deea686$var$getNumberParserImpl(this.locale, this.options, value).parse(value);\n    }\n    /**\n   * Returns whether the given string could potentially be a valid number. This should be used to\n   * validate user input as the user types. If a `minValue` or `maxValue` is provided, the validity\n   * of the minus/plus sign characters can be checked.\n   */ isValidPartialNumber(value, minValue, maxValue) {\n        return $6c7bd7858deea686$var$getNumberParserImpl(this.locale, this.options, value).isValidPartialNumber(value, minValue, maxValue);\n    }\n    /**\n   * Returns a numbering system for which the given string is valid in the current locale.\n   * If no numbering system could be detected, the default numbering system for the current\n   * locale is returned.\n   */ getNumberingSystem(value) {\n        return $6c7bd7858deea686$var$getNumberParserImpl(this.locale, this.options, value).options.numberingSystem;\n    }\n    constructor(locale, options = {}){\n        this.locale = locale;\n        this.options = options;\n    }\n}\nconst $6c7bd7858deea686$var$numberParserCache = new Map();\nfunction $6c7bd7858deea686$var$getNumberParserImpl(locale, options, value) {\n    // First try the default numbering system for the provided locale\n    let defaultParser = $6c7bd7858deea686$var$getCachedNumberParser(locale, options);\n    // If that doesn't match, and the locale doesn't include a hard coded numbering system,\n    // try each of the other supported numbering systems until we find one that matches.\n    if (!locale.includes('-nu-') && !defaultParser.isValidPartialNumber(value)) {\n        for (let numberingSystem of $6c7bd7858deea686$var$NUMBERING_SYSTEMS)if (numberingSystem !== defaultParser.options.numberingSystem) {\n            let parser = $6c7bd7858deea686$var$getCachedNumberParser(locale + (locale.includes('-u-') ? '-nu-' : '-u-nu-') + numberingSystem, options);\n            if (parser.isValidPartialNumber(value)) return parser;\n        }\n    }\n    return defaultParser;\n}\nfunction $6c7bd7858deea686$var$getCachedNumberParser(locale, options) {\n    let cacheKey = locale + (options ? Object.entries(options).sort((a, b)=>a[0] < b[0] ? -1 : 1).join() : '');\n    let parser = $6c7bd7858deea686$var$numberParserCache.get(cacheKey);\n    if (!parser) {\n        parser = new $6c7bd7858deea686$var$NumberParserImpl(locale, options);\n        $6c7bd7858deea686$var$numberParserCache.set(cacheKey, parser);\n    }\n    return parser;\n}\n// The actual number parser implementation. Instances of this class are cached\n// based on the locale, options, and detected numbering system.\nclass $6c7bd7858deea686$var$NumberParserImpl {\n    parse(value) {\n        // to parse the number, we need to remove anything that isn't actually part of the number, for example we want '-10.40' not '-10.40 USD'\n        let fullySanitizedValue = this.sanitize(value);\n        if (this.symbols.group) // Remove group characters, and replace decimal points and numerals with ASCII values.\n        fullySanitizedValue = $6c7bd7858deea686$var$replaceAll(fullySanitizedValue, this.symbols.group, '');\n        if (this.symbols.decimal) fullySanitizedValue = fullySanitizedValue.replace(this.symbols.decimal, '.');\n        if (this.symbols.minusSign) fullySanitizedValue = fullySanitizedValue.replace(this.symbols.minusSign, '-');\n        fullySanitizedValue = fullySanitizedValue.replace(this.symbols.numeral, this.symbols.index);\n        if (this.options.style === 'percent') {\n            // javascript is bad at dividing by 100 and maintaining the same significant figures, so perform it on the string before parsing\n            let isNegative = fullySanitizedValue.indexOf('-');\n            fullySanitizedValue = fullySanitizedValue.replace('-', '');\n            let index = fullySanitizedValue.indexOf('.');\n            if (index === -1) index = fullySanitizedValue.length;\n            fullySanitizedValue = fullySanitizedValue.replace('.', '');\n            if (index - 2 === 0) fullySanitizedValue = `0.${fullySanitizedValue}`;\n            else if (index - 2 === -1) fullySanitizedValue = `0.0${fullySanitizedValue}`;\n            else if (index - 2 === -2) fullySanitizedValue = '0.00';\n            else fullySanitizedValue = `${fullySanitizedValue.slice(0, index - 2)}.${fullySanitizedValue.slice(index - 2)}`;\n            if (isNegative > -1) fullySanitizedValue = `-${fullySanitizedValue}`;\n        }\n        let newValue = fullySanitizedValue ? +fullySanitizedValue : NaN;\n        if (isNaN(newValue)) return NaN;\n        if (this.options.style === 'percent') {\n            var _this_options_minimumFractionDigits, _this_options_maximumFractionDigits;\n            // extra step for rounding percents to what our formatter would output\n            let options = {\n                ...this.options,\n                style: 'decimal',\n                minimumFractionDigits: Math.min(((_this_options_minimumFractionDigits = this.options.minimumFractionDigits) !== null && _this_options_minimumFractionDigits !== void 0 ? _this_options_minimumFractionDigits : 0) + 2, 20),\n                maximumFractionDigits: Math.min(((_this_options_maximumFractionDigits = this.options.maximumFractionDigits) !== null && _this_options_maximumFractionDigits !== void 0 ? _this_options_maximumFractionDigits : 0) + 2, 20)\n            };\n            return new $6c7bd7858deea686$export$cd11ab140839f11d(this.locale, options).parse(new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(this.locale, options).format(newValue));\n        }\n        // accounting will always be stripped to a positive number, so if it's accounting and has a () around everything, then we need to make it negative again\n        if (this.options.currencySign === 'accounting' && $6c7bd7858deea686$var$CURRENCY_SIGN_REGEX.test(value)) newValue = -1 * newValue;\n        return newValue;\n    }\n    sanitize(value) {\n        // Remove literals and whitespace, which are allowed anywhere in the string\n        value = value.replace(this.symbols.literals, '');\n        // Replace the ASCII minus sign with the minus sign used in the current locale\n        // so that both are allowed in case the user's keyboard doesn't have the locale's minus sign.\n        if (this.symbols.minusSign) value = value.replace('-', this.symbols.minusSign);\n        // In arab numeral system, their decimal character is 1643, but most keyboards don't type that\n        // instead they use the , (44) character or apparently the (1548) character.\n        if (this.options.numberingSystem === 'arab') {\n            if (this.symbols.decimal) {\n                value = value.replace(',', this.symbols.decimal);\n                value = value.replace(String.fromCharCode(1548), this.symbols.decimal);\n            }\n            if (this.symbols.group) value = $6c7bd7858deea686$var$replaceAll(value, '.', this.symbols.group);\n        }\n        // fr-FR group character is char code 8239, but that's not a key on the french keyboard,\n        // so allow 'period' as a group char and replace it with a space\n        if (this.options.locale === 'fr-FR') value = $6c7bd7858deea686$var$replaceAll(value, '.', String.fromCharCode(8239));\n        return value;\n    }\n    isValidPartialNumber(value, minValue = -Infinity, maxValue = Infinity) {\n        value = this.sanitize(value);\n        // Remove minus or plus sign, which must be at the start of the string.\n        if (this.symbols.minusSign && value.startsWith(this.symbols.minusSign) && minValue < 0) value = value.slice(this.symbols.minusSign.length);\n        else if (this.symbols.plusSign && value.startsWith(this.symbols.plusSign) && maxValue > 0) value = value.slice(this.symbols.plusSign.length);\n        // Numbers cannot start with a group separator\n        if (this.symbols.group && value.startsWith(this.symbols.group)) return false;\n        // Numbers that can't have any decimal values fail if a decimal character is typed\n        if (this.symbols.decimal && value.indexOf(this.symbols.decimal) > -1 && this.options.maximumFractionDigits === 0) return false;\n        // Remove numerals, groups, and decimals\n        if (this.symbols.group) value = $6c7bd7858deea686$var$replaceAll(value, this.symbols.group, '');\n        value = value.replace(this.symbols.numeral, '');\n        if (this.symbols.decimal) value = value.replace(this.symbols.decimal, '');\n        // The number is valid if there are no remaining characters\n        return value.length === 0;\n    }\n    constructor(locale, options = {}){\n        this.locale = locale;\n        this.formatter = new Intl.NumberFormat(locale, options);\n        this.options = this.formatter.resolvedOptions();\n        this.symbols = $6c7bd7858deea686$var$getSymbols(locale, this.formatter, this.options, options);\n        var _this_options_minimumFractionDigits, _this_options_maximumFractionDigits;\n        if (this.options.style === 'percent' && (((_this_options_minimumFractionDigits = this.options.minimumFractionDigits) !== null && _this_options_minimumFractionDigits !== void 0 ? _this_options_minimumFractionDigits : 0) > 18 || ((_this_options_maximumFractionDigits = this.options.maximumFractionDigits) !== null && _this_options_maximumFractionDigits !== void 0 ? _this_options_maximumFractionDigits : 0) > 18)) console.warn('NumberParser cannot handle percentages with greater than 18 decimal places, please reduce the number in your options.');\n    }\n}\nconst $6c7bd7858deea686$var$nonLiteralParts = new Set([\n    'decimal',\n    'fraction',\n    'integer',\n    'minusSign',\n    'plusSign',\n    'group'\n]);\n// This list is derived from https://www.unicode.org/cldr/charts/43/supplemental/language_plural_rules.html#comparison and includes\n// all unique numbers which we need to check in order to determine all the plural forms for a given locale.\n// See: https://github.com/adobe/react-spectrum/pull/5134/files#r1337037855 for used script\nconst $6c7bd7858deea686$var$pluralNumbers = [\n    0,\n    4,\n    2,\n    1,\n    11,\n    20,\n    3,\n    7,\n    100,\n    21,\n    0.1,\n    1.1\n];\nfunction $6c7bd7858deea686$var$getSymbols(locale, formatter, intlOptions, originalOptions) {\n    var _allParts_find, _posAllParts_find, _decimalParts_find, _allParts_find1;\n    // formatter needs access to all decimal places in order to generate the correct literal strings for the plural set\n    let symbolFormatter = new Intl.NumberFormat(locale, {\n        ...intlOptions,\n        minimumSignificantDigits: 1,\n        maximumSignificantDigits: 21\n    });\n    // Note: some locale's don't add a group symbol until there is a ten thousands place\n    let allParts = symbolFormatter.formatToParts(-10000.111);\n    let posAllParts = symbolFormatter.formatToParts(10000.111);\n    let pluralParts = $6c7bd7858deea686$var$pluralNumbers.map((n)=>symbolFormatter.formatToParts(n));\n    var _allParts_find_value;\n    let minusSign = (_allParts_find_value = (_allParts_find = allParts.find((p)=>p.type === 'minusSign')) === null || _allParts_find === void 0 ? void 0 : _allParts_find.value) !== null && _allParts_find_value !== void 0 ? _allParts_find_value : '-';\n    let plusSign = (_posAllParts_find = posAllParts.find((p)=>p.type === 'plusSign')) === null || _posAllParts_find === void 0 ? void 0 : _posAllParts_find.value;\n    // Safari does not support the signDisplay option, but our number parser polyfills it.\n    // If no plus sign was returned, but the original options contained signDisplay, default to the '+' character.\n    // @ts-ignore\n    if (!plusSign && ((originalOptions === null || originalOptions === void 0 ? void 0 : originalOptions.signDisplay) === 'exceptZero' || (originalOptions === null || originalOptions === void 0 ? void 0 : originalOptions.signDisplay) === 'always')) plusSign = '+';\n    // If maximumSignificantDigits is 1 (the minimum) then we won't get decimal characters out of the above formatters\n    // Percent also defaults to 0 fractionDigits, so we need to make a new one that isn't percent to get an accurate decimal\n    let decimalParts = new Intl.NumberFormat(locale, {\n        ...intlOptions,\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    }).formatToParts(0.001);\n    let decimal = (_decimalParts_find = decimalParts.find((p)=>p.type === 'decimal')) === null || _decimalParts_find === void 0 ? void 0 : _decimalParts_find.value;\n    let group = (_allParts_find1 = allParts.find((p)=>p.type === 'group')) === null || _allParts_find1 === void 0 ? void 0 : _allParts_find1.value;\n    // this set is also for a regex, it's all literals that might be in the string we want to eventually parse that\n    // don't contribute to the numerical value\n    let allPartsLiterals = allParts.filter((p)=>!$6c7bd7858deea686$var$nonLiteralParts.has(p.type)).map((p)=>$6c7bd7858deea686$var$escapeRegex(p.value));\n    let pluralPartsLiterals = pluralParts.flatMap((p)=>p.filter((p)=>!$6c7bd7858deea686$var$nonLiteralParts.has(p.type)).map((p)=>$6c7bd7858deea686$var$escapeRegex(p.value)));\n    let sortedLiterals = [\n        ...new Set([\n            ...allPartsLiterals,\n            ...pluralPartsLiterals\n        ])\n    ].sort((a, b)=>b.length - a.length);\n    let literals = sortedLiterals.length === 0 ? new RegExp('[\\\\p{White_Space}]', 'gu') : new RegExp(`${sortedLiterals.join('|')}|[\\\\p{White_Space}]`, 'gu');\n    // These are for replacing non-latn characters with the latn equivalent\n    let numerals = [\n        ...new Intl.NumberFormat(intlOptions.locale, {\n            useGrouping: false\n        }).format(9876543210)\n    ].reverse();\n    let indexes = new Map(numerals.map((d, i)=>[\n            d,\n            i\n        ]));\n    let numeral = new RegExp(`[${numerals.join('')}]`, 'g');\n    let index = (d)=>String(indexes.get(d));\n    return {\n        minusSign: minusSign,\n        plusSign: plusSign,\n        decimal: decimal,\n        group: group,\n        literals: literals,\n        numeral: numeral,\n        index: index\n    };\n}\nfunction $6c7bd7858deea686$var$replaceAll(str, find, replace) {\n    // @ts-ignore\n    if (str.replaceAll) // @ts-ignore\n    return str.replaceAll(find, replace);\n    return str.split(find).join(replace);\n}\nfunction $6c7bd7858deea686$var$escapeRegex(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\n\nexport {$6c7bd7858deea686$export$cd11ab140839f11d as NumberParser};\n//# sourceMappingURL=NumberParser.module.js.map\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const KeyboardArrowRightIcon = createSvgIcon(\n  <path d=\"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\" />\n, 'KeyboardArrowRightOutlined');\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function startOfDay(date: ZonedDateTime): ZonedDateTime {\n  return date.set({hour: 0, minute: 0, second: 0, millisecond: 0});\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function endOfDay(date: ZonedDateTime): ZonedDateTime {\n  return date.set({\n    hour: 24 - 1,\n    minute: 60 - 1,\n    second: 60 - 1,\n    millisecond: 1000 - 1,\n  });\n}\n","import {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\nimport {getLocalTimeZone} from '@internationalized/date';\n\nexport function getUserTimezone(): string {\n  const defaultTimezone = getBootstrapData()?.settings.dates.default_timezone;\n  const preferredTimezone =\n    getBootstrapData()?.user?.timezone || defaultTimezone || 'auto';\n\n  if (!preferredTimezone || preferredTimezone === 'auto') {\n    return getLocalTimeZone();\n  }\n  return preferredTimezone;\n}\n","import {useMemo} from 'react';\nimport {now} from '@internationalized/date';\nimport {useUserTimezone} from '@ui/i18n/use-user-timezone';\nimport {getUserTimezone} from '@ui/i18n/get-user-timezone';\n\nexport function useCurrentDateTime() {\n  const timezone = useUserTimezone();\n  return useMemo(() => {\n    try {\n      return now(timezone);\n    } catch (e) {\n      return now('UTC');\n    }\n  }, [timezone]);\n}\n\nexport function getCurrentDateTime() {\n  const timezone = getUserTimezone();\n  try {\n    return now(timezone);\n  } catch (e) {\n    return now('UTC');\n  }\n}\n","import {DateRangeValue} from '../date-range-value';\nimport {message} from '@ui/i18n/message';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\nimport {\n  endOfMonth,\n  endOfWeek,\n  endOfYear,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n} from '@internationalized/date';\nimport {startOfDay} from '@ui/utils/date/start-of-day';\nimport {endOfDay} from '@ui/utils/date/end-of-day';\nimport {getBootstrapData} from '@ui/bootstrap-data/bootstrap-data-store';\nimport {getCurrentDateTime} from '@ui/i18n/use-current-date-time';\n\nconst Now = startOfDay(getCurrentDateTime());\nconst locale = getBootstrapData()?.i18n?.language || 'en';\n\nexport interface DateRangePreset {\n  key: number;\n  label: MessageDescriptor;\n  getRangeValue: () => DateRangeValue;\n}\n\nexport const DateRangePresets: DateRangePreset[] = [\n  {\n    key: 0,\n    label: message('Today'),\n    getRangeValue: () => ({\n      preset: 0,\n      start: Now,\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 1,\n    label: message('Yesterday'),\n    getRangeValue: () => ({\n      preset: 1,\n      start: Now.subtract({days: 1}),\n      end: endOfDay(Now).subtract({days: 1}),\n    }),\n  },\n  {\n    key: 2,\n    label: message('This week'),\n    getRangeValue: () => ({\n      preset: 2,\n      start: startOfWeek(Now, locale),\n      end: endOfWeek(endOfDay(Now), locale),\n    }),\n  },\n  {\n    key: 3,\n    label: message('Last week'),\n    getRangeValue: () => {\n      const start = startOfWeek(Now, locale).subtract({days: 7});\n      return {\n        preset: 3,\n        start,\n        end: start.add({days: 6}),\n      };\n    },\n  },\n  {\n    key: 4,\n    label: message('Last 7 days'),\n    getRangeValue: () => ({\n      preset: 4,\n      start: Now.subtract({days: 7}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 5,\n    label: message('Last 30 days'),\n    getRangeValue: () => ({\n      preset: 5,\n      start: Now.subtract({days: 30}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 6,\n    label: message('Last 3 months'),\n    getRangeValue: () => ({\n      preset: 6,\n      start: Now.subtract({months: 3}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 7,\n    label: message('Last 12 months'),\n    getRangeValue: () => ({\n      preset: 7,\n      start: Now.subtract({months: 12}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 8,\n    label: message('This month'),\n    getRangeValue: () => ({\n      preset: 8,\n      start: startOfMonth(Now),\n      end: endOfMonth(endOfDay(Now)),\n    }),\n  },\n  {\n    key: 9,\n    label: message('This year'),\n    getRangeValue: () => ({\n      preset: 9,\n      start: startOfYear(Now),\n      end: endOfYear(endOfDay(Now)),\n    }),\n  },\n  {\n    key: 10,\n    label: message('Last year'),\n    getRangeValue: () => ({\n      preset: 10,\n      start: startOfYear(Now).subtract({years: 1}),\n      end: endOfYear(endOfDay(Now)).subtract({years: 1}),\n    }),\n  },\n];\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DateRangeIcon = createSvgIcon(\n  <path d=\"M7 11h2v2H7v-2zm14-5v14c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2zM5 8h14V6H5v2zm14 12V10H5v10h14zm-4-7h2v-2h-2v2zm-4 0h2v-2h-2v2z\" />\n, 'DateRangeOutlined');\n","import {FocusScope} from '@react-aria/focus';\nimport React, {ComponentPropsWithoutRef, CSSProperties, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface InputProps {\n  className?: string;\n  children: ReactNode;\n  autoFocus?: boolean;\n  disabled?: boolean;\n  style?: CSSProperties;\n  inputProps?: ComponentPropsWithoutRef<'div'>;\n  wrapperProps?: ComponentPropsWithoutRef<'div'>;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}\n\nexport const Input = React.forwardRef<HTMLDivElement, InputProps>(\n  (props, ref) => {\n    const {\n      children,\n      inputProps,\n      wrapperProps,\n      className,\n      autoFocus,\n      style,\n      onClick,\n    } = props;\n\n    return (\n      <div {...wrapperProps} onClick={onClick}>\n        <div\n          {...inputProps}\n          role=\"group\"\n          className={clsx(\n            className,\n            'flex items-center focus-within:ring focus-within:ring-primary/focus focus-within:border-primary/60'\n          )}\n          ref={ref}\n          style={style}\n        >\n          <FocusScope autoFocus={autoFocus}>{children}</FocusScope>\n        </div>\n      </div>\n    );\n  }\n);\n","import React, {ComponentPropsWithoutRef, FocusEventHandler, Ref} from 'react';\nimport clsx from 'clsx';\nimport {createFocusManager} from '@react-aria/focus';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {getInputFieldClassNames} from '../../get-input-field-class-names';\nimport {Field, FieldProps} from '../../field';\nimport {Input} from '../../input';\nimport {useField} from '../../use-field';\n\nexport interface DatePickerFieldProps\n  extends Omit<FieldProps, 'fieldClassNames'> {\n  inputRef?: Ref<HTMLDivElement>;\n  onBlur?: FocusEventHandler;\n  showCalendarFooter?: boolean;\n}\nexport const DatePickerField = React.forwardRef<\n  HTMLDivElement,\n  DatePickerFieldProps\n>(({inputRef, wrapperProps, children, onBlur, ...other}, ref) => {\n  const fieldClassNames = getInputFieldClassNames(other);\n  const objRef = useObjectRef(ref);\n\n  const {fieldProps, inputProps} = useField({\n    ...other,\n    focusRef: objRef,\n    labelElementType: 'span',\n  });\n\n  fieldClassNames.wrapper = clsx(\n    fieldClassNames.wrapper,\n    other.disabled && 'pointer-events-none',\n  );\n\n  return (\n    <Field\n      wrapperProps={mergeProps<ComponentPropsWithoutRef<'div'>[]>(\n        wrapperProps!,\n        {\n          onBlur: e => {\n            if (!objRef.current?.contains(e.relatedTarget)) {\n              onBlur?.(e);\n            }\n          },\n          onClick: () => {\n            // focus first segment when clicking on label or somewhere else in the field, but no directly on segment\n            const focusManager = createFocusManager(objRef);\n            focusManager?.focusFirst();\n          },\n        },\n      )}\n      fieldClassNames={fieldClassNames}\n      ref={objRef}\n      {...fieldProps}\n    >\n      <Input\n        inputProps={inputProps}\n        className={clsx(fieldClassNames.input, 'gap-10')}\n        ref={inputRef}\n      >\n        {children}\n      </Input>\n    </Field>\n  );\n});\n","import {CalendarDate, DateValue} from '@internationalized/date';\n\nexport function getDefaultGranularity(date: DateValue) {\n  if (date instanceof CalendarDate) {\n    return 'day';\n  }\n  return 'minute';\n}\n\nexport function dateIsInvalid(\n  date: CalendarDate,\n  min?: DateValue,\n  max?: DateValue\n) {\n  return (\n    (min != null && date.compare(min) < 0) ||\n    (max != null && date.compare(max) > 0)\n  );\n}\n","import {\n  CalendarDate,\n  CalendarDateTime,\n  Disambiguation,\n  toZoned,\n  ZonedDateTime,\n} from '@internationalized/date';\n\nexport function toSafeZoned(\n  date: CalendarDate | CalendarDateTime | ZonedDateTime,\n  timeZone: string,\n  disambiguation?: Disambiguation,\n): ZonedDateTime {\n  try {\n    return toZoned(date, timeZone, disambiguation);\n  } catch (e) {\n    return toZoned(date, 'UTC', disambiguation);\n  }\n}\n","import {useState} from 'react';\nimport {DateValue, ZonedDateTime} from '@internationalized/date';\nimport {getDefaultGranularity} from './utils';\nimport type {DatePickerValueProps} from './date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-picker/date-range-value';\nimport {useUserTimezone} from '@ui/i18n/use-user-timezone';\nimport {toSafeZoned} from '@ui/i18n/to-safe-zoned';\n\nexport function useBaseDatePickerState(\n  selectedDate: DateValue,\n  props:\n    | DatePickerValueProps<ZonedDateTime>\n    | DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>,\n) {\n  const userTimezone = useUserTimezone();\n  const timezone = props.timezone ?? userTimezone;\n  const [calendarIsOpen, setCalendarIsOpen] = useState(false);\n  const closeDialogOnSelection = props.closeDialogOnSelection ?? true;\n\n  const granularity = props.granularity || getDefaultGranularity(selectedDate);\n  const min = props.min ? toSafeZoned(props.min, timezone) : undefined;\n  const max = props.max ? toSafeZoned(props.max, timezone) : undefined;\n\n  return {\n    timezone,\n    granularity,\n    min,\n    max,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  };\n}\n","import {useControlledState} from '@react-stately/utils';\nimport {HTMLAttributes, useCallback, useState} from 'react';\nimport {\n  CalendarDate,\n  DateValue,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  maxDate,\n  minDate,\n  startOfMonth,\n  toCalendarDate,\n  ZonedDateTime,\n} from '@internationalized/date';\nimport {\n  BaseDatePickerState,\n  DatePickerValueProps,\n} from '../date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-value';\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\nimport {startOfDay} from '@ui/utils/date/start-of-day';\nimport {endOfDay} from '@ui/utils/date/end-of-day';\nimport {useCurrentDateTime} from '@ui/i18n/use-current-date-time';\nimport {toSafeZoned} from '@ui/i18n/to-safe-zoned';\n\nexport interface IsPlaceholderValue {\n  start: boolean;\n  end: boolean;\n}\n\nexport type DateRangePickerState = BaseDatePickerState<\n  DateRangeValue,\n  IsPlaceholderValue\n>;\n\nexport function useDateRangePickerState(\n  props: DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>,\n): DateRangePickerState {\n  const now = useCurrentDateTime();\n  const [isPlaceholder, setIsPlaceholder] = useState<IsPlaceholderValue>({\n    start: (!props.value || !props.value.start) && !props.defaultValue?.start,\n    end: (!props.value || !props.value.end) && !props.defaultValue?.end,\n  });\n\n  // if user clears the date, we will want to still keep an\n  // instance internally, but return null via \"onChange\" callback\n  const setStateValue = props.onChange;\n  const [internalValue, setInternalValue] = useControlledState(\n    props.value ? completeRange(props.value, now) : undefined,\n    !props.value ? completeRange(props.defaultValue, now) : undefined,\n    value => {\n      setIsPlaceholder({start: false, end: false});\n      setStateValue?.(value);\n    },\n  );\n\n  const {\n    min,\n    max,\n    granularity,\n    timezone,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  } = useBaseDatePickerState(internalValue.start, props);\n\n  const clear = useCallback(() => {\n    setIsPlaceholder({start: true, end: true});\n    setInternalValue(completeRange(null, now));\n    setStateValue?.(null);\n    setCalendarIsOpen(false);\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\n\n  const [anchorDate, setAnchorDate] = useState<CalendarDate | null>(null);\n  const [isHighlighting, setIsHighlighting] = useState(false);\n  const [highlightedRange, setHighlightedRange] =\n    useState<DateRangeValue>(internalValue);\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\n    return rangeToCalendarDates(internalValue, max);\n  });\n\n  const constrainRange = useCallback(\n    (range: DateRangeValue): DateRangeValue => {\n      let start = range.start;\n      let end = range.end;\n\n      // make sure start date is after min date and before max date/range end\n      if (min) {\n        start = maxDate(start, min);\n      }\n      const startMax = max ? minDate(max, end) : end;\n      start = minDate(start, startMax);\n\n      // make sure end date is after min date/range start and before max date\n      const endMin = min ? maxDate(min, start) : start;\n      end = maxDate(end, endMin);\n\n      if (max) {\n        end = minDate(end, max);\n      }\n\n      return {\n        start: toSafeZoned(start, timezone),\n        end: toSafeZoned(end, timezone),\n      };\n    },\n    [min, max, timezone],\n  );\n\n  const setSelectedValue = useCallback(\n    (newRange: DateRangeValue) => {\n      const value = {\n        ...constrainRange(newRange),\n        preset: newRange.preset,\n      };\n      setInternalValue(value);\n      setHighlightedRange(value);\n      setCalendarDates(rangeToCalendarDates(value, max));\n      setIsPlaceholder({start: false, end: false});\n    },\n    [setInternalValue, constrainRange, max],\n  );\n\n  const dayIsActive = useCallback(\n    (day: CalendarDate) => {\n      return (\n        (!isPlaceholder.start && isSameDay(day, highlightedRange.start)) ||\n        (!isPlaceholder.end && isSameDay(day, highlightedRange.end))\n      );\n    },\n    [highlightedRange, isPlaceholder],\n  );\n\n  const dayIsHighlighted = useCallback(\n    (day: CalendarDate) => {\n      return (\n        (isHighlighting || (!isPlaceholder.start && !isPlaceholder.end)) &&\n        day.compare(highlightedRange.start) >= 0 &&\n        day.compare(highlightedRange.end) <= 0\n      );\n    },\n    [highlightedRange, isPlaceholder, isHighlighting],\n  );\n\n  const dayIsRangeStart = useCallback(\n    (day: CalendarDate) => isSameDay(day, highlightedRange.start),\n    [highlightedRange],\n  );\n\n  const dayIsRangeEnd = useCallback(\n    (day: CalendarDate) => isSameDay(day, highlightedRange.end),\n    [highlightedRange],\n  );\n\n  const getCellProps = useCallback(\n    (date: CalendarDate, isSameMonth: boolean): HTMLAttributes<HTMLElement> => {\n      return {\n        onPointerEnter: () => {\n          if (isHighlighting && isSameMonth) {\n            setHighlightedRange(\n              makeRange({start: anchorDate!, end: date, timezone}),\n            );\n          }\n        },\n        onClick: () => {\n          if (!isHighlighting) {\n            setIsHighlighting(true);\n            setAnchorDate(date);\n            setHighlightedRange(makeRange({start: date, end: date, timezone}));\n          } else {\n            const finalRange = makeRange({\n              start: anchorDate!,\n              end: date,\n              timezone,\n            });\n            // cast to start and end of day after making range, because \"makeRange\"\n            // will flip start and end dates, if they are out of order\n            finalRange.start = startOfDay(finalRange.start);\n            finalRange.end = endOfDay(finalRange.end);\n            setIsHighlighting(false);\n            setAnchorDate(null);\n            setSelectedValue?.(finalRange);\n            if (closeDialogOnSelection) {\n              setCalendarIsOpen?.(false);\n            }\n          }\n        },\n      };\n    },\n    [\n      anchorDate,\n      isHighlighting,\n      setSelectedValue,\n      setCalendarIsOpen,\n      closeDialogOnSelection,\n      timezone,\n    ],\n  );\n\n  return {\n    selectedValue: internalValue,\n    setSelectedValue,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    dayIsActive,\n    dayIsHighlighted,\n    dayIsRangeStart,\n    dayIsRangeEnd,\n    getCellProps,\n    calendarDates,\n    setIsPlaceholder,\n    isPlaceholder,\n    clear,\n    setCalendarDates,\n    min,\n    max,\n    granularity,\n    timezone,\n    closeDialogOnSelection,\n  };\n}\n\nfunction rangeToCalendarDates(\n  range: DateRangeValue,\n  max?: DateValue,\n): CalendarDate[] {\n  let start = toCalendarDate(startOfMonth(range.start));\n  let end = toCalendarDate(endOfMonth(range.end));\n\n  // make sure we don't show the same month twice\n  if (isSameMonth(start, end)) {\n    end = endOfMonth(end.add({months: 1}));\n  }\n\n  // if next month is disabled, show previous instead\n  if (max && end.compare(max) > 0) {\n    end = start;\n    start = startOfMonth(start.subtract({months: 1}));\n  }\n  return [start, end];\n}\n\ninterface MakeRangeProps {\n  start: DateValue;\n  end: DateValue;\n  timezone: string;\n}\nfunction makeRange(props: MakeRangeProps): DateRangeValue {\n  const start = toSafeZoned(props.start, props.timezone);\n  const end = toSafeZoned(props.end, props.timezone);\n  if (start.compare(end) > 0) {\n    return {start: end, end: start};\n  }\n  return {start, end};\n}\n\nfunction completeRange(\n  range: Partial<DateRangeValue> | null | undefined,\n  now: ZonedDateTime,\n): DateRangeValue {\n  if (range?.start && range?.end) {\n    return range as DateRangeValue;\n  } else if (!range?.start && range?.end) {\n    range.start = range.end.subtract({months: 1});\n    return range as DateRangeValue;\n  } else if (!range?.end && range?.start) {\n    range.end = range.start.add({months: 1});\n    return range as DateRangeValue;\n  }\n  return {start: now, end: now.add({months: 1})};\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ArrowRightAltIcon = createSvgIcon(\n  <path d=\"M16.01 11H4v2h12.01v3L20 12l-3.99-4v3z\" />\n, 'ArrowRightAltOutlined');\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function adjustSegment(\n  value: ZonedDateTime,\n  part: string,\n  amount: number,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (part) {\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day':\n      return value.cycle(part, amount, {round: part === 'year'});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        const hours = value.hour;\n        const isPM = hours >= 12;\n        return value.set({hour: isPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n      case 'minute':\n      case 'second':\n        return value.cycle(part, amount, {\n          round: part !== 'hour',\n          hourCycle: options.hour12 ? 12 : 24,\n        });\n    }\n  }\n\n  return value;\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function setSegment(\n  value: ZonedDateTime,\n  part: string,\n  segmentValue: number,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (part) {\n    case 'day':\n    case 'month':\n    case 'year':\n      return value.set({[part]: segmentValue});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        const hours = value.hour;\n        const wasPM = hours >= 12;\n        const isPM = segmentValue >= 12;\n        if (isPM === wasPM) {\n          return value;\n        }\n        return value.set({hour: wasPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n        // In 12 hour time, ensure that AM/PM does not change\n        if (options.hour12) {\n          const hours = value.hour;\n          const wasPM = hours >= 12;\n          if (!wasPM && segmentValue === 12) {\n            segmentValue = 0;\n          }\n          if (wasPM && segmentValue < 12) {\n            segmentValue += 12;\n          }\n        }\n      // fallthrough\n      case 'minute':\n      case 'second':\n        return value.set({[part]: segmentValue});\n    }\n  }\n\n  return value;\n}\n","export const PAGE_STEP = {\n  year: 5,\n  month: 2,\n  day: 7,\n  hour: 2,\n  minute: 15,\n  second: 15,\n  dayPeriod: 1,\n};\n","import {useFocusManager} from '@react-aria/focus';\nimport React, {\n  ComponentPropsWithoutRef,\n  HTMLAttributes,\n  KeyboardEventHandler,\n  useMemo,\n  useRef,\n} from 'react';\nimport {NumberParser} from '@internationalized/number';\nimport {mergeProps} from '@react-aria/utils';\nimport {today, ZonedDateTime} from '@internationalized/date';\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {adjustSegment} from './utils/adjust-segment';\nimport {setSegment} from './utils/set-segment';\nimport {PAGE_STEP} from './utils/page-step';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\n\nexport interface EditableSegment {\n  type: 'day' | 'dayPeriod' | 'hour' | 'minute' | 'month' | 'second' | 'year';\n  text: string;\n  value: number;\n  minValue: number;\n  maxValue: number;\n  minLength: number;\n}\n\ninterface DatePickerSegmentProps {\n  segment: EditableSegment;\n  domProps?: ComponentPropsWithoutRef<'div'>;\n  state: DatePickerState | DateRangePickerState;\n  value: ZonedDateTime;\n  onChange: (newValue: ZonedDateTime) => void;\n  isPlaceholder?: boolean;\n}\nexport function EditableDateSegment({\n  segment,\n  domProps,\n  value,\n  onChange,\n  isPlaceholder,\n  state: {timezone, calendarIsOpen, setCalendarIsOpen},\n}: DatePickerSegmentProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const enteredKeys = useRef('');\n  const {localeCode} = useSelectedLocale();\n  const focusManager = useFocusManager();\n  const formatter = useDateFormatter({timeZone: timezone});\n  const parser = useMemo(\n    () => new NumberParser(localeCode, {maximumFractionDigits: 0}),\n    [localeCode],\n  );\n\n  const setSegmentValue = (newValue: number) => {\n    onChange(\n      setSegment(value, segment.type, newValue, formatter.resolvedOptions()),\n    );\n  };\n\n  const adjustSegmentValue = (amount: number) => {\n    onChange(\n      adjustSegment(value, segment.type, amount, formatter.resolvedOptions()),\n    );\n  };\n\n  const backspace = () => {\n    if (parser.isValidPartialNumber(segment.text)) {\n      const newValue = segment.text.slice(0, -1);\n      const parsed = parser.parse(newValue);\n      if (newValue.length === 0 || parsed === 0) {\n        const now = today(timezone);\n        if (segment.type in now) {\n          // @ts-ignore\n          setSegmentValue(now[segment.type]);\n        }\n      } else {\n        setSegmentValue(parsed);\n      }\n      enteredKeys.current = newValue;\n    } else if (segment.type === 'dayPeriod') {\n      adjustSegmentValue(-1);\n    }\n  };\n\n  const onKeyDown: KeyboardEventHandler = e => {\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) {\n      return;\n    }\n\n    // Navigation between date segments and deletion\n    switch (e.key) {\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        focusManager?.focusPrevious();\n        break;\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        focusManager?.focusNext();\n        break;\n      case 'Enter':\n        (e.target as HTMLElement).closest('form')?.requestSubmit();\n        setCalendarIsOpen(!calendarIsOpen);\n        break;\n      case 'Tab':\n        break;\n      case 'Backspace':\n      case 'Delete': {\n        e.preventDefault();\n        e.stopPropagation();\n        backspace();\n        break;\n      }\n\n      // Spinbutton incrementing/decrementing\n      case 'ArrowUp':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(1);\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(-1);\n        break;\n      case 'PageUp':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(PAGE_STEP[segment.type] || 1);\n        break;\n      case 'PageDown':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(-(PAGE_STEP[segment.type] || 1));\n        break;\n      case 'Home':\n        e.preventDefault();\n        enteredKeys.current = '';\n        setSegmentValue(segment.maxValue);\n        break;\n      case 'End':\n        e.preventDefault();\n        enteredKeys.current = '';\n        setSegmentValue(segment.minValue);\n        break;\n    }\n\n    onInput(e.key);\n  };\n\n  const amPmFormatter = useDateFormatter({hour: 'numeric', hour12: true});\n  const am = useMemo(() => {\n    const amDate = new Date();\n    amDate.setHours(0);\n    return amPmFormatter\n      .formatToParts(amDate)\n      .find(part => part.type === 'dayPeriod')!.value;\n  }, [amPmFormatter]);\n  const pm = useMemo(() => {\n    const pmDate = new Date();\n    pmDate.setHours(12);\n    return amPmFormatter\n      .formatToParts(pmDate)\n      .find(part => part.type === 'dayPeriod')!.value;\n  }, [amPmFormatter]);\n\n  // Update date values on user keyboard input\n  const onInput = (key: string) => {\n    const newValue = enteredKeys.current + key;\n\n    switch (segment.type) {\n      case 'dayPeriod':\n        if (am.toLowerCase().startsWith(key)) {\n          setSegmentValue(0);\n        } else if (pm.toLowerCase().startsWith(key)) {\n          setSegmentValue(12);\n        } else {\n          break;\n        }\n        focusManager?.focusNext();\n        break;\n      case 'day':\n      case 'hour':\n      case 'minute':\n      case 'second':\n      case 'month':\n      case 'year': {\n        if (!parser.isValidPartialNumber(newValue)) {\n          return;\n        }\n\n        let numberValue = parser.parse(newValue);\n        let segmentValue = numberValue;\n        let allowsZero = segment.minValue === 0;\n        if (segment.type === 'hour' && formatter.resolvedOptions().hour12) {\n          switch (formatter.resolvedOptions().hourCycle) {\n            case 'h11':\n              if (numberValue > 11) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n            case 'h12':\n              allowsZero = false;\n              if (numberValue > 12) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n          }\n\n          if (segment.value >= 12 && numberValue > 1) {\n            numberValue += 12;\n          }\n        } else if (numberValue > segment.maxValue) {\n          segmentValue = parser.parse(key);\n        }\n\n        if (Number.isNaN(numberValue)) {\n          return;\n        }\n\n        const shouldSetValue = segmentValue !== 0 || allowsZero;\n        if (shouldSetValue) {\n          setSegmentValue(segmentValue);\n        }\n\n        if (\n          Number(`${numberValue}0`) > segment.maxValue ||\n          newValue.length >= String(segment.maxValue).length\n        ) {\n          enteredKeys.current = '';\n          if (shouldSetValue) {\n            focusManager?.focusNext();\n          }\n        } else {\n          enteredKeys.current = newValue;\n        }\n        break;\n      }\n    }\n  };\n\n  const spinButtonProps: HTMLAttributes<HTMLDivElement> = isMobile\n    ? {}\n    : {\n        'aria-label': segment.type,\n        'aria-valuetext': isPlaceholder ? undefined : `${segment.value}`,\n        'aria-valuemin': segment.minValue,\n        'aria-valuemax': segment.maxValue,\n        'aria-valuenow': isPlaceholder ? undefined : segment.value,\n        tabIndex: 0,\n        onKeyDown,\n      };\n\n  return (\n    <div\n      {...mergeProps(domProps!, {\n        ...spinButtonProps,\n        onFocus: e => {\n          enteredKeys.current = '';\n          e.target.scrollIntoView({block: 'nearest'});\n        },\n        onClick: e => {\n          e.preventDefault();\n          e.stopPropagation();\n        },\n      } as HTMLAttributes<HTMLDivElement>)}\n      className=\"box-content cursor-default select-none whitespace-nowrap rounded p-2 text-center tabular-nums caret-transparent outline-none focus:bg-primary focus:text-on-primary\"\n    >\n      {segment.text.padStart(segment.minLength, '0')}\n    </div>\n  );\n}\n","import {useFocusManager} from '@react-aria/focus';\nimport {ComponentPropsWithoutRef} from 'react';\n\nexport interface LiteralSegment {\n  type: 'literal';\n  minLength: 1;\n  text: string;\n}\n\ninterface LiteralSegmentProps extends ComponentPropsWithoutRef<'div'> {\n  segment: LiteralSegment;\n  domProps?: ComponentPropsWithoutRef<'div'>;\n}\nexport function LiteralDateSegment({segment, domProps}: LiteralSegmentProps) {\n  const focusManager = useFocusManager();\n  return (\n    <div\n      {...domProps}\n      onPointerDown={e => {\n        if (e.pointerType === 'mouse') {\n          e.preventDefault();\n          const res = focusManager?.focusNext({from: e.target as HTMLElement});\n          if (!res) {\n            focusManager?.focusPrevious({from: e.target as HTMLElement});\n          }\n        }\n      }}\n      aria-hidden\n      className=\"min-w-4 cursor-default select-none\"\n    >\n      {segment.text}\n    </div>\n  );\n}\n","import {\n  DateValue,\n  getMinimumDayInMonth,\n  getMinimumMonthInYear,\n} from '@internationalized/date';\n\nexport function getSegmentLimits(\n  date: DateValue,\n  type: string,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (type) {\n    case 'year':\n      return {\n        value: date.year,\n        placeholder: 'yyyy',\n        minValue: 1,\n        maxValue: date.calendar.getYearsInEra(date),\n      };\n    case 'month':\n      return {\n        value: date.month,\n        placeholder: 'mm',\n        minValue: getMinimumMonthInYear(date),\n        maxValue: date.calendar.getMonthsInYear(date),\n      };\n    case 'day':\n      return {\n        value: date.day,\n        minValue: getMinimumDayInMonth(date),\n        maxValue: date.calendar.getDaysInMonth(date),\n        placeholder: 'dd',\n      };\n  }\n\n  if ('hour' in date) {\n    switch (type) {\n      case 'dayPeriod':\n        return {\n          value: date.hour >= 12 ? 12 : 0,\n          minValue: 0,\n          maxValue: 12,\n          placeholder: '--',\n        };\n      case 'hour':\n        if (options.hour12) {\n          const isPM = date.hour >= 12;\n          return {\n            value: date.hour,\n            minValue: isPM ? 12 : 0,\n            maxValue: isPM ? 23 : 11,\n            placeholder: '--',\n          };\n        }\n\n        return {\n          value: date.hour,\n          minValue: 0,\n          maxValue: 23,\n          placeholder: '--',\n        };\n      case 'minute':\n        return {\n          value: date.minute,\n          minValue: 0,\n          maxValue: 59,\n          placeholder: '--',\n        };\n    }\n  }\n\n  return {};\n}\n","import React, {ComponentPropsWithoutRef, useMemo} from 'react';\nimport {ZonedDateTime} from '@internationalized/date';\nimport {EditableDateSegment, EditableSegment} from './editable-date-segment';\nimport {LiteralDateSegment, LiteralSegment} from './literal-segment';\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {getSegmentLimits} from './utils/get-segment-limits';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface DateSegmentListProps {\n  segmentProps?: ComponentPropsWithoutRef<'div'>;\n  state: DatePickerState | DateRangePickerState;\n  value: ZonedDateTime;\n  onChange: (newValue: ZonedDateTime) => void;\n  isPlaceholder?: boolean;\n}\nexport function DateSegmentList({\n  segmentProps,\n  state,\n  value,\n  onChange,\n  isPlaceholder,\n}: DateSegmentListProps) {\n  const {granularity, timezone} = state;\n  const options = useMemo(() => {\n    const memoOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      timeZone: timezone,\n    };\n    if (granularity === 'minute') {\n      memoOptions.hour = 'numeric';\n      memoOptions.minute = 'numeric';\n    }\n    return memoOptions;\n  }, [granularity, timezone]);\n\n  const formatter = useDateFormatter(options);\n\n  const dateValue = useMemo(() => value.toDate(), [value]);\n  const segments = useMemo(() => {\n    return formatter.formatToParts(dateValue).map(segment => {\n      const limits = getSegmentLimits(\n        value,\n        segment.type,\n        formatter.resolvedOptions(),\n      );\n      const textValue =\n        isPlaceholder && segment.type !== 'literal'\n          ? limits.placeholder\n          : segment.value;\n      return {\n        type: segment.type,\n        text: segment.value === ', ' ? ' ' : textValue,\n        ...limits,\n        minLength:\n          segment.type !== 'literal' ? String(limits.maxValue).length : 1,\n      } as LiteralSegment | EditableSegment;\n    });\n  }, [dateValue, formatter, isPlaceholder, value]);\n\n  return (\n    <div className=\"flex items-center\">\n      {segments.map((segment, index) => {\n        if (segment.type === 'literal') {\n          return (\n            <LiteralDateSegment\n              domProps={segmentProps}\n              key={index}\n              segment={segment}\n            />\n          );\n        }\n        return (\n          <EditableDateSegment\n            isPlaceholder={isPlaceholder}\n            domProps={segmentProps}\n            state={state}\n            value={value}\n            onChange={onChange}\n            segment={segment}\n            key={index}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  CalendarDate,\n  DateValue,\n  getDayOfWeek,\n  isSameMonth,\n  isToday,\n} from '@internationalized/date';\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {dateIsInvalid} from '../utils';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface CalendarCellProps {\n  date: CalendarDate;\n  currentMonth: DateValue;\n  state: DatePickerState | DateRangePickerState;\n}\nexport function CalendarCell({\n  date,\n  currentMonth,\n  state: {\n    dayIsActive,\n    dayIsHighlighted,\n    dayIsRangeStart,\n    dayIsRangeEnd,\n    getCellProps,\n    timezone,\n    min,\n    max,\n  },\n}: CalendarCellProps) {\n  const {localeCode} = useSelectedLocale();\n  const dayOfWeek = getDayOfWeek(date, localeCode);\n  const isActive = dayIsActive(date);\n  const isHighlighted = dayIsHighlighted(date);\n  const isRangeStart = dayIsRangeStart(date);\n  const isRangeEnd = dayIsRangeEnd(date);\n  const dayIsToday = isToday(date, timezone);\n  const sameMonth = isSameMonth(date, currentMonth);\n  const isDisabled = dateIsInvalid(date, min, max);\n\n  return (\n    <div\n      role=\"button\"\n      aria-disabled={isDisabled}\n      className={clsx(\n        'relative isolate h-40 w-40 flex-shrink-0 text-sm',\n        isDisabled && 'pointer-events-none text-disabled',\n        !sameMonth && 'pointer-events-none invisible',\n      )}\n      {...getCellProps(date, sameMonth)}\n    >\n      <span\n        className={clsx(\n          'absolute inset-0 z-10 flex h-full w-full cursor-pointer select-none items-center justify-center rounded-full',\n          !isActive && !dayIsToday && 'hover:bg-hover',\n          isActive && 'bg-primary font-semibold text-on-primary',\n          dayIsToday && !isActive && 'bg-chip',\n        )}\n      >\n        {date.day}\n      </span>\n      {isHighlighted && sameMonth && (\n        <span\n          className={clsx(\n            'absolute inset-0 h-full w-full bg-primary/focus',\n            (isRangeStart || dayOfWeek === 0 || date.day === 1) &&\n              'rounded-l-full',\n            (isRangeEnd ||\n              dayOfWeek === 6 ||\n              date.day ===\n                currentMonth.calendar.getDaysInMonth(currentMonth)) &&\n              'rounded-r-full',\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {\n  CalendarDate,\n  endOfMonth,\n  getWeeksInMonth,\n  startOfMonth,\n  startOfWeek,\n} from '@internationalized/date';\nimport {KeyboardArrowLeftIcon} from '@ui/icons/material/KeyboardArrowLeft';\nimport {IconButton} from '@ui/buttons/icon-button';\nimport {KeyboardArrowRightIcon} from '@ui/icons/material/KeyboardArrowRight';\nimport {CalendarCell} from './calendar-cell';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\nimport {useSelectedLocale} from '@ui/i18n/selected-locale';\nimport {dateIsInvalid} from '../utils';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\nexport interface CalendarMonthProps {\n  state: DatePickerState | DateRangePickerState;\n  startDate: CalendarDate;\n  isFirst: boolean;\n  isLast: boolean;\n}\nexport function CalendarMonth({\n  startDate,\n  state,\n  isFirst,\n  isLast,\n}: CalendarMonthProps) {\n  const {localeCode} = useSelectedLocale();\n  const weeksInMonth = getWeeksInMonth(startDate, localeCode);\n  const monthStart = startOfWeek(startDate, localeCode);\n\n  return (\n    <div className=\"w-280 flex-shrink-0\">\n      <CalendarMonthHeader\n        isFirst={isFirst}\n        isLast={isLast}\n        state={state}\n        currentMonth={startDate}\n      />\n      <div className=\"block\" role=\"grid\">\n        <WeekdayHeader state={state} startDate={startDate} />\n        {[...new Array(weeksInMonth).keys()].map(weekIndex => (\n          <m.div className=\"mb-6 flex\" key={weekIndex}>\n            {[...new Array(7).keys()].map(dayIndex => (\n              <CalendarCell\n                key={dayIndex}\n                date={monthStart.add({weeks: weekIndex, days: dayIndex})}\n                currentMonth={startDate}\n                state={state}\n              />\n            ))}\n          </m.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\ninterface CalendarMonthHeaderProps {\n  state: DatePickerState | DateRangePickerState;\n  currentMonth: CalendarDate;\n  isFirst: boolean;\n  isLast: boolean;\n}\nfunction CalendarMonthHeader({\n  currentMonth,\n  isFirst,\n  isLast,\n  state: {calendarDates, setCalendarDates, timezone, min, max},\n}: CalendarMonthHeaderProps) {\n  const shiftCalendars = (direction: 'forward' | 'backward') => {\n    const count = calendarDates.length;\n    let newDates: CalendarDate[];\n    if (direction === 'forward') {\n      newDates = calendarDates.map(date =>\n        endOfMonth(date.add({months: count})),\n      );\n    } else {\n      newDates = calendarDates.map(date =>\n        endOfMonth(date.subtract({months: count})),\n      );\n    }\n    setCalendarDates(newDates);\n  };\n\n  const monthFormatter = useDateFormatter({\n    month: 'long',\n    year: 'numeric',\n    era: currentMonth.calendar.identifier !== 'gregory' ? 'long' : undefined,\n    calendar: currentMonth.calendar.identifier,\n  });\n\n  const isBackwardDisabled = dateIsInvalid(\n    currentMonth.subtract({days: 1}),\n    min,\n    max,\n  );\n  const isForwardDisabled = dateIsInvalid(\n    startOfMonth(currentMonth.add({months: 1})),\n    min,\n    max,\n  );\n\n  return (\n    <div className=\"flex items-center justify-between gap-10\">\n      <IconButton\n        size=\"md\"\n        className={clsx('text-muted', !isFirst && 'invisible')}\n        disabled={!isFirst || isBackwardDisabled}\n        aria-hidden={!isFirst}\n        onClick={() => {\n          shiftCalendars('backward');\n        }}\n      >\n        <KeyboardArrowLeftIcon />\n      </IconButton>\n      <div className=\"select-none text-sm font-semibold\">\n        {monthFormatter.format(currentMonth.toDate(timezone))}\n      </div>\n      <IconButton\n        size=\"md\"\n        className={clsx('text-muted', !isLast && 'invisible')}\n        disabled={!isLast || isForwardDisabled}\n        aria-hidden={!isLast}\n        onClick={() => {\n          shiftCalendars('forward');\n        }}\n      >\n        <KeyboardArrowRightIcon />\n      </IconButton>\n    </div>\n  );\n}\n\ninterface WeekdayHeaderProps {\n  state: DatePickerState | DateRangePickerState;\n  startDate: CalendarDate;\n}\nfunction WeekdayHeader({state: {timezone}, startDate}: WeekdayHeaderProps) {\n  const {localeCode} = useSelectedLocale();\n  const dayFormatter = useDateFormatter({weekday: 'short'});\n\n  const monthStart = startOfWeek(startDate, localeCode);\n\n  return (\n    <div className=\"flex\">\n      {[...new Array(7).keys()].map(index => {\n        const date = monthStart.add({days: index});\n        const dateDay = date.toDate(timezone);\n        const weekday = dayFormatter.format(dateDay);\n        return (\n          <div\n            className=\"relative h-40 w-40 flex-shrink-0 text-sm font-semibold\"\n            key={index}\n          >\n            <div className=\"absolute flex h-full w-full select-none items-center justify-center\">\n              {weekday}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {startOfMonth, toCalendarDate} from '@internationalized/date';\nimport {useIsMobileMediaQuery} from '@ui/utils/hooks/is-mobile-media-query';\nimport {CalendarMonth} from './calendar-month';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface CalendarProps {\n  state: DatePickerState | DateRangePickerState;\n  visibleMonths?: 1 | 2;\n}\nexport function Calendar({state, visibleMonths = 1}: CalendarProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (isMobile) {\n    visibleMonths = 1;\n  }\n\n  return (\n    <Fragment>\n      {[...new Array(visibleMonths).keys()].map(index => {\n        const startDate = toCalendarDate(\n          startOfMonth(state.calendarDates[index])\n        );\n        const isFirst = index === 0;\n        const isLast = index === visibleMonths - 1;\n        return (\n          <CalendarMonth\n            key={index}\n            state={state}\n            startDate={startDate}\n            isFirst={isFirst}\n            isLast={isLast}\n          />\n        );\n      })}\n    </Fragment>\n  );\n}\n","import {DateValue, parseAbsolute} from '@internationalized/date';\nimport {Fragment, memo} from 'react';\nimport {useDateFormatter} from '@ui/i18n/use-date-formatter';\nimport {useSettings} from '@ui/settings/use-settings';\nimport {shallowEqual} from '@ui/utils/shallow-equal';\nimport {useUserTimezone} from '@ui/i18n/use-user-timezone';\nimport {DateFormatPresets} from '@ui/i18n/formatted-date';\n\ninterface FormattedDateTimeRangeProps {\n  start?: string | DateValue | Date;\n  end?: string | DateValue | Date;\n  options?: Intl.DateTimeFormatOptions;\n  preset?: keyof typeof DateFormatPresets;\n  timezone?: string;\n}\nexport const FormattedDateTimeRange = memo(\n  ({\n    start,\n    end,\n    options,\n    preset,\n    timezone: propsTimezone,\n  }: FormattedDateTimeRangeProps) => {\n    const {dates} = useSettings();\n    const userTimezone = useUserTimezone();\n    const timezone = propsTimezone || options?.timeZone || userTimezone;\n    const formatter = useDateFormatter(\n      options ||\n        (DateFormatPresets as Record<string, Intl.DateTimeFormatOptions>)[\n          preset || dates?.format\n        ],\n    );\n\n    if (!start || !end) {\n      return null;\n    }\n\n    let value: string;\n\n    try {\n      value = formatter.formatRange(\n        castToDate(start, timezone),\n        castToDate(end, timezone),\n      );\n    } catch (e) {\n      value = '';\n    }\n\n    return <Fragment>{value}</Fragment>;\n  },\n  shallowEqual,\n);\n\nfunction castToDate(date: string | DateValue | Date, timezone: string): Date {\n  if (typeof date === 'string') {\n    return parseAbsolute(date, timezone).toDate();\n  }\n  if ('toDate' in date) {\n    return date.toDate(timezone);\n  }\n  return date;\n}\n","import {List, ListItem} from '@ui/list/list';\nimport {DateRangePresets} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {Trans} from '@ui/i18n/trans';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\n\ninterface DateRangePresetList {\n  onPresetSelected: (value: DateRangeValue) => void;\n  selectedValue?: DateRangeValue | null;\n}\nexport function DatePresetList({\n  onPresetSelected,\n  selectedValue,\n}: DateRangePresetList) {\n  return (\n    <List>\n      {DateRangePresets.map(preset => (\n        <ListItem\n          borderRadius=\"rounded-none\"\n          capitalizeFirst\n          key={preset.key}\n          isSelected={selectedValue?.preset === preset.key}\n          onSelected={() => {\n            const newValue = preset.getRangeValue();\n            onPresetSelected(newValue);\n          }}\n        >\n          <Trans {...preset.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import {\n  useMediaQuery,\n  UseMediaQueryOptions,\n} from '@ui/utils/hooks/use-media-query';\n\nexport function useIsTabletMediaQuery(options?: UseMediaQueryOptions) {\n  return useMediaQuery('(max-width: 1024px)', options);\n}\n","import React, {ComponentPropsWithoutRef, ReactNode, useId} from 'react';\nimport clsx from 'clsx';\nimport {useController} from 'react-hook-form';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {InputSize} from '../input-field/input-size';\nimport {getInputFieldClassNames} from '../input-field/get-input-field-class-names';\nimport {AutoFocusProps, useAutoFocus} from '@ui/focus/use-auto-focus';\n\ninterface SwitchProps\n  extends AutoFocusProps,\n    Omit<ComponentPropsWithoutRef<'input'>, 'size'> {\n  size?: InputSize;\n  className?: string;\n  description?: ReactNode;\n  invalid?: boolean;\n  errorMessage?: string;\n  iconRight?: ReactNode;\n}\nexport const Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\n  (props, ref) => {\n    const {\n      children,\n      size = 'sm',\n      description,\n      className,\n      invalid,\n      autoFocus,\n      errorMessage,\n      iconRight,\n      ...domProps\n    } = props;\n\n    const inputRef = useObjectRef(ref);\n    useAutoFocus({autoFocus}, inputRef);\n\n    const style = getSizeClassName(size);\n    const fieldClassNames = getInputFieldClassNames(props);\n\n    const descriptionId = useId();\n\n    return (\n      <div className={clsx(className, 'isolate')}>\n        <label className=\"flex select-none items-center\">\n          <input\n            {...domProps}\n            type=\"checkbox\"\n            role=\"switch\"\n            aria-invalid={invalid || undefined}\n            aria-describedby={description ? descriptionId : undefined}\n            ref={inputRef}\n            aria-checked={domProps.checked}\n            className={clsx(\n              style,\n              !invalid &&\n                'checked:border-primary checked:bg-primary dark:checked:border-primary-dark dark:checked:bg-primary-dark',\n              invalid && 'checked:border-danger checked:bg-danger',\n              'relative flex flex-shrink-0 cursor-pointer appearance-none items-center overflow-hidden rounded-3xl border border-chip bg-chip p-0 outline-none transition-colors checked:border-primary checked:bg-primary',\n              'before:z-10 before:block before:translate-x-2 before:rounded-3xl before:border before:bg-white before:transition-transform',\n              'checked:before:border-white',\n              'focus-visible:ring',\n              props.disabled && 'cursor-not-allowed opacity-80',\n            )}\n          />\n          {children && (\n            <span\n              className={clsx(\n                fieldClassNames.size.font,\n                'ml-12',\n                invalid && 'text-danger',\n                props.disabled && 'text-disabled',\n              )}\n            >\n              {children}\n            </span>\n          )}\n          {iconRight}\n        </label>\n        {description && !errorMessage && (\n          <div id={descriptionId} className={fieldClassNames.description}>\n            {description}\n          </div>\n        )}\n        {errorMessage && (\n          <div id={descriptionId} className={fieldClassNames.error}>\n            {errorMessage}\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\ninterface FormSwitchProps extends SwitchProps {\n  name: string;\n}\nexport function FormSwitch(props: FormSwitchProps) {\n  const {\n    field: {onChange, onBlur, value = false, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<SwitchProps> = {\n    onChange: e => {\n      if (e.target.value && e.target.value !== 'on') {\n        onChange(e.target.checked ? e.target.value : false);\n      } else {\n        onChange(e);\n      }\n    },\n    onBlur,\n    checked: !!value,\n    invalid,\n    errorMessage: error?.message,\n    name: props.name,\n  };\n\n  return <Switch ref={ref} {...mergeProps(props, formProps)} />;\n}\n\nfunction getSizeClassName(size: InputSize): string {\n  switch (size) {\n    case 'xl':\n      return 'w-68 h-36 before:w-28 before:h-28 checked:before:translate-x-36';\n    case 'lg':\n      return 'w-56 h-30 before:w-22 before:h-22 checked:before:translate-x-30';\n    case 'md':\n      return 'w-46 h-24 before:w-18 before:h-18 checked:before:translate-x-24';\n    case 'xs':\n      return 'w-30 h-18 before:w-12 before:h-12 checked:before:translate-x-14';\n    default:\n      return 'w-38 h-20 before:w-14 before:h-14 checked:before:translate-x-20';\n  }\n}\n","import {message} from '@ui/i18n/message';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {MessageDescriptor} from '@ui/i18n/message-descriptor';\n\nexport interface DateRangeComparePreset {\n  key: number;\n  label: MessageDescriptor;\n  getRangeValue: (range: DateRangeValue) => DateRangeValue;\n}\n\nexport const DateRangeComparePresets: DateRangeComparePreset[] = [\n  {\n    key: 0,\n    label: message('Preceding period'),\n    getRangeValue: (range: DateRangeValue) => {\n      const startDate = range.start;\n      const endDate = range.end;\n\n      const diffInMilliseconds =\n        endDate.toDate().getTime() - startDate.toDate().getTime();\n      const diffInMinutes = diffInMilliseconds / (1000 * 60);\n      const newStart = startDate.subtract({minutes: diffInMinutes});\n      return {\n        preset: 0,\n        start: newStart,\n        end: startDate,\n      };\n    },\n  },\n  {\n    key: 1,\n    label: message('Same period last year'),\n    getRangeValue: (range: DateRangeValue) => {\n      return {\n        start: range.start.subtract({years: 1}),\n        end: range.end.subtract({years: 1}),\n        preset: 1,\n      };\n    },\n  },\n  {\n    key: 2,\n    label: message('Custom'),\n    getRangeValue: (range: DateRangeValue) => {\n      return {\n        start: range.start.subtract({weeks: 1}),\n        end: range.end.subtract({weeks: 1}),\n        preset: 2,\n      };\n    },\n  },\n];\n","import {List, ListItem} from '@ui/list/list';\nimport {Trans} from '@ui/i18n/trans';\nimport {DateRangeValue} from '@ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {DateRangeComparePresets} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\n\ninterface DateRangePresetList {\n  originalRangeValue: DateRangeValue;\n  onPresetSelected: (value: DateRangeValue) => void;\n  selectedValue?: DateRangeValue | null;\n}\nexport function DateRangeComparePresetList({\n  originalRangeValue,\n  onPresetSelected,\n  selectedValue,\n}: DateRangePresetList) {\n  return (\n    <List>\n      {DateRangeComparePresets.map(preset => (\n        <ListItem\n          borderRadius=\"rounded-none\"\n          capitalizeFirst\n          key={preset.key}\n          isSelected={selectedValue?.preset === preset.key}\n          onSelected={() => {\n            const newValue = preset.getRangeValue(originalRangeValue);\n            onPresetSelected(newValue);\n          }}\n        >\n          <Trans {...preset.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import React, {Fragment, ReactNode, useRef, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {DatePickerField} from '../date-picker-field';\nimport {DateRangePickerState} from '../use-date-range-picker-state';\nimport {Calendar} from '../../calendar/calendar';\nimport {DialogFooter} from '@ui/overlays/dialog/dialog-footer';\nimport {Button} from '@ui/buttons/button';\nimport {useDialogContext} from '@ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@ui/overlays/dialog/dialog';\nimport {DialogBody} from '@ui/overlays/dialog/dialog-body';\nimport {ArrowRightAltIcon} from '@ui/icons/material/ArrowRightAlt';\nimport {DateSegmentList} from '../../segments/date-segment-list';\nimport {Trans} from '@ui/i18n/trans';\nimport {FormattedDateTimeRange} from '@ui/i18n/formatted-date-time-range';\nimport {DatePresetList} from './date-range-preset-list';\nimport {useIsTabletMediaQuery} from '@ui/utils/hooks/is-tablet-media-query';\nimport {Switch} from '@ui/forms/toggle/switch';\nimport {DateRangeComparePresetList} from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list';\n\ninterface DateRangeDialogProps {\n  state: DateRangePickerState;\n  compareState?: DateRangePickerState;\n  compareVisibleDefault?: boolean;\n  showInlineDatePickerField?: boolean;\n}\nexport function DateRangeDialog({\n  state,\n  compareState,\n  showInlineDatePickerField = false,\n  compareVisibleDefault = false,\n}: DateRangeDialogProps) {\n  const isTablet = useIsTabletMediaQuery();\n  const {close} = useDialogContext();\n  const initialStateRef = useRef<DateRangePickerState>(state);\n  const hasPlaceholder = state.isPlaceholder.start || state.isPlaceholder.end;\n  const [compareVisible, setCompareVisible] = useState(compareVisibleDefault);\n\n  const footer = (\n    <DialogFooter\n      dividerTop\n      startAction={\n        !hasPlaceholder && !isTablet ? (\n          <div className=\"text-xs\">\n            <FormattedDateTimeRange\n              start={state.selectedValue.start.toDate()}\n              end={state.selectedValue.end.toDate()}\n              options={{dateStyle: 'medium'}}\n            />\n          </div>\n        ) : undefined\n      }\n    >\n      <Button\n        variant=\"text\"\n        size=\"xs\"\n        onClick={() => {\n          state.setSelectedValue(initialStateRef.current.selectedValue);\n          state.setIsPlaceholder(initialStateRef.current.isPlaceholder);\n          close();\n        }}\n      >\n        <Trans message=\"Cancel\" />\n      </Button>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        size=\"xs\"\n        onClick={() => {\n          const value = state.selectedValue;\n          if (compareState && compareVisible) {\n            value.compareStart = compareState.selectedValue.start;\n            value.compareEnd = compareState.selectedValue.end;\n          }\n          close(value);\n        }}\n      >\n        <Trans message=\"Select\" />\n      </Button>\n    </DialogFooter>\n  );\n\n  return (\n    <Dialog size=\"auto\">\n      <DialogBody className=\"flex\" padding=\"p-0\">\n        {!isTablet && (\n          <div className=\"min-w-192 py-14\">\n            <DatePresetList\n              selectedValue={state.selectedValue}\n              onPresetSelected={preset => {\n                state.setSelectedValue(preset);\n                if (state.closeDialogOnSelection) {\n                  close(preset);\n                }\n              }}\n            />\n            {!!compareState && (\n              <Fragment>\n                <Switch\n                  className=\"mx-20 mb-10 mt-14\"\n                  checked={compareVisible}\n                  onChange={e => setCompareVisible(e.target.checked)}\n                >\n                  <Trans message=\"Compare\" />\n                </Switch>\n                {compareVisible && (\n                  <DateRangeComparePresetList\n                    originalRangeValue={state.selectedValue}\n                    selectedValue={compareState.selectedValue}\n                    onPresetSelected={preset => {\n                      compareState.setSelectedValue(preset);\n                    }}\n                  />\n                )}\n              </Fragment>\n            )}\n          </div>\n        )}\n        <AnimatePresence initial={false}>\n          <Calendars\n            state={state}\n            compareState={compareState}\n            showInlineDatePickerField={showInlineDatePickerField}\n            compareVisible={compareVisible}\n          />\n        </AnimatePresence>\n      </DialogBody>\n      {!state.closeDialogOnSelection && footer}\n    </Dialog>\n  );\n}\n\ninterface CustomRangePanelProps {\n  state: DateRangePickerState;\n  compareState?: DateRangePickerState;\n  showInlineDatePickerField?: boolean;\n  compareVisible: boolean;\n}\nfunction Calendars({\n  state,\n  compareState,\n  showInlineDatePickerField,\n  compareVisible,\n}: CustomRangePanelProps) {\n  return (\n    <m.div\n      initial={{width: 0, overflow: 'hidden'}}\n      animate={{width: 'auto'}}\n      exit={{width: 0, overflow: 'hidden'}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"border-l px-20 pb-20 pt-10\"\n    >\n      {showInlineDatePickerField && (\n        <div>\n          <InlineDatePickerField state={state} />\n          {!!compareState && compareVisible && (\n            <InlineDatePickerField\n              state={compareState}\n              label={<Trans message=\"Compare\" />}\n            />\n          )}\n        </div>\n      )}\n      <div className=\"flex items-start gap-36\">\n        <Calendar state={state} visibleMonths={2} />\n      </div>\n    </m.div>\n  );\n}\n\ninterface InlineDatePickerFieldProps {\n  state: DateRangePickerState;\n  label?: ReactNode;\n}\nfunction InlineDatePickerField({state, label}: InlineDatePickerFieldProps) {\n  const {selectedValue, setSelectedValue} = state;\n  return (\n    <DatePickerField className=\"mb-20 mt-10\" label={label}>\n      <DateSegmentList\n        state={state}\n        value={selectedValue.start}\n        onChange={newValue => {\n          setSelectedValue({...selectedValue, start: newValue});\n        }}\n      />\n      <ArrowRightAltIcon className=\"block flex-shrink-0 text-muted\" size=\"md\" />\n      <DateSegmentList\n        state={state}\n        value={selectedValue.end}\n        onChange={newValue => {\n          setSelectedValue({...selectedValue, end: newValue});\n        }}\n      />\n    </DatePickerField>\n  );\n}\n","import {Fragment, memo} from 'react';\nimport {useNumberFormatter} from '@ui/i18n/use-number-formatter';\nimport {NumberFormatOptions} from '@internationalized/number';\nimport {shallowEqual} from '@ui/utils/shallow-equal';\n\ninterface FormattedNumberProps extends NumberFormatOptions {\n  value: number;\n}\nexport const FormattedNumber = memo(\n  ({value, ...options}: FormattedNumberProps) => {\n    const formatter = useNumberFormatter(options);\n\n    if (isNaN(value)) {\n      value = 0;\n    }\n\n    return <Fragment>{formatter.format(value)}</Fragment>;\n  },\n  shallowEqual,\n);\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ArrowBackIcon = createSvgIcon(\n  <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n, 'ArrowBackOutlined');\n","import {Fragment, memo, useEffect, useMemo, useRef, useState} from 'react';\nimport {useTrans, UseTransReturn} from '@ui/i18n/use-trans';\nimport {message} from '@ui/i18n/message';\nimport {parseAbsoluteToLocal} from '@internationalized/date';\nimport {getCurrentDateTime} from '@ui/i18n/use-current-date-time';\n\ninterface ParsedMS {\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n}\n\ninterface FormattedDurationProps {\n  ms?: number;\n  minutes?: number;\n  seconds?: number;\n  startDate?: string;\n  endDate?: string;\n  verbose?: boolean;\n  addZeroToFirstUnit?: boolean;\n  isLive?: boolean;\n  maxIsLiveMs?: number;\n  liveInterval?: number;\n  minDuration?: number;\n}\nexport const FormattedDuration = memo(\n  ({\n    minutes,\n    seconds,\n    ms: propsMs,\n    startDate: propsStartDate,\n    endDate: propsEndDate,\n    verbose = false,\n    addZeroToFirstUnit = true,\n    isLive,\n    maxIsLiveMs,\n    minDuration = 0,\n    liveInterval = 5000,\n  }: FormattedDurationProps) => {\n    const {trans} = useTrans();\n\n    const initialMs = useMemo(() => {\n      if (propsStartDate || propsEndDate) {\n        const startDate = propsStartDate\n          ? parseAbsoluteToLocal(propsStartDate)\n          : getCurrentDateTime();\n        const endDate = propsEndDate\n          ? parseAbsoluteToLocal(propsEndDate)\n          : getCurrentDateTime();\n        const diff = endDate.toDate().getTime() - startDate.toDate().getTime();\n        return diff > minDuration ? diff : minDuration;\n      }\n\n      if (minutes) {\n        return minutes * 60000;\n      } else if (seconds) {\n        return seconds * 1000;\n      }\n\n      if (!propsMs) {\n        return minDuration;\n      }\n\n      return propsMs;\n    }, [minutes, seconds, propsMs, propsStartDate, propsEndDate, minDuration]);\n\n    const [ms, setMs] = useState<number>(initialMs);\n\n    useEffect(() => {\n      setMs(initialMs);\n    }, [initialMs]);\n\n    const msRef = useRef(ms);\n    msRef.current = ms;\n\n    useEffect(() => {\n      const overMaxMs = maxIsLiveMs && msRef.current > maxIsLiveMs;\n      if (isLive && !overMaxMs) {\n        const interval = setInterval(() => {\n          setMs(prev => prev + liveInterval);\n        }, liveInterval);\n        return () => clearInterval(interval);\n      }\n    }, [isLive, liveInterval, maxIsLiveMs, initialMs]);\n\n    const unsignedMs = ms < 0 ? -ms : ms;\n    const parsedMS: ParsedMS = {\n      days: Math.trunc(unsignedMs / 86400000),\n      hours: Math.trunc(unsignedMs / 3600000) % 24,\n      minutes: Math.trunc(unsignedMs / 60000) % 60,\n      seconds: Math.trunc(unsignedMs / 1000) % 60,\n    };\n\n    let formattedValue: string;\n    if (verbose) {\n      formattedValue = formatVerbose(parsedMS, trans);\n    } else {\n      formattedValue = formatCompact(parsedMS, addZeroToFirstUnit);\n    }\n\n    return <Fragment>{formattedValue}</Fragment>;\n  },\n);\n\nfunction formatVerbose(t: ParsedMS, trans: UseTransReturn['trans']) {\n  const output: string[] = [];\n\n  if (t.days) {\n    output.push(`${t.days}${trans(message('d'))}`);\n  }\n  if (t.hours) {\n    output.push(`${t.hours}${trans(message('hr'))}`);\n  }\n  if (t.minutes) {\n    output.push(`${t.minutes}${trans(message('min'))}`);\n  }\n  if (t.seconds && !t.hours) {\n    output.push(`${t.seconds}${trans(message('sec'))}`);\n  }\n\n  return output.join(' ');\n}\n\nfunction formatCompact(t: ParsedMS, addZeroToFirstUnit = true) {\n  const seconds = addZero(t.seconds);\n  let output = '';\n  if (t.days && !output) {\n    output = `${t.days}:${addZero(t.hours)}:${addZero(t.minutes)}:${seconds}`;\n  }\n  if (t.hours && !output) {\n    output = `${addZero(t.hours, addZeroToFirstUnit)}:${addZero(\n      t.minutes,\n    )}:${seconds}`;\n  }\n  if (!output) {\n    output = `${addZero(t.minutes, addZeroToFirstUnit)}:${seconds}`;\n  }\n  return output;\n}\n\nfunction addZero(v: number, addZero = true) {\n  if (!addZero) return v;\n  let value = `${v}`;\n  if (value.length === 1) {\n    value = '0' + value;\n  }\n  return value;\n}\n"],"names":["$9446cca9a3875146$export$7d15b64cf5a3a4c4","value","min","max","$9446cca9a3875146$export$e1a7b8e69ef6c52f","step","roundedValue","stepString","pointIndex","precision","pow","$9446cca9a3875146$export$cb6e0bb50bc19463","remainder","snappedValue","$9446cca9a3875146$export$b6268554fba451f","digits","base","$6c7bd7858deea686$var$CURRENCY_SIGN_REGEX","$6c7bd7858deea686$var$NUMBERING_SYSTEMS","$6c7bd7858deea686$export$cd11ab140839f11d","$6c7bd7858deea686$var$getNumberParserImpl","minValue","maxValue","locale","options","$6c7bd7858deea686$var$numberParserCache","defaultParser","$6c7bd7858deea686$var$getCachedNumberParser","numberingSystem","parser","cacheKey","a","b","$6c7bd7858deea686$var$NumberParserImpl","fullySanitizedValue","$6c7bd7858deea686$var$replaceAll","isNegative","index","newValue","_this_options_minimumFractionDigits","_this_options_maximumFractionDigits","$488c6ddbf4ef74c2$export$cc77c4ff7e8673c5","$6c7bd7858deea686$var$getSymbols","$6c7bd7858deea686$var$nonLiteralParts","$6c7bd7858deea686$var$pluralNumbers","formatter","intlOptions","originalOptions","_allParts_find","_posAllParts_find","_decimalParts_find","_allParts_find1","symbolFormatter","allParts","posAllParts","pluralParts","n","_allParts_find_value","minusSign","p","plusSign","decimal","group","allPartsLiterals","$6c7bd7858deea686$var$escapeRegex","pluralPartsLiterals","sortedLiterals","literals","numerals","indexes","d","i","numeral","str","find","replace","string","KeyboardArrowRightIcon","createSvgIcon","jsx","startOfDay","date","endOfDay","getUserTimezone","defaultTimezone","_a","getBootstrapData","preferredTimezone","_c","_b","getLocalTimeZone","useCurrentDateTime","timezone","useUserTimezone","useMemo","now","getCurrentDateTime","Now","DateRangePresets","message","startOfWeek","endOfWeek","start","startOfMonth","endOfMonth","startOfYear","endOfYear","DateRangeIcon","Input","React","props","ref","children","inputProps","wrapperProps","className","autoFocus","style","onClick","clsx","FocusScope","DatePickerField","inputRef","onBlur","other","fieldClassNames","getInputFieldClassNames","objRef","useObjectRef","fieldProps","useField","Field","mergeProps","e","focusManager","createFocusManager","getDefaultGranularity","CalendarDate","dateIsInvalid","toSafeZoned","timeZone","disambiguation","toZoned","useBaseDatePickerState","selectedDate","userTimezone","calendarIsOpen","setCalendarIsOpen","useState","closeDialogOnSelection","granularity","useDateRangePickerState","isPlaceholder","setIsPlaceholder","setStateValue","internalValue","setInternalValue","useControlledState","completeRange","clear","useCallback","anchorDate","setAnchorDate","isHighlighting","setIsHighlighting","highlightedRange","setHighlightedRange","calendarDates","setCalendarDates","rangeToCalendarDates","constrainRange","range","end","maxDate","startMax","minDate","endMin","setSelectedValue","newRange","dayIsActive","day","isSameDay","dayIsHighlighted","dayIsRangeStart","dayIsRangeEnd","getCellProps","isSameMonth","makeRange","finalRange","toCalendarDate","ArrowRightAltIcon","adjustSegment","part","amount","hours","isPM","setSegment","segmentValue","wasPM","PAGE_STEP","EditableDateSegment","segment","domProps","onChange","isMobile","useIsMobileMediaQuery","enteredKeys","useRef","localeCode","useSelectedLocale","useFocusManager","useDateFormatter","NumberParser","setSegmentValue","adjustSegmentValue","backspace","parsed","today","onKeyDown","onInput","amPmFormatter","am","amDate","pm","pmDate","key","numberValue","allowsZero","shouldSetValue","spinButtonProps","LiteralDateSegment","getSegmentLimits","type","getMinimumMonthInYear","getMinimumDayInMonth","DateSegmentList","segmentProps","state","memoOptions","dateValue","segments","limits","textValue","CalendarCell","currentMonth","dayOfWeek","getDayOfWeek","isActive","isHighlighted","isRangeStart","isRangeEnd","dayIsToday","isToday","sameMonth","isDisabled","jsxs","CalendarMonth","startDate","isFirst","isLast","weeksInMonth","getWeeksInMonth","monthStart","CalendarMonthHeader","WeekdayHeader","weekIndex","m","dayIndex","shiftCalendars","direction","count","newDates","monthFormatter","isBackwardDisabled","isForwardDisabled","IconButton","KeyboardArrowLeftIcon","dayFormatter","dateDay","weekday","Calendar","visibleMonths","Fragment","FormattedDateTimeRange","memo","preset","propsTimezone","dates","useSettings","DateFormatPresets","castToDate","shallowEqual","parseAbsolute","DatePresetList","onPresetSelected","selectedValue","List","ListItem","Trans","useIsTabletMediaQuery","useMediaQuery","Switch","size","description","invalid","errorMessage","iconRight","useAutoFocus","getSizeClassName","descriptionId","useId","FormSwitch","error","useController","formProps","DateRangeComparePresets","diffInMinutes","DateRangeComparePresetList","originalRangeValue","DateRangeDialog","compareState","showInlineDatePickerField","compareVisibleDefault","isTablet","close","useDialogContext","initialStateRef","hasPlaceholder","compareVisible","setCompareVisible","footer","DialogFooter","Button","Dialog","DialogBody","AnimatePresence","Calendars","InlineDatePickerField","label","FormattedNumber","useNumberFormatter","ArrowBackIcon","FormattedDuration","minutes","seconds","propsMs","propsStartDate","propsEndDate","verbose","addZeroToFirstUnit","isLive","maxIsLiveMs","minDuration","liveInterval","trans","useTrans","initialMs","parseAbsoluteToLocal","diff","ms","setMs","useEffect","msRef","overMaxMs","interval","prev","unsignedMs","parsedMS","formattedValue","formatVerbose","formatCompact","t","output","addZero","v"],"mappings":"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","x_google_ignoreList":[0,1]}